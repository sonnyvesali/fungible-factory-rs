{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0","program":"/home/svesali/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","near_vm_logic","--edition=2021","/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=1a69eb1269011910","-C","extra-filename=-1a69eb1269011910","--out-dir","/home/svesali/dev/fungible-factory/target/rls/debug/deps","-L","dependency=/home/svesali/dev/fungible-factory/target/rls/debug/deps","--extern","base64=/home/svesali/dev/fungible-factory/target/rls/debug/deps/libbase64-f611919d3c69e5aa.rmeta","--extern","borsh=/home/svesali/dev/fungible-factory/target/rls/debug/deps/libborsh-af0d78201e1223c4.rmeta","--extern","bs58=/home/svesali/dev/fungible-factory/target/rls/debug/deps/libbs58-794ff71ee5da7516.rmeta","--extern","byteorder=/home/svesali/dev/fungible-factory/target/rls/debug/deps/libbyteorder-640704d6b63087ac.rmeta","--extern","near_account_id=/home/svesali/dev/fungible-factory/target/rls/debug/deps/libnear_account_id-16ec373ae2ef96c7.rmeta","--extern","near_crypto=/home/svesali/dev/fungible-factory/target/rls/debug/deps/libnear_crypto-e7a49449268547d2.rmeta","--extern","near_primitives=/home/svesali/dev/fungible-factory/target/rls/debug/deps/libnear_primitives-a9e6f8b5c7e6109a.rmeta","--extern","near_primitives_core=/home/svesali/dev/fungible-factory/target/rls/debug/deps/libnear_primitives_core-f474724e02315c06.rmeta","--extern","near_vm_errors=/home/svesali/dev/fungible-factory/target/rls/debug/deps/libnear_vm_errors-910490b00f55a62f.rmeta","--extern","ripemd160=/home/svesali/dev/fungible-factory/target/rls/debug/deps/libripemd160-dcb94ae38dfb8c06.rmeta","--extern","serde=/home/svesali/dev/fungible-factory/target/rls/debug/deps/libserde-5c89761609f8fe5a.rmeta","--extern","sha2=/home/svesali/dev/fungible-factory/target/rls/debug/deps/libsha2-50ff86c7e74bbd1f.rmeta","--extern","sha3=/home/svesali/dev/fungible-factory/target/rls/debug/deps/libsha3-b33f8a5e92b89f75.rmeta","--cap-lints","allow","-L","native=/home/svesali/dev/fungible-factory/target/rls/debug/build/parity-secp256k1-9145e84b1f17d51e/out","--error-format=json","--sysroot","/home/svesali/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/svesali/dev/fungible-factory/target/rls/debug/deps/libnear_vm_logic-1a69eb1269011910.rmeta"},"prelude":{"crate_id":{"name":"near_vm_logic","disambiguator":[6400892162283882037,0]},"crate_root":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src","external_crates":[{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14788966508543342302,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[2825088610194081445,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[9481142260376939403,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16420834686343379425,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11097033969885139948,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6800150773471260640,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9424233180753397496,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4493421558680613340,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[10587786945246582611,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6037489587312533517,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[12999623613951624675,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[15285592788019233460,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[7690318462147983057,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16937637772373355212,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[8216859446519220865,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[6387052066414425180,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[879344915155370202,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[12947071141408240460,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[12545025351940724261,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","num":20,"id":{"name":"near_primitives_core","disambiguator":[759629305602520360,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","num":21,"id":{"name":"borsh","disambiguator":[3673904446271781274,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","num":22,"id":{"name":"borsh_derive","disambiguator":[2851131059377142812,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","num":23,"id":{"name":"num_rational","disambiguator":[17133997518447720369,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","num":24,"id":{"name":"num_bigint","disambiguator":[937211381963686704,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","num":25,"id":{"name":"num_integer","disambiguator":[11457484492651475952,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","num":26,"id":{"name":"num_traits","disambiguator":[15182200206717141538,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","num":27,"id":{"name":"serde","disambiguator":[11428709997605199351,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","num":28,"id":{"name":"serde_derive","disambiguator":[10729444701356080004,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","num":29,"id":{"name":"near_account_id","disambiguator":[13967802191390742527,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":30,"id":{"name":"sha2","disambiguator":[1771759854989509010,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","num":31,"id":{"name":"block_buffer","disambiguator":[2190162513575804765,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","num":32,"id":{"name":"generic_array","disambiguator":[3507872413113695977,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","num":33,"id":{"name":"typenum","disambiguator":[2930080192617149959,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","num":34,"id":{"name":"block_padding","disambiguator":[948386422990197438,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","num":35,"id":{"name":"digest","disambiguator":[12615746790986655627,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","num":36,"id":{"name":"opaque_debug","disambiguator":[10544183973401458341,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","num":37,"id":{"name":"cfg_if","disambiguator":[3771446270907224645,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","num":38,"id":{"name":"cpufeatures","disambiguator":[16942923178064742376,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","num":39,"id":{"name":"derive_more","disambiguator":[3934412902154989875,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/serde_with.rs","num":40,"id":{"name":"bs58","disambiguator":[17261594214899441249,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","num":41,"id":{"name":"base64","disambiguator":[10218484409521972915,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","num":42,"id":{"name":"near_vm_errors","disambiguator":[9274865247627027931,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","num":43,"id":{"name":"near_rpc_error_macro","disambiguator":[14795984568756414224,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","num":44,"id":{"name":"hex","disambiguator":[13062670176842742041,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":45,"id":{"name":"byteorder","disambiguator":[38345908316595894,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":46,"id":{"name":"near_crypto","disambiguator":[2362367078324172848,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":47,"id":{"name":"arrayref","disambiguator":[15249592288835625810,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":48,"id":{"name":"blake2","disambiguator":[15518909038992697553,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":49,"id":{"name":"crypto_mac","disambiguator":[10543583101852290006,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":50,"id":{"name":"subtle","disambiguator":[10940198174520224153,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":51,"id":{"name":"curve25519_dalek","disambiguator":[6468020236884411032,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":52,"id":{"name":"rand_core","disambiguator":[431508322817272223,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":53,"id":{"name":"getrandom","disambiguator":[13429929329686936404,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":54,"id":{"name":"libc","disambiguator":[16078242550846372511,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":55,"id":{"name":"zeroize","disambiguator":[6004326225906361023,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":56,"id":{"name":"zeroize_derive","disambiguator":[11330209499750584716,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":57,"id":{"name":"c2_chacha","disambiguator":[7274474112759464081,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":58,"id":{"name":"ppv_lite86","disambiguator":[3927748370373369900,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":59,"id":{"name":"cipher","disambiguator":[8596286950111231793,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":60,"id":{"name":"ed25519_dalek","disambiguator":[16053523258317299925,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":61,"id":{"name":"ed25519","disambiguator":[7951988873791354507,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":62,"id":{"name":"signature","disambiguator":[8663432830220002918,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":63,"id":{"name":"rand","disambiguator":[15976999529552911968,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":64,"id":{"name":"rand_chacha","disambiguator":[4713538712046164213,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":65,"id":{"name":"lazy_static","disambiguator":[18045484163755490912,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":66,"id":{"name":"primitive_types","disambiguator":[9274742543425322086,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":67,"id":{"name":"fixed_hash","disambiguator":[8853242748827448424,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":68,"id":{"name":"static_assertions","disambiguator":[16681284127034793250,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":69,"id":{"name":"rustc_hex","disambiguator":[13871859263977307286,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":70,"id":{"name":"rand","disambiguator":[9228808773655584916,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":71,"id":{"name":"rand_core","disambiguator":[15870896743663284134,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":72,"id":{"name":"getrandom","disambiguator":[10274629119404806137,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":73,"id":{"name":"uint","disambiguator":[5155238342361811565,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":74,"id":{"name":"crunchy","disambiguator":[5078268860497246743,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":75,"id":{"name":"impl_codec","disambiguator":[6493748117847597153,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":76,"id":{"name":"parity_scale_codec","disambiguator":[11441275331932551131,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":77,"id":{"name":"parity_scale_codec_derive","disambiguator":[11247393006391737159,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":78,"id":{"name":"arrayvec","disambiguator":[17570390050859790690,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":79,"id":{"name":"byte_slice_cast","disambiguator":[9733089393729035916,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":80,"id":{"name":"impl_trait_for_tuples","disambiguator":[13025977476463080947,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":81,"id":{"name":"secp256k1","disambiguator":[8457048006429780127,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":82,"id":{"name":"arrayvec","disambiguator":[686123037491235101,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":83,"id":{"name":"thiserror","disambiguator":[13299596688941569463,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":84,"id":{"name":"thiserror_impl","disambiguator":[6094722173658845375,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":85,"id":{"name":"serde_json","disambiguator":[11627393251085729027,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":86,"id":{"name":"indexmap","disambiguator":[1770161356241053166,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":87,"id":{"name":"hashbrown","disambiguator":[7421933551660796166,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":88,"id":{"name":"ahash","disambiguator":[14165158940292848227,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":89,"id":{"name":"once_cell","disambiguator":[8782194372562591136,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":90,"id":{"name":"itoa","disambiguator":[270418426861410454,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":91,"id":{"name":"ryu","disambiguator":[9495708289465993403,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":92,"id":{"name":"near_primitives","disambiguator":[7577636813347161763,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":93,"id":{"name":"chrono","disambiguator":[7648164262159154194,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":94,"id":{"name":"time","disambiguator":[11297340881272035267,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":95,"id":{"name":"smart_default","disambiguator":[11162550434656056421,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":96,"id":{"name":"reed_solomon_erasure","disambiguator":[16071070429073140083,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":97,"id":{"name":"smallvec","disambiguator":[10927382968747842108,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":98,"id":{"name":"easy_ext","disambiguator":[1213016978176697486,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":99,"id":{"name":"bytesize","disambiguator":[377697297973688482,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":100,"id":{"name":"sha3","disambiguator":[18080216520932352388,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":101,"id":{"name":"keccak","disambiguator":[5193917404010708189,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","num":102,"id":{"name":"ripemd160","disambiguator":[1412473075554468790,0]}},{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/serde_with.rs","num":103,"id":{"name":"base64","disambiguator":[8640583072220045819,0]}}],"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/lib.rs","byte_start":0,"byte_end":608,"line_start":1,"line_end":23,"column_start":1,"column_end":44}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":612},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/serde_with.rs","byte_start":152973,"byte_end":152982,"line_start":140,"line_end":140,"column_start":37,"column_end":46},"alias_span":null,"name":"serialize","value":"","parent":{"krate":0,"index":617}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/types.rs","byte_start":153520,"byte_end":153521,"line_start":3,"line_end":3,"column_start":38,"column_end":39},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":634}},{"kind":"Use","ref_id":{"krate":0,"index":702},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/lib.rs","byte_start":248,"byte_end":257,"line_start":14,"line_end":14,"column_start":18,"column_end":27},"alias_span":null,"name":"VMContext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":72},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/lib.rs","byte_start":282,"byte_end":290,"line_start":15,"line_end":15,"column_start":24,"column_end":32},"alias_span":null,"name":"External","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":62},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/lib.rs","byte_start":292,"byte_end":302,"line_start":15,"line_end":15,"column_start":34,"column_end":44},"alias_span":null,"name":"MemoryLike","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":69},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/lib.rs","byte_start":304,"byte_end":312,"line_start":15,"line_end":15,"column_start":46,"column_end":54},"alias_span":null,"name":"ValuePtr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":283},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/lib.rs","byte_start":331,"byte_end":338,"line_start":16,"line_end":16,"column_start":17,"column_end":24},"alias_span":null,"name":"VMLogic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1020},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/lib.rs","byte_start":340,"byte_end":349,"line_start":16,"line_end":16,"column_start":26,"column_end":35},"alias_span":null,"name":"VMOutcome","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/lib.rs","byte_start":390,"byte_end":391,"line_start":17,"line_end":17,"column_start":39,"column_end":40},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":242},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/lib.rs","byte_start":423,"byte_end":430,"line_start":18,"line_end":18,"column_start":31,"column_end":38},"alias_span":null,"name":"profile","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":550},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/lib.rs","byte_start":469,"byte_end":484,"line_start":19,"line_end":19,"column_start":38,"column_end":53},"alias_span":null,"name":"ProtocolVersion","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":42,"index":729},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/lib.rs","byte_start":511,"byte_end":520,"line_start":20,"line_end":20,"column_start":26,"column_end":35},"alias_span":null,"name":"HostError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":42,"index":1544},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/lib.rs","byte_start":522,"byte_end":534,"line_start":20,"line_end":20,"column_start":37,"column_end":49},"alias_span":null,"name":"VMLogicError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1848},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/lib.rs","byte_start":552,"byte_end":562,"line_start":21,"line_end":21,"column_start":16,"column_end":26},"alias_span":null,"name":"ReturnData","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":127},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/lib.rs","byte_start":586,"byte_end":607,"line_start":23,"line_end":23,"column_start":22,"column_end":43},"alias_span":null,"name":"with_ext_cost_counter","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/lib.rs","byte_start":0,"byte_end":608,"line_start":1,"line_end":23,"column_start":1,"column_end":44},"name":"","qualname":"::","value":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":41},{"krate":0,"index":93},{"krate":0,"index":173},{"krate":0,"index":412},{"krate":0,"index":493},{"krate":0,"index":634},{"krate":0,"index":649},{"krate":0,"index":662},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":669},{"krate":0,"index":672},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":679},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":686},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":693},{"krate":0,"index":696},{"krate":0,"index":699}],"decl_id":null,"docs":"# near-vm-logic","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":702},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":975,"byte_end":984,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"VMContext","qualname":"::context::VMContext","value":"VMContext { current_account_id, signer_account_id, signer_account_pk, predecessor_account_id, input, block_index, block_timestamp, epoch_height, account_balance, account_locked_balance, storage_usage, attached_deposit, prepaid_gas, random_seed, view_config, output_data_receivers }","parent":null,"children":[{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":980},{"krate":0,"index":705},{"krate":0,"index":981},{"krate":0,"index":706},{"krate":0,"index":982},{"krate":0,"index":707},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":708},{"krate":0,"index":985},{"krate":0,"index":709},{"krate":0,"index":986},{"krate":0,"index":710},{"krate":0,"index":711}],"decl_id":null,"docs":" Context for the contract execution.\n","sig":null,"attributes":[{"value":"/ Context for the contract execution.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":924,"byte_end":963,"line_start":10,"line_end":10,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":703},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":1065,"byte_end":1083,"line_start":13,"line_end":13,"column_start":9,"column_end":27},"name":"current_account_id","qualname":"::context::VMContext::current_account_id","value":"near_primitives_core::types::AccountId","parent":{"krate":0,"index":702},"children":[],"decl_id":null,"docs":" The account id of the current contract that we are executing.\n","sig":null,"attributes":[{"value":"/ The account id of the current contract that we are executing.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":991,"byte_end":1056,"line_start":12,"line_end":12,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":704},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":1203,"byte_end":1220,"line_start":16,"line_end":16,"column_start":9,"column_end":26},"name":"signer_account_id","qualname":"::context::VMContext::signer_account_id","value":"near_primitives_core::types::AccountId","parent":{"krate":0,"index":702},"children":[],"decl_id":null,"docs":" The account id of that signed the original transaction that led to this\n execution.\n","sig":null,"attributes":[{"value":"/ The account id of that signed the original transaction that led to this","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":1100,"byte_end":1175,"line_start":14,"line_end":14,"column_start":5,"column_end":80}},{"value":"/ execution.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":1180,"byte_end":1194,"line_start":15,"line_end":15,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":980},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":1405,"byte_end":1422,"line_start":20,"line_end":20,"column_start":9,"column_end":26},"name":"signer_account_pk","qualname":"::context::VMContext::signer_account_pk","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":702},"children":[],"decl_id":null,"docs":" The public key that was used to sign the original transaction that led to\n this execution.\n","sig":null,"attributes":[{"value":"serde(with = \"crate::serde_with::bytes_as_base58\")","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":1237,"byte_end":1290,"line_start":17,"line_end":17,"column_start":5,"column_end":58}},{"value":"/ The public key that was used to sign the original transaction that led to","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":1295,"byte_end":1372,"line_start":18,"line_end":18,"column_start":5,"column_end":82}},{"value":"/ this execution.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":1377,"byte_end":1396,"line_start":19,"line_end":19,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":705},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":1700,"byte_end":1722,"line_start":25,"line_end":25,"column_start":9,"column_end":31},"name":"predecessor_account_id","qualname":"::context::VMContext::predecessor_account_id","value":"near_primitives_core::types::AccountId","parent":{"krate":0,"index":702},"children":[],"decl_id":null,"docs":" If this execution is the result of cross-contract call or a callback then\n predecessor is the account that called it.\n If this execution is the result of direct execution of transaction then it\n is equal to `signer_account_id`.\n","sig":null,"attributes":[{"value":"/ If this execution is the result of cross-contract call or a callback then","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":1439,"byte_end":1516,"line_start":21,"line_end":21,"column_start":5,"column_end":82}},{"value":"/ predecessor is the account that called it.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":1521,"byte_end":1567,"line_start":22,"line_end":22,"column_start":5,"column_end":51}},{"value":"/ If this execution is the result of direct execution of transaction then it","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":1572,"byte_end":1650,"line_start":23,"line_end":23,"column_start":5,"column_end":83}},{"value":"/ is equal to `signer_account_id`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":1655,"byte_end":1691,"line_start":24,"line_end":24,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":981},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":1923,"byte_end":1928,"line_start":29,"line_end":29,"column_start":9,"column_end":14},"name":"input","qualname":"::context::VMContext::input","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":702},"children":[],"decl_id":null,"docs":" The input to the contract call.\n Encoded as base64 string to be able to pass input in borsh binary format.\n","sig":null,"attributes":[{"value":"/ The input to the contract call.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":1739,"byte_end":1774,"line_start":26,"line_end":26,"column_start":5,"column_end":40}},{"value":"/ Encoded as base64 string to be able to pass input in borsh binary format.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":1779,"byte_end":1856,"line_start":27,"line_end":27,"column_start":5,"column_end":82}},{"value":"serde(with = \"crate::serde_with::bytes_as_base64\")","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":1861,"byte_end":1914,"line_start":28,"line_end":28,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":706},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":2024,"byte_end":2035,"line_start":32,"line_end":32,"column_start":9,"column_end":20},"name":"block_index","qualname":"::context::VMContext::block_index","value":"u64","parent":{"krate":0,"index":702},"children":[],"decl_id":null,"docs":" The current block height.\n","sig":null,"attributes":[{"value":"/ The current block height.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":1943,"byte_end":1972,"line_start":30,"line_end":30,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":982},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":2200,"byte_end":2215,"line_start":35,"line_end":35,"column_start":9,"column_end":24},"name":"block_timestamp","qualname":"::context::VMContext::block_timestamp","value":"u64","parent":{"krate":0,"index":702},"children":[],"decl_id":null,"docs":" The current block timestamp (number of non-leap-nanoseconds since January 1, 1970 0:00:00 UTC).\n","sig":null,"attributes":[{"value":"/ The current block timestamp (number of non-leap-nanoseconds since January 1, 1970 0:00:00 UTC).","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":2054,"byte_end":2153,"line_start":33,"line_end":33,"column_start":5,"column_end":104}},{"value":"serde(with = \"u64_dec_format\")","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":2158,"byte_end":2191,"line_start":34,"line_end":34,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":707},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":2264,"byte_end":2276,"line_start":37,"line_end":37,"column_start":9,"column_end":21},"name":"epoch_height","qualname":"::context::VMContext::epoch_height","value":"u64","parent":{"krate":0,"index":702},"children":[],"decl_id":null,"docs":" The current epoch height.\n","sig":null,"attributes":[{"value":"/ The current epoch height.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":2226,"byte_end":2255,"line_start":36,"line_end":36,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":983},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":2498,"byte_end":2513,"line_start":42,"line_end":42,"column_start":9,"column_end":24},"name":"account_balance","qualname":"::context::VMContext::account_balance","value":"u128","parent":{"krate":0,"index":702},"children":[],"decl_id":null,"docs":" The balance attached to the given account. Excludes the `attached_deposit` that was\n attached to the transaction.\n","sig":null,"attributes":[{"value":"/ The balance attached to the given account. Excludes the `attached_deposit` that was","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":2296,"byte_end":2383,"line_start":39,"line_end":39,"column_start":5,"column_end":92}},{"value":"/ attached to the transaction.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":2388,"byte_end":2420,"line_start":40,"line_end":40,"column_start":5,"column_end":37}},{"value":"serde(with = \"crate::serde_with::u128_dec_format_compatible\")","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":2425,"byte_end":2489,"line_start":41,"line_end":41,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":984},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":2660,"byte_end":2682,"line_start":45,"line_end":45,"column_start":9,"column_end":31},"name":"account_locked_balance","qualname":"::context::VMContext::account_locked_balance","value":"u128","parent":{"krate":0,"index":702},"children":[],"decl_id":null,"docs":" The balance of locked tokens on the given account.\n","sig":null,"attributes":[{"value":"/ The balance of locked tokens on the given account.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":2528,"byte_end":2582,"line_start":43,"line_end":43,"column_start":5,"column_end":59}},{"value":"serde(with = \"crate::serde_with::u128_dec_format_compatible\")","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":2587,"byte_end":2651,"line_start":44,"line_end":44,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":708},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":2767,"byte_end":2780,"line_start":47,"line_end":47,"column_start":9,"column_end":22},"name":"storage_usage","qualname":"::context::VMContext::storage_usage","value":"u64","parent":{"krate":0,"index":702},"children":[],"decl_id":null,"docs":" The account's storage usage before the contract execution\n","sig":null,"attributes":[{"value":"/ The account's storage usage before the contract execution","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":2697,"byte_end":2758,"line_start":46,"line_end":46,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":985},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":3004,"byte_end":3020,"line_start":51,"line_end":51,"column_start":9,"column_end":25},"name":"attached_deposit","qualname":"::context::VMContext::attached_deposit","value":"u128","parent":{"krate":0,"index":702},"children":[],"decl_id":null,"docs":" The balance that was attached to the call that will be immediately deposited before the\n contract execution starts.\n","sig":null,"attributes":[{"value":"/ The balance that was attached to the call that will be immediately deposited before the","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":2800,"byte_end":2891,"line_start":48,"line_end":48,"column_start":5,"column_end":96}},{"value":"/ contract execution starts.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":2896,"byte_end":2926,"line_start":49,"line_end":49,"column_start":5,"column_end":35}},{"value":"serde(with = \"crate::serde_with::u128_dec_format_compatible\")","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":2931,"byte_end":2995,"line_start":50,"line_end":50,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":709},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":3118,"byte_end":3129,"line_start":53,"line_end":53,"column_start":9,"column_end":20},"name":"prepaid_gas","qualname":"::context::VMContext::prepaid_gas","value":"u64","parent":{"krate":0,"index":702},"children":[],"decl_id":null,"docs":" The gas attached to the call that can be used to pay for the gas fees.\n","sig":null,"attributes":[{"value":"/ The gas attached to the call that can be used to pay for the gas fees.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":3035,"byte_end":3109,"line_start":52,"line_end":52,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":986},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":3238,"byte_end":3249,"line_start":56,"line_end":56,"column_start":9,"column_end":20},"name":"random_seed","qualname":"::context::VMContext::random_seed","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":702},"children":[],"decl_id":null,"docs":" Initial seed for randomness\n","sig":null,"attributes":[{"value":"serde(with = \"crate::serde_with::bytes_as_base58\")","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":3140,"byte_end":3193,"line_start":54,"line_end":54,"column_start":5,"column_end":58}},{"value":"/ Initial seed for randomness","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":3198,"byte_end":3229,"line_start":55,"line_end":55,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":710},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":3521,"byte_end":3532,"line_start":60,"line_end":60,"column_start":9,"column_end":20},"name":"view_config","qualname":"::context::VMContext::view_config","value":"std::option::Option<near_primitives_core::config::ViewConfig>","parent":{"krate":0,"index":702},"children":[],"decl_id":null,"docs":" If Some, it means that execution is made in a view mode and defines its configuration.\n View mode means that only read-only operations are allowed.\n See <https://nomicon.io/Proposals/0018-view-change-method.html> for more details.\n","sig":null,"attributes":[{"value":"/ If Some, it means that execution is made in a view mode and defines its configuration.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":3264,"byte_end":3354,"line_start":57,"line_end":57,"column_start":5,"column_end":95}},{"value":"/ View mode means that only read-only operations are allowed.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":3359,"byte_end":3422,"line_start":58,"line_end":58,"column_start":5,"column_end":68}},{"value":"/ See <https://nomicon.io/Proposals/0018-view-change-method.html> for more details.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":3427,"byte_end":3512,"line_start":59,"line_end":59,"column_start":5,"column_end":90}}]},{"kind":"Field","id":{"krate":0,"index":711},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":3736,"byte_end":3757,"line_start":63,"line_end":63,"column_start":9,"column_end":30},"name":"output_data_receivers","qualname":"::context::VMContext::output_data_receivers","value":"std::vec::Vec<near_primitives_core::types::AccountId>","parent":{"krate":0,"index":702},"children":[],"decl_id":null,"docs":" How many `DataReceipt`'s should receive this execution result. This should be empty if\n this function call is a part of a batch and it is not the last action.\n","sig":null,"attributes":[{"value":"/ How many `DataReceipt`'s should receive this execution result. This should be empty if","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":3558,"byte_end":3648,"line_start":61,"line_end":61,"column_start":5,"column_end":95}},{"value":"/ this function call is a part of a batch and it is not the last action.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":3653,"byte_end":3727,"line_start":62,"line_end":62,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":3806,"byte_end":3813,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"is_view","qualname":"<VMContext>::is_view","value":"pub fn is_view(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":62},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":4132,"byte_end":4142,"line_start":8,"line_end":8,"column_start":11,"column_end":21},"name":"MemoryLike","qualname":"::dependencies::MemoryLike","value":"MemoryLike","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66}],"decl_id":null,"docs":" An abstraction over the memory of the smart contract.\n","sig":null,"attributes":[{"value":"/ An abstraction over the memory of the smart contract.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":4064,"byte_end":4121,"line_start":7,"line_end":7,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":4244,"byte_end":4255,"line_start":10,"line_end":10,"column_start":8,"column_end":19},"name":"fits_memory","qualname":"::dependencies::MemoryLike::fits_memory","value":"pub fn fits_memory(&Self, u64, u64) -> bool","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Returns whether the memory interval is completely inside the smart contract memory.\n","sig":null,"attributes":[{"value":"/ Returns whether the memory interval is completely inside the smart contract memory.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":4149,"byte_end":4236,"line_start":9,"line_end":9,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":4457,"byte_end":4468,"line_start":17,"line_end":17,"column_start":8,"column_end":19},"name":"read_memory","qualname":"::dependencies::MemoryLike::read_memory","value":"pub fn read_memory(&Self, u64, &mut [u8])","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Reads the content of the given memory interval.","sig":null,"attributes":[{"value":"/ Reads the content of the given memory interval.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":4300,"byte_end":4351,"line_start":12,"line_end":12,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":4356,"byte_end":4359,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":4364,"byte_end":4376,"line_start":14,"line_end":14,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":4381,"byte_end":4384,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ If memory interval is outside the smart contract memory.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":4389,"byte_end":4449,"line_start":16,"line_end":16,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":4652,"byte_end":4666,"line_start":24,"line_end":24,"column_start":8,"column_end":22},"name":"read_memory_u8","qualname":"::dependencies::MemoryLike::read_memory_u8","value":"pub fn read_memory_u8(&Self, u64) -> u8","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Reads a single byte from the memory.","sig":null,"attributes":[{"value":"/ Reads a single byte from the memory.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":4514,"byte_end":4554,"line_start":19,"line_end":19,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":4559,"byte_end":4562,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":4567,"byte_end":4579,"line_start":21,"line_end":21,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":4584,"byte_end":4587,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ If pointer is outside the smart contract memory.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":4592,"byte_end":4644,"line_start":23,"line_end":23,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":4866,"byte_end":4878,"line_start":31,"line_end":31,"column_start":8,"column_end":20},"name":"write_memory","qualname":"::dependencies::MemoryLike::write_memory","value":"pub fn write_memory(&mut Self, u64, &[u8])","parent":{"krate":0,"index":62},"children":[],"decl_id":null,"docs":" Writes the buffer into the smart contract memory.","sig":null,"attributes":[{"value":"/ Writes the buffer into the smart contract memory.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":4699,"byte_end":4752,"line_start":26,"line_end":26,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":4757,"byte_end":4760,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":4765,"byte_end":4777,"line_start":28,"line_end":28,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":4782,"byte_end":4785,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ If `offset + buffer.len()` is outside the smart contract memory.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":4790,"byte_end":4858,"line_start":30,"line_end":30,"column_start":5,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":69},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":5196,"byte_end":5204,"line_start":39,"line_end":39,"column_start":11,"column_end":19},"name":"ValuePtr","qualname":"::dependencies::ValuePtr","value":"ValuePtr","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":71}],"decl_id":null,"docs":" Logical pointer to a value in storage.\n Allows getting value length before getting the value itself. This is needed so that runtime\n can charge gas before accessing a potentially large value.\n","sig":null,"attributes":[{"value":"/ Logical pointer to a value in storage.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":4984,"byte_end":5026,"line_start":36,"line_end":36,"column_start":1,"column_end":43}},{"value":"/ Allows getting value length before getting the value itself. This is needed so that runtime","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":5027,"byte_end":5122,"line_start":37,"line_end":37,"column_start":1,"column_end":96}},{"value":"/ can charge gas before accessing a potentially large value.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":5123,"byte_end":5185,"line_start":38,"line_end":38,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":5254,"byte_end":5257,"line_start":41,"line_end":41,"column_start":8,"column_end":11},"name":"len","qualname":"::dependencies::ValuePtr::len","value":"pub fn len(&Self) -> u32","parent":{"krate":0,"index":69},"children":[],"decl_id":null,"docs":" Returns the length of the value\n","sig":null,"attributes":[{"value":"/ Returns the length of the value","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":5211,"byte_end":5246,"line_start":40,"line_end":40,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":5457,"byte_end":5462,"line_start":47,"line_end":47,"column_start":8,"column_end":13},"name":"deref","qualname":"::dependencies::ValuePtr::deref","value":"pub fn deref(&Self) -> Result<Vec<u8>>","parent":{"krate":0,"index":69},"children":[],"decl_id":null,"docs":" Dereferences the pointer.\n Takes a box because currently runtime code uses dynamic dispatch.\n # Errors\n StorageError if reading from storage fails\n","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":5278,"byte_end":5307,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"/ Takes a box because currently runtime code uses dynamic dispatch.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":5312,"byte_end":5381,"line_start":44,"line_end":44,"column_start":5,"column_end":74}},{"value":"/ # Errors","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":5386,"byte_end":5398,"line_start":45,"line_end":45,"column_start":5,"column_end":17}},{"value":"/ StorageError if reading from storage fails","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":5403,"byte_end":5449,"line_start":46,"line_end":46,"column_start":5,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":72},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":5562,"byte_end":5570,"line_start":51,"line_end":51,"column_start":11,"column_end":19},"name":"External","qualname":"::dependencies::External","value":"External","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92}],"decl_id":null,"docs":" An external blockchain interface for the Runtime logic\n","sig":null,"attributes":[{"value":"/ An external blockchain interface for the Runtime logic","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":5493,"byte_end":5551,"line_start":50,"line_end":50,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":6100,"byte_end":6111,"line_start":65,"line_end":65,"column_start":8,"column_end":19},"name":"storage_set","qualname":"::dependencies::External::storage_set","value":"pub fn storage_set(&mut Self, &[u8], &[u8]) -> Result<()>","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" Write `value` to the `key` of the storage trie associated with the current account.","sig":null,"attributes":[{"value":"/ Write `value` to the `key` of the storage trie associated with the current account.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":5577,"byte_end":5664,"line_start":52,"line_end":52,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":5669,"byte_end":5672,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":5677,"byte_end":5690,"line_start":54,"line_end":54,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":5695,"byte_end":5698,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":5703,"byte_end":5710,"line_start":56,"line_end":56,"column_start":5,"column_end":12}},{"value":"/ # use near_vm_logic::mocks::mock_external::MockedExternal;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":5715,"byte_end":5777,"line_start":57,"line_end":57,"column_start":5,"column_end":67}},{"value":"/ # use near_vm_logic::External;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":5782,"byte_end":5816,"line_start":58,"line_end":58,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":5821,"byte_end":5824,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ # let mut external = MockedExternal::new();","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":5829,"byte_end":5876,"line_start":60,"line_end":60,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(external.storage_set(b\"key42\", b\"value1337\"), Ok(()));","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":5881,"byte_end":5950,"line_start":61,"line_end":61,"column_start":5,"column_end":74}},{"value":"/ // Should return an old value if the key exists","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":5955,"byte_end":6006,"line_start":62,"line_end":62,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(external.storage_set(b\"key42\", b\"new_value\"), Ok(()));","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":6011,"byte_end":6080,"line_start":63,"line_end":63,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":6085,"byte_end":6092,"line_start":64,"line_end":64,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":6988,"byte_end":6999,"line_start":88,"line_end":88,"column_start":8,"column_end":19},"name":"storage_get","qualname":"::dependencies::External::storage_get","value":"pub fn storage_get<'a>(&'a Self, &[u8])\n-> Result<Option<Box<dyn ValuePtr + 'a>>>","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" Read `key` from the storage trie associated with the current account.","sig":null,"attributes":[{"value":"/ Read `key` from the storage trie associated with the current account.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":6169,"byte_end":6242,"line_start":67,"line_end":67,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":6247,"byte_end":6250,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":6255,"byte_end":6270,"line_start":69,"line_end":69,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":6275,"byte_end":6278,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ * `key` - the key to read","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":6283,"byte_end":6312,"line_start":71,"line_end":71,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":6317,"byte_end":6320,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":6325,"byte_end":6337,"line_start":73,"line_end":73,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":6342,"byte_end":6345,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ This function could return [`VMError::ExternalError`].","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":6350,"byte_end":6408,"line_start":75,"line_end":75,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":6413,"byte_end":6416,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":6421,"byte_end":6434,"line_start":77,"line_end":77,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":6439,"byte_end":6446,"line_start":78,"line_end":78,"column_start":5,"column_end":12}},{"value":"/ # use near_vm_logic::mocks::mock_external::MockedExternal;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":6451,"byte_end":6513,"line_start":79,"line_end":79,"column_start":5,"column_end":67}},{"value":"/ # use near_vm_logic::{External, ValuePtr};","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":6518,"byte_end":6564,"line_start":80,"line_end":80,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":6569,"byte_end":6572,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # let mut external = MockedExternal::new();","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":6577,"byte_end":6624,"line_start":82,"line_end":82,"column_start":5,"column_end":52}},{"value":"/ external.storage_set(b\"key42\", b\"value1337\").unwrap();","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":6629,"byte_end":6687,"line_start":83,"line_end":83,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(external.storage_get(b\"key42\").unwrap().map(|ptr| ptr.deref().unwrap()), Some(b\"value1337\".to_vec()));","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":6692,"byte_end":6809,"line_start":84,"line_end":84,"column_start":5,"column_end":122}},{"value":"/ // Returns Ok(None) if there is no value for a key","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":6814,"byte_end":6868,"line_start":85,"line_end":85,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(external.storage_get(b\"no_key\").unwrap().map(|ptr| ptr.deref().unwrap()), None);","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":6873,"byte_end":6968,"line_start":86,"line_end":86,"column_start":5,"column_end":100}},{"value":"/ ```","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":6973,"byte_end":6980,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":7799,"byte_end":7813,"line_start":110,"line_end":110,"column_start":8,"column_end":22},"name":"storage_remove","qualname":"::dependencies::External::storage_remove","value":"pub fn storage_remove(&mut Self, &[u8]) -> Result<()>","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" Removes the `key` from the storage trie associated with the current account.","sig":null,"attributes":[{"value":"/ Removes the `key` from the storage trie associated with the current account.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":7074,"byte_end":7154,"line_start":90,"line_end":90,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":7159,"byte_end":7162,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ The operation will succeed even if the `key` does not exist.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":7167,"byte_end":7231,"line_start":92,"line_end":92,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":7236,"byte_end":7239,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":7244,"byte_end":7259,"line_start":94,"line_end":94,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":7264,"byte_end":7267,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ * `key` - the key to remove","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":7272,"byte_end":7303,"line_start":96,"line_end":96,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":7308,"byte_end":7311,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":7316,"byte_end":7329,"line_start":98,"line_end":98,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":7334,"byte_end":7341,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ # use near_vm_logic::mocks::mock_external::MockedExternal;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":7346,"byte_end":7408,"line_start":100,"line_end":100,"column_start":5,"column_end":67}},{"value":"/ # use near_vm_logic::External;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":7413,"byte_end":7447,"line_start":101,"line_end":101,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":7452,"byte_end":7455,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # let mut external = MockedExternal::new();","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":7460,"byte_end":7507,"line_start":103,"line_end":103,"column_start":5,"column_end":52}},{"value":"/ external.storage_set(b\"key42\", b\"value1337\").unwrap();","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":7512,"byte_end":7570,"line_start":104,"line_end":104,"column_start":5,"column_end":63}},{"value":"/ // Returns Ok if exists","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":7575,"byte_end":7602,"line_start":105,"line_end":105,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(external.storage_remove(b\"key42\"), Ok(()));","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":7607,"byte_end":7665,"line_start":106,"line_end":106,"column_start":5,"column_end":63}},{"value":"/ // Returns Ok if there was no value","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":7670,"byte_end":7709,"line_start":107,"line_end":107,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(external.storage_remove(b\"no_value_key\"), Ok(()));","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":7714,"byte_end":7779,"line_start":108,"line_end":108,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":7784,"byte_end":7791,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":8673,"byte_end":8695,"line_start":135,"line_end":135,"column_start":8,"column_end":30},"name":"storage_remove_subtree","qualname":"::dependencies::External::storage_remove_subtree","value":"pub fn storage_remove_subtree(&mut Self, &[u8]) -> Result<()>","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" Removes all keys with a given `prefix` from the storage trie associated with current\n account.","sig":null,"attributes":[{"value":"/ Removes all keys with a given `prefix` from the storage trie associated with current","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":7857,"byte_end":7945,"line_start":112,"line_end":112,"column_start":5,"column_end":93}},{"value":"/ account.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":7950,"byte_end":7962,"line_start":113,"line_end":113,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":7967,"byte_end":7970,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":7975,"byte_end":7990,"line_start":115,"line_end":115,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":7995,"byte_end":7998,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ * `prefix` - a prefix for all keys to remove","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":8003,"byte_end":8051,"line_start":117,"line_end":117,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":8056,"byte_end":8059,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":8064,"byte_end":8076,"line_start":119,"line_end":119,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":8081,"byte_end":8084,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ This function could return [`VMError`].","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":8089,"byte_end":8132,"line_start":121,"line_end":121,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":8137,"byte_end":8140,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":8145,"byte_end":8158,"line_start":123,"line_end":123,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":8163,"byte_end":8170,"line_start":124,"line_end":124,"column_start":5,"column_end":12}},{"value":"/ # use near_vm_logic::mocks::mock_external::MockedExternal;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":8175,"byte_end":8237,"line_start":125,"line_end":125,"column_start":5,"column_end":67}},{"value":"/ # use near_vm_logic::External;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":8242,"byte_end":8276,"line_start":126,"line_end":126,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":8281,"byte_end":8284,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # let mut external = MockedExternal::new();","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":8289,"byte_end":8336,"line_start":128,"line_end":128,"column_start":5,"column_end":52}},{"value":"/ external.storage_set(b\"key1\", b\"value1337\").unwrap();","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":8341,"byte_end":8398,"line_start":129,"line_end":129,"column_start":5,"column_end":62}},{"value":"/ external.storage_set(b\"key2\", b\"value1337\").unwrap();","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":8403,"byte_end":8460,"line_start":130,"line_end":130,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(external.storage_remove_subtree(b\"key\"), Ok(()));","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":8465,"byte_end":8529,"line_start":131,"line_end":131,"column_start":5,"column_end":69}},{"value":"/ assert!(!external.storage_has_key(b\"key1\").unwrap());","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":8534,"byte_end":8591,"line_start":132,"line_end":132,"column_start":5,"column_end":62}},{"value":"/ assert!(!external.storage_has_key(b\"key2\").unwrap());","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":8596,"byte_end":8653,"line_start":133,"line_end":133,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":8658,"byte_end":8665,"line_start":134,"line_end":134,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":9602,"byte_end":9617,"line_start":161,"line_end":161,"column_start":8,"column_end":23},"name":"storage_has_key","qualname":"::dependencies::External::storage_has_key","value":"pub fn storage_has_key(&mut Self, &[u8]) -> Result<bool>","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" Check whether the `key` is present in the storage trie associated with the current account.","sig":null,"attributes":[{"value":"/ Check whether the `key` is present in the storage trie associated with the current account.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":8742,"byte_end":8837,"line_start":137,"line_end":137,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":8842,"byte_end":8845,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ Returns `Ok(true)` if key is present, `Ok(false)` if the key is not present.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":8850,"byte_end":8930,"line_start":139,"line_end":139,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":8935,"byte_end":8938,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":8943,"byte_end":8958,"line_start":141,"line_end":141,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":8963,"byte_end":8966,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ * `key` - a key to check","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":8971,"byte_end":8999,"line_start":143,"line_end":143,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":9004,"byte_end":9007,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":9012,"byte_end":9024,"line_start":145,"line_end":145,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":9029,"byte_end":9032,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ This function could return [`VMError::RuntimeError`].","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":9037,"byte_end":9094,"line_start":147,"line_end":147,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":9099,"byte_end":9102,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":9107,"byte_end":9120,"line_start":149,"line_end":149,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":9125,"byte_end":9132,"line_start":150,"line_end":150,"column_start":5,"column_end":12}},{"value":"/ # use near_vm_logic::mocks::mock_external::MockedExternal;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":9137,"byte_end":9199,"line_start":151,"line_end":151,"column_start":5,"column_end":67}},{"value":"/ # use near_vm_logic::External;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":9204,"byte_end":9238,"line_start":152,"line_end":152,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":9243,"byte_end":9246,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # let mut external = MockedExternal::new();","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":9251,"byte_end":9298,"line_start":154,"line_end":154,"column_start":5,"column_end":52}},{"value":"/ external.storage_set(b\"key42\", b\"value1337\").unwrap();","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":9303,"byte_end":9361,"line_start":155,"line_end":155,"column_start":5,"column_end":63}},{"value":"/ // Returns value if exists","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":9366,"byte_end":9396,"line_start":156,"line_end":156,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(external.storage_has_key(b\"key42\"), Ok(true));","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":9401,"byte_end":9462,"line_start":157,"line_end":157,"column_start":5,"column_end":66}},{"value":"/ // Returns None if there was no value","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":9467,"byte_end":9508,"line_start":158,"line_end":158,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(external.storage_has_key(b\"no_value_key\"), Ok(false));","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":9513,"byte_end":9582,"line_start":159,"line_end":159,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":9587,"byte_end":9594,"line_start":160,"line_end":160,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":10482,"byte_end":10496,"line_start":183,"line_end":183,"column_start":8,"column_end":22},"name":"create_receipt","qualname":"::dependencies::External::create_receipt","value":"pub fn create_receipt(&mut Self, Vec<ReceiptIndex>, AccountId)\n-> Result<ReceiptIndex>","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" Create a receipt which will be executed after all the receipts identified by\n `receipt_indices` are complete.","sig":null,"attributes":[{"value":"/ Create a receipt which will be executed after all the receipts identified by","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":9663,"byte_end":9743,"line_start":163,"line_end":163,"column_start":5,"column_end":85}},{"value":"/ `receipt_indices` are complete.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":9748,"byte_end":9783,"line_start":164,"line_end":164,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":9788,"byte_end":9791,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ If any of the [`RecepitIndex`]es do not refer to a known receipt, this function will fail","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":9796,"byte_end":9889,"line_start":166,"line_end":166,"column_start":5,"column_end":98}},{"value":"/ with an error.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":9894,"byte_end":9912,"line_start":167,"line_end":167,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":9917,"byte_end":9920,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":9925,"byte_end":9940,"line_start":169,"line_end":169,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":9945,"byte_end":9948,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ * `receipt_indices` - a list of receipt indices the new receipt is depend on","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":9953,"byte_end":10033,"line_start":171,"line_end":171,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":10038,"byte_end":10041,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":10046,"byte_end":10059,"line_start":173,"line_end":173,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":10064,"byte_end":10071,"line_start":174,"line_end":174,"column_start":5,"column_end":12}},{"value":"/ # use near_vm_logic::mocks::mock_external::MockedExternal;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":10076,"byte_end":10138,"line_start":175,"line_end":175,"column_start":5,"column_end":67}},{"value":"/ # use near_vm_logic::External;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":10143,"byte_end":10177,"line_start":176,"line_end":176,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":10182,"byte_end":10185,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # let mut external = MockedExternal::new();","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":10190,"byte_end":10237,"line_start":178,"line_end":178,"column_start":5,"column_end":52}},{"value":"/ let receipt_index_one = external.create_receipt(vec![], \"charli.near\".parse().unwrap()).unwrap();","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":10242,"byte_end":10343,"line_start":179,"line_end":179,"column_start":5,"column_end":106}},{"value":"/ let receipt_index_two = external.create_receipt(vec![receipt_index_one], \"bob.near\".parse().unwrap());","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":10348,"byte_end":10454,"line_start":180,"line_end":180,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":10459,"byte_end":10462,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":10467,"byte_end":10474,"line_start":182,"line_end":182,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":11313,"byte_end":11341,"line_start":209,"line_end":209,"column_start":8,"column_end":36},"name":"append_action_create_account","qualname":"::dependencies::External::append_action_create_account","value":"pub fn append_action_create_account(&mut Self, ReceiptIndex) -> Result<()>","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" Attach the [`CreateAccountAction`] action to an existing receipt.","sig":null,"attributes":[{"value":"/ Attach the [`CreateAccountAction`] action to an existing receipt.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":10629,"byte_end":10698,"line_start":189,"line_end":189,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":10703,"byte_end":10706,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":10711,"byte_end":10726,"line_start":191,"line_end":191,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":10731,"byte_end":10734,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ * `receipt_index` - an index of Receipt to append an action","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":10739,"byte_end":10802,"line_start":193,"line_end":193,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":10807,"byte_end":10810,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":10815,"byte_end":10828,"line_start":195,"line_end":195,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":10833,"byte_end":10840,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/ # use near_vm_logic::mocks::mock_external::MockedExternal;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":10845,"byte_end":10907,"line_start":197,"line_end":197,"column_start":5,"column_end":67}},{"value":"/ # use near_vm_logic::External;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":10912,"byte_end":10946,"line_start":198,"line_end":198,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":10951,"byte_end":10954,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ # let mut external = MockedExternal::new();","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":10959,"byte_end":11006,"line_start":200,"line_end":200,"column_start":5,"column_end":52}},{"value":"/ let receipt_index = external.create_receipt(vec![], \"charli.near\".parse().unwrap()).unwrap();","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":11011,"byte_end":11108,"line_start":201,"line_end":201,"column_start":5,"column_end":102}},{"value":"/ external.append_action_create_account(receipt_index).unwrap();","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":11113,"byte_end":11179,"line_start":202,"line_end":202,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":11184,"byte_end":11187,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":11192,"byte_end":11199,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":11204,"byte_end":11207,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":11212,"byte_end":11224,"line_start":206,"line_end":206,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":11229,"byte_end":11232,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ Panics if the `receipt_index` does not refer to a known receipt.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":11237,"byte_end":11305,"line_start":208,"line_end":208,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":12163,"byte_end":12192,"line_start":232,"line_end":232,"column_start":8,"column_end":37},"name":"append_action_deploy_contract","qualname":"::dependencies::External::append_action_deploy_contract","value":"pub fn append_action_deploy_contract(&mut Self, ReceiptIndex, Vec<u8>)\n-> Result<()>","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" Attach the [`DeployContractAction`] action to an existing receipt.","sig":null,"attributes":[{"value":"/ Attach the [`DeployContractAction`] action to an existing receipt.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":11402,"byte_end":11472,"line_start":211,"line_end":211,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":11477,"byte_end":11480,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":11485,"byte_end":11500,"line_start":213,"line_end":213,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":11505,"byte_end":11508,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ * `receipt_index` - an index of Receipt to append an action","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":11513,"byte_end":11576,"line_start":215,"line_end":215,"column_start":5,"column_end":68}},{"value":"/ * `code` - a Wasm code to attach","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":11581,"byte_end":11617,"line_start":216,"line_end":216,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":11622,"byte_end":11625,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":11630,"byte_end":11643,"line_start":218,"line_end":218,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":11648,"byte_end":11651,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":11656,"byte_end":11663,"line_start":220,"line_end":220,"column_start":5,"column_end":12}},{"value":"/ # use near_vm_logic::mocks::mock_external::MockedExternal;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":11668,"byte_end":11730,"line_start":221,"line_end":221,"column_start":5,"column_end":67}},{"value":"/ # use near_vm_logic::External;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":11735,"byte_end":11769,"line_start":222,"line_end":222,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":11774,"byte_end":11777,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # let mut external = MockedExternal::new();","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":11782,"byte_end":11829,"line_start":224,"line_end":224,"column_start":5,"column_end":52}},{"value":"/ let receipt_index = external.create_receipt(vec![], \"charli.near\".parse().unwrap()).unwrap();","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":11834,"byte_end":11931,"line_start":225,"line_end":225,"column_start":5,"column_end":102}},{"value":"/ external.append_action_deploy_contract(receipt_index, b\"some valid Wasm code\".to_vec()).unwrap();","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":11936,"byte_end":12037,"line_start":226,"line_end":226,"column_start":5,"column_end":106}},{"value":"/ ```","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":12042,"byte_end":12049,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":12054,"byte_end":12057,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":12062,"byte_end":12074,"line_start":229,"line_end":229,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":12079,"byte_end":12082,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ Panics if the `receipt_index` does not refer to a known receipt.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":12087,"byte_end":12155,"line_start":231,"line_end":231,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":13387,"byte_end":13414,"line_start":268,"line_end":268,"column_start":8,"column_end":35},"name":"append_action_function_call","qualname":"::dependencies::External::append_action_function_call","value":"pub fn append_action_function_call(&mut Self, ReceiptIndex, Vec<u8>, Vec<u8>,\nBalance, Gas) -> Result<()>","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" Attach the [`FunctionCallAction`] action to an existing receipt.","sig":null,"attributes":[{"value":"/ Attach the [`FunctionCallAction`] action to an existing receipt.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":12299,"byte_end":12367,"line_start":238,"line_end":238,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":12372,"byte_end":12375,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":12380,"byte_end":12395,"line_start":240,"line_end":240,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":12400,"byte_end":12403,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ * `receipt_index` - an index of Receipt to append an action","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":12408,"byte_end":12471,"line_start":242,"line_end":242,"column_start":5,"column_end":68}},{"value":"/ * `method_name` - a name of the contract method to call","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":12476,"byte_end":12535,"line_start":243,"line_end":243,"column_start":5,"column_end":64}},{"value":"/ * `arguments` - a Wasm code to attach","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":12540,"byte_end":12581,"line_start":244,"line_end":244,"column_start":5,"column_end":46}},{"value":"/ * `attached_deposit` - amount of tokens to transfer with the call","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":12586,"byte_end":12655,"line_start":245,"line_end":245,"column_start":5,"column_end":74}},{"value":"/ * `prepaid_gas` - amount of prepaid gas to attach to the call","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":12660,"byte_end":12725,"line_start":246,"line_end":246,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":12730,"byte_end":12733,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":12738,"byte_end":12751,"line_start":248,"line_end":248,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":12756,"byte_end":12759,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":12764,"byte_end":12771,"line_start":250,"line_end":250,"column_start":5,"column_end":12}},{"value":"/ # use near_vm_logic::mocks::mock_external::MockedExternal;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":12776,"byte_end":12838,"line_start":251,"line_end":251,"column_start":5,"column_end":67}},{"value":"/ # use near_vm_logic::External;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":12843,"byte_end":12877,"line_start":252,"line_end":252,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":12882,"byte_end":12885,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # let mut external = MockedExternal::new();","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":12890,"byte_end":12937,"line_start":254,"line_end":254,"column_start":5,"column_end":52}},{"value":"/ let receipt_index = external.create_receipt(vec![], \"charli.near\".parse().unwrap()).unwrap();","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":12942,"byte_end":13039,"line_start":255,"line_end":255,"column_start":5,"column_end":102}},{"value":"/ external.append_action_function_call(","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":13044,"byte_end":13085,"line_start":256,"line_end":256,"column_start":5,"column_end":46}},{"value":"/     receipt_index,","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":13090,"byte_end":13112,"line_start":257,"line_end":257,"column_start":5,"column_end":27}},{"value":"/     b\"method_name\".to_vec(),","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":13117,"byte_end":13149,"line_start":258,"line_end":258,"column_start":5,"column_end":37}},{"value":"/     b\"{serialised: arguments}\".to_vec(),","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":13154,"byte_end":13198,"line_start":259,"line_end":259,"column_start":5,"column_end":49}},{"value":"/     100000u128,","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":13203,"byte_end":13222,"line_start":260,"line_end":260,"column_start":5,"column_end":24}},{"value":"/     100u64","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":13227,"byte_end":13241,"line_start":261,"line_end":261,"column_start":5,"column_end":19}},{"value":"/ ).unwrap();","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":13246,"byte_end":13261,"line_start":262,"line_end":262,"column_start":5,"column_end":20}},{"value":"/ ```","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":13266,"byte_end":13273,"line_start":263,"line_end":263,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":13278,"byte_end":13281,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":13286,"byte_end":13298,"line_start":265,"line_end":265,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":13303,"byte_end":13306,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ Panics if the `receipt_index` does not refer to a known receipt.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":13311,"byte_end":13379,"line_start":267,"line_end":267,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":14387,"byte_end":14409,"line_start":301,"line_end":301,"column_start":8,"column_end":30},"name":"append_action_transfer","qualname":"::dependencies::External::append_action_transfer","value":"pub fn append_action_transfer(&mut Self, ReceiptIndex, Balance) -> Result<()>","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" Attach the [`TransferAction`] action to an existing receipt.","sig":null,"attributes":[{"value":"/ Attach the [`TransferAction`] action to an existing receipt.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":13617,"byte_end":13681,"line_start":277,"line_end":277,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":13686,"byte_end":13689,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":13694,"byte_end":13709,"line_start":279,"line_end":279,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":13714,"byte_end":13717,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ * `receipt_index` - an index of Receipt to append an action","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":13722,"byte_end":13785,"line_start":281,"line_end":281,"column_start":5,"column_end":68}},{"value":"/ * `amount` - amount of tokens to transfer","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":13790,"byte_end":13835,"line_start":282,"line_end":282,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":13840,"byte_end":13843,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":13848,"byte_end":13861,"line_start":284,"line_end":284,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":13866,"byte_end":13869,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":13874,"byte_end":13881,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ # use near_vm_logic::mocks::mock_external::MockedExternal;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":13886,"byte_end":13948,"line_start":287,"line_end":287,"column_start":5,"column_end":67}},{"value":"/ # use near_vm_logic::External;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":13953,"byte_end":13987,"line_start":288,"line_end":288,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":13992,"byte_end":13995,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ # let mut external = MockedExternal::new();","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":14000,"byte_end":14047,"line_start":290,"line_end":290,"column_start":5,"column_end":52}},{"value":"/ let receipt_index = external.create_receipt(vec![], \"charli.near\".parse().unwrap()).unwrap();","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":14052,"byte_end":14149,"line_start":291,"line_end":291,"column_start":5,"column_end":102}},{"value":"/ external.append_action_transfer(","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":14154,"byte_end":14190,"line_start":292,"line_end":292,"column_start":5,"column_end":41}},{"value":"/     receipt_index,","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":14195,"byte_end":14217,"line_start":293,"line_end":293,"column_start":5,"column_end":27}},{"value":"/     100000u128,","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":14222,"byte_end":14241,"line_start":294,"line_end":294,"column_start":5,"column_end":24}},{"value":"/ ).unwrap();","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":14246,"byte_end":14261,"line_start":295,"line_end":295,"column_start":5,"column_end":20}},{"value":"/ ```","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":14266,"byte_end":14273,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":14278,"byte_end":14281,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":14286,"byte_end":14298,"line_start":298,"line_end":298,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":14303,"byte_end":14306,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ Panics if the `receipt_index` does not refer to a known receipt.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":14311,"byte_end":14379,"line_start":300,"line_end":300,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":15366,"byte_end":15385,"line_start":333,"line_end":333,"column_start":8,"column_end":27},"name":"append_action_stake","qualname":"::dependencies::External::append_action_stake","value":"pub fn append_action_stake(&mut Self, ReceiptIndex, Balance, PublicKey)\n-> Result<()>","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" Attach the [`StakeAction`] action to an existing receipt.","sig":null,"attributes":[{"value":"/ Attach the [`StakeAction`] action to an existing receipt.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":14518,"byte_end":14579,"line_start":307,"line_end":307,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":14584,"byte_end":14587,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":14592,"byte_end":14607,"line_start":309,"line_end":309,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":14612,"byte_end":14615,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ * `receipt_index` - an index of Receipt to append an action","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":14620,"byte_end":14683,"line_start":311,"line_end":311,"column_start":5,"column_end":68}},{"value":"/ * `stake` - amount of tokens to stake","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":14688,"byte_end":14729,"line_start":312,"line_end":312,"column_start":5,"column_end":46}},{"value":"/ * `public_key` - a validator public key","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":14734,"byte_end":14777,"line_start":313,"line_end":313,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":14782,"byte_end":14785,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":14790,"byte_end":14803,"line_start":315,"line_end":315,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":14808,"byte_end":14811,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":14816,"byte_end":14823,"line_start":317,"line_end":317,"column_start":5,"column_end":12}},{"value":"/ # use near_vm_logic::mocks::mock_external::MockedExternal;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":14828,"byte_end":14890,"line_start":318,"line_end":318,"column_start":5,"column_end":67}},{"value":"/ # use near_vm_logic::External;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":14895,"byte_end":14929,"line_start":319,"line_end":319,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":14934,"byte_end":14937,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ # let mut external = MockedExternal::new();","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":14942,"byte_end":14989,"line_start":321,"line_end":321,"column_start":5,"column_end":52}},{"value":"/ let receipt_index = external.create_receipt(vec![], \"charli.near\".parse().unwrap()).unwrap();","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":14994,"byte_end":15091,"line_start":322,"line_end":322,"column_start":5,"column_end":102}},{"value":"/ external.append_action_stake(","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":15096,"byte_end":15129,"line_start":323,"line_end":323,"column_start":5,"column_end":38}},{"value":"/     receipt_index,","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":15134,"byte_end":15156,"line_start":324,"line_end":324,"column_start":5,"column_end":27}},{"value":"/     100000u128,","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":15161,"byte_end":15180,"line_start":325,"line_end":325,"column_start":5,"column_end":24}},{"value":"/     b\"some public key\".to_vec()","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":15185,"byte_end":15220,"line_start":326,"line_end":326,"column_start":5,"column_end":40}},{"value":"/ ).unwrap();","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":15225,"byte_end":15240,"line_start":327,"line_end":327,"column_start":5,"column_end":20}},{"value":"/ ```","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":15245,"byte_end":15252,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":15257,"byte_end":15260,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":15265,"byte_end":15277,"line_start":330,"line_end":330,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":15282,"byte_end":15285,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ Panics if the `receipt_index` does not refer to a known receipt.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":15290,"byte_end":15358,"line_start":332,"line_end":332,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":16376,"byte_end":16414,"line_start":366,"line_end":366,"column_start":8,"column_end":46},"name":"append_action_add_key_with_full_access","qualname":"::dependencies::External::append_action_add_key_with_full_access","value":"pub fn append_action_add_key_with_full_access(&mut Self, ReceiptIndex,\nPublicKey, u64) -> Result<()>","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" Attach the [`AddKeyAction`] action to an existing receipt.","sig":null,"attributes":[{"value":"/ Attach the [`AddKeyAction`] action to an existing receipt.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":15524,"byte_end":15586,"line_start":340,"line_end":340,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":15591,"byte_end":15594,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":15599,"byte_end":15614,"line_start":342,"line_end":342,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":15619,"byte_end":15622,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ * `receipt_index` - an index of Receipt to append an action","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":15627,"byte_end":15690,"line_start":344,"line_end":344,"column_start":5,"column_end":68}},{"value":"/ * `public_key` - a public key for an access key","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":15695,"byte_end":15746,"line_start":345,"line_end":345,"column_start":5,"column_end":56}},{"value":"/ * `nonce` - a nonce","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":15751,"byte_end":15774,"line_start":346,"line_end":346,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":15779,"byte_end":15782,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":15787,"byte_end":15800,"line_start":348,"line_end":348,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":15805,"byte_end":15808,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":15813,"byte_end":15820,"line_start":350,"line_end":350,"column_start":5,"column_end":12}},{"value":"/ # use near_vm_logic::mocks::mock_external::MockedExternal;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":15825,"byte_end":15887,"line_start":351,"line_end":351,"column_start":5,"column_end":67}},{"value":"/ # use near_vm_logic::External;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":15892,"byte_end":15926,"line_start":352,"line_end":352,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":15931,"byte_end":15934,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ # let mut external = MockedExternal::new();","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":15939,"byte_end":15986,"line_start":354,"line_end":354,"column_start":5,"column_end":52}},{"value":"/ let receipt_index = external.create_receipt(vec![], \"charli.near\".parse().unwrap()).unwrap();","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":15991,"byte_end":16088,"line_start":355,"line_end":355,"column_start":5,"column_end":102}},{"value":"/ external.append_action_add_key_with_full_access(","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":16093,"byte_end":16145,"line_start":356,"line_end":356,"column_start":5,"column_end":57}},{"value":"/     receipt_index,","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":16150,"byte_end":16172,"line_start":357,"line_end":357,"column_start":5,"column_end":27}},{"value":"/     b\"some public key\".to_vec(),","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":16177,"byte_end":16213,"line_start":358,"line_end":358,"column_start":5,"column_end":41}},{"value":"/     0u64","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":16218,"byte_end":16230,"line_start":359,"line_end":359,"column_start":5,"column_end":17}},{"value":"/ ).unwrap();","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":16235,"byte_end":16250,"line_start":360,"line_end":360,"column_start":5,"column_end":20}},{"value":"/ ```","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":16255,"byte_end":16262,"line_start":361,"line_end":361,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":16267,"byte_end":16270,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":16275,"byte_end":16287,"line_start":363,"line_end":363,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":16292,"byte_end":16295,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ Panics if the `receipt_index` does not refer to a known receipt.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":16300,"byte_end":16368,"line_start":365,"line_end":365,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":17923,"byte_end":17963,"line_start":408,"line_end":408,"column_start":8,"column_end":48},"name":"append_action_add_key_with_function_call","qualname":"::dependencies::External::append_action_add_key_with_function_call","value":"pub fn append_action_add_key_with_function_call(&mut Self, ReceiptIndex,\nPublicKey, u64, Option<Balance>, AccountId, Vec<Vec<u8>>) -> Result<()>","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" Attach the [`AddKeyAction`] action an existing receipt.","sig":null,"attributes":[{"value":"/ Attach the [`AddKeyAction`] action an existing receipt.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":16549,"byte_end":16608,"line_start":373,"line_end":373,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":16613,"byte_end":16616,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ The access key associated with the action will have the","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":16621,"byte_end":16680,"line_start":375,"line_end":375,"column_start":5,"column_end":64}},{"value":"/ [`AccessKeyPermission::FunctionCall`] permission scope.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":16685,"byte_end":16744,"line_start":376,"line_end":376,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":16749,"byte_end":16752,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":16757,"byte_end":16772,"line_start":378,"line_end":378,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":16777,"byte_end":16780,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ * `receipt_index` - an index of Receipt to append an action","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":16785,"byte_end":16848,"line_start":380,"line_end":380,"column_start":5,"column_end":68}},{"value":"/ * `public_key` - a public key for an access key","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":16853,"byte_end":16904,"line_start":381,"line_end":381,"column_start":5,"column_end":56}},{"value":"/ * `nonce` - a nonce","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":16909,"byte_end":16932,"line_start":382,"line_end":382,"column_start":5,"column_end":28}},{"value":"/ * `allowance` - amount of tokens allowed to spend by this access key","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":16937,"byte_end":17009,"line_start":383,"line_end":383,"column_start":5,"column_end":77}},{"value":"/ * `receiver_id` - a contract witch will be allowed to call with this access key","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":17014,"byte_end":17097,"line_start":384,"line_end":384,"column_start":5,"column_end":88}},{"value":"/ * `method_names` - a list of method names is allowed to call with this access key (empty = any method)","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":17102,"byte_end":17208,"line_start":385,"line_end":385,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":17213,"byte_end":17216,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":17221,"byte_end":17234,"line_start":387,"line_end":387,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":17239,"byte_end":17242,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":17247,"byte_end":17254,"line_start":389,"line_end":389,"column_start":5,"column_end":12}},{"value":"/ # use near_vm_logic::mocks::mock_external::MockedExternal;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":17259,"byte_end":17321,"line_start":390,"line_end":390,"column_start":5,"column_end":67}},{"value":"/ # use near_vm_logic::External;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":17326,"byte_end":17360,"line_start":391,"line_end":391,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":17365,"byte_end":17368,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ # let mut external = MockedExternal::new();","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":17373,"byte_end":17420,"line_start":393,"line_end":393,"column_start":5,"column_end":52}},{"value":"/ let receipt_index = external.create_receipt(vec![], \"charli.near\".parse().unwrap()).unwrap();","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":17425,"byte_end":17522,"line_start":394,"line_end":394,"column_start":5,"column_end":102}},{"value":"/ external.append_action_add_key_with_function_call(","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":17527,"byte_end":17581,"line_start":395,"line_end":395,"column_start":5,"column_end":59}},{"value":"/     receipt_index,","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":17586,"byte_end":17608,"line_start":396,"line_end":396,"column_start":5,"column_end":27}},{"value":"/     b\"some public key\".to_vec(),","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":17613,"byte_end":17649,"line_start":397,"line_end":397,"column_start":5,"column_end":41}},{"value":"/     0u64,","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":17654,"byte_end":17667,"line_start":398,"line_end":398,"column_start":5,"column_end":18}},{"value":"/     None,","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":17672,"byte_end":17685,"line_start":399,"line_end":399,"column_start":5,"column_end":18}},{"value":"/     \"bob.near\".parse().unwrap(),","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":17690,"byte_end":17726,"line_start":400,"line_end":400,"column_start":5,"column_end":41}},{"value":"/     vec![b\"foo\".to_vec(), b\"bar\".to_vec()]","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":17731,"byte_end":17777,"line_start":401,"line_end":401,"column_start":5,"column_end":51}},{"value":"/ ).unwrap();","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":17782,"byte_end":17797,"line_start":402,"line_end":402,"column_start":5,"column_end":20}},{"value":"/ ```","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":17802,"byte_end":17809,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":17814,"byte_end":17817,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":17822,"byte_end":17834,"line_start":405,"line_end":405,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":17839,"byte_end":17842,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ Panics if the `receipt_index` does not refer to a known receipt.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":17847,"byte_end":17915,"line_start":407,"line_end":407,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":19007,"byte_end":19031,"line_start":442,"line_end":442,"column_start":8,"column_end":32},"name":"append_action_delete_key","qualname":"::dependencies::External::append_action_delete_key","value":"pub fn append_action_delete_key(&mut Self, ReceiptIndex, PublicKey)\n-> Result<()>","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" Attach the [`DeleteKeyAction`] action to an existing receipt.","sig":null,"attributes":[{"value":"/ Attach the [`DeleteKeyAction`] action to an existing receipt.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":18202,"byte_end":18267,"line_start":418,"line_end":418,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":18272,"byte_end":18275,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":18280,"byte_end":18295,"line_start":420,"line_end":420,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":18300,"byte_end":18303,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ * `receipt_index` - an index of Receipt to append an action","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":18308,"byte_end":18371,"line_start":422,"line_end":422,"column_start":5,"column_end":68}},{"value":"/ * `public_key` - a public key for an access key to delete","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":18376,"byte_end":18437,"line_start":423,"line_end":423,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":18442,"byte_end":18445,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":18450,"byte_end":18463,"line_start":425,"line_end":425,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":18468,"byte_end":18471,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":18476,"byte_end":18483,"line_start":427,"line_end":427,"column_start":5,"column_end":12}},{"value":"/ # use near_vm_logic::mocks::mock_external::MockedExternal;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":18488,"byte_end":18550,"line_start":428,"line_end":428,"column_start":5,"column_end":67}},{"value":"/ # use near_vm_logic::External;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":18555,"byte_end":18589,"line_start":429,"line_end":429,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":18594,"byte_end":18597,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ # let mut external = MockedExternal::new();","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":18602,"byte_end":18649,"line_start":431,"line_end":431,"column_start":5,"column_end":52}},{"value":"/ let receipt_index = external.create_receipt(vec![], \"charli.near\".parse().unwrap()).unwrap();","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":18654,"byte_end":18751,"line_start":432,"line_end":432,"column_start":5,"column_end":102}},{"value":"/ external.append_action_delete_key(","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":18756,"byte_end":18794,"line_start":433,"line_end":433,"column_start":5,"column_end":43}},{"value":"/     receipt_index,","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":18799,"byte_end":18821,"line_start":434,"line_end":434,"column_start":5,"column_end":27}},{"value":"/     b\"some public key\".to_vec()","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":18826,"byte_end":18861,"line_start":435,"line_end":435,"column_start":5,"column_end":40}},{"value":"/ ).unwrap();","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":18866,"byte_end":18881,"line_start":436,"line_end":436,"column_start":5,"column_end":20}},{"value":"/ ```","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":18886,"byte_end":18893,"line_start":437,"line_end":437,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":18898,"byte_end":18901,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":18906,"byte_end":18918,"line_start":439,"line_end":439,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":18923,"byte_end":18926,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ Panics if the `receipt_index` does not refer to a known receipt.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":18931,"byte_end":18999,"line_start":441,"line_end":441,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":20004,"byte_end":20032,"line_start":472,"line_end":472,"column_start":8,"column_end":36},"name":"append_action_delete_account","qualname":"::dependencies::External::append_action_delete_account","value":"pub fn append_action_delete_account(&mut Self, ReceiptIndex, AccountId)\n-> Result<()>","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" Attach the [`DeleteAccountAction`] action to an existing receipt","sig":null,"attributes":[{"value":"/ Attach the [`DeleteAccountAction`] action to an existing receipt","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":19146,"byte_end":19214,"line_start":448,"line_end":448,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":19219,"byte_end":19222,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":19227,"byte_end":19242,"line_start":450,"line_end":450,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":19247,"byte_end":19250,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ * `receipt_index` - an index of Receipt to append an action","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":19255,"byte_end":19318,"line_start":452,"line_end":452,"column_start":5,"column_end":68}},{"value":"/ * `beneficiary_id` - an account id to which the rest of the funds of the removed account will be transferred","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":19323,"byte_end":19435,"line_start":453,"line_end":453,"column_start":5,"column_end":117}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":19440,"byte_end":19443,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":19448,"byte_end":19461,"line_start":455,"line_end":455,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":19466,"byte_end":19469,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":19474,"byte_end":19481,"line_start":457,"line_end":457,"column_start":5,"column_end":12}},{"value":"/ # use near_vm_logic::mocks::mock_external::MockedExternal;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":19486,"byte_end":19548,"line_start":458,"line_end":458,"column_start":5,"column_end":67}},{"value":"/ # use near_vm_logic::External;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":19553,"byte_end":19587,"line_start":459,"line_end":459,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":19592,"byte_end":19595,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ # let mut external = MockedExternal::new();","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":19600,"byte_end":19647,"line_start":461,"line_end":461,"column_start":5,"column_end":52}},{"value":"/ let receipt_index = external.create_receipt(vec![], \"charli.near\".parse().unwrap()).unwrap();","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":19652,"byte_end":19749,"line_start":462,"line_end":462,"column_start":5,"column_end":102}},{"value":"/ external.append_action_delete_account(","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":19754,"byte_end":19796,"line_start":463,"line_end":463,"column_start":5,"column_end":47}},{"value":"/     receipt_index,","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":19801,"byte_end":19823,"line_start":464,"line_end":464,"column_start":5,"column_end":27}},{"value":"/     \"sam\".parse().unwrap()","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":19828,"byte_end":19858,"line_start":465,"line_end":465,"column_start":5,"column_end":35}},{"value":"/ ).unwrap();","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":19863,"byte_end":19878,"line_start":466,"line_end":466,"column_start":5,"column_end":20}},{"value":"/ ```","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":19883,"byte_end":19890,"line_start":467,"line_end":467,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":19895,"byte_end":19898,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":19903,"byte_end":19915,"line_start":469,"line_end":469,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":19920,"byte_end":19923,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ Panics if the `receipt_index` does not refer to a known receipt.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":19928,"byte_end":19996,"line_start":471,"line_end":471,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":20221,"byte_end":20244,"line_start":479,"line_end":479,"column_start":8,"column_end":31},"name":"get_touched_nodes_count","qualname":"::dependencies::External::get_touched_nodes_count","value":"pub fn get_touched_nodes_count(&Self) -> u64","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" Returns amount of touched trie nodes by storage operations\n","sig":null,"attributes":[{"value":"/ Returns amount of touched trie nodes by storage operations","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":20151,"byte_end":20213,"line_start":478,"line_end":478,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":20334,"byte_end":20361,"line_start":482,"line_end":482,"column_start":8,"column_end":35},"name":"reset_touched_nodes_counter","qualname":"::dependencies::External::reset_touched_nodes_counter","value":"pub fn reset_touched_nodes_counter(&mut Self)","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" Resets amount of touched trie nodes by storage operations\n","sig":null,"attributes":[{"value":"/ Resets amount of touched trie nodes by storage operations","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":20265,"byte_end":20326,"line_start":481,"line_end":481,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":20517,"byte_end":20532,"line_start":486,"line_end":486,"column_start":8,"column_end":23},"name":"validator_stake","qualname":"::dependencies::External::validator_stake","value":"pub fn validator_stake(&Self, &AccountId) -> Result<Option<Balance>>","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" Returns the validator stake for given account in the current epoch.\n If the account is not a validator, returns `None`.\n","sig":null,"attributes":[{"value":"/ Returns the validator stake for given account in the current epoch.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":20379,"byte_end":20450,"line_start":484,"line_end":484,"column_start":5,"column_end":76}},{"value":"/ If the account is not a validator, returns `None`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":20455,"byte_end":20509,"line_start":485,"line_end":485,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":20664,"byte_end":20685,"line_start":489,"line_end":489,"column_start":8,"column_end":29},"name":"validator_total_stake","qualname":"::dependencies::External::validator_total_stake","value":"pub fn validator_total_stake(&Self) -> Result<Balance>","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" Returns total stake of validators in the current epoch.\n","sig":null,"attributes":[{"value":"/ Returns total stake of validators in the current epoch.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/dependencies.rs","byte_start":20597,"byte_end":20656,"line_start":488,"line_end":488,"column_start":5,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":93},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gas_counter","qualname":"::gas_counter","value":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":98},{"krate":0,"index":101},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":118},{"krate":0,"index":121},{"krate":0,"index":124},{"krate":0,"index":127},{"krate":0,"index":129},{"krate":0,"index":987},{"krate":0,"index":991},{"krate":0,"index":993},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":131},{"krate":0,"index":139},{"krate":0,"index":141}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":127},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":20989,"byte_end":21010,"line_start":12,"line_end":12,"column_start":8,"column_end":29},"name":"with_ext_cost_counter","qualname":"::gas_counter::with_ext_cost_counter","value":"pub fn with_ext_cost_counter<impl FnOnce(&mut HashMap<ExtCosts, u64>): FnOnce(&mut HashMap<ExtCosts,\nu64>) -> ()>(impl FnOnce(&mut HashMap<ExtCosts, u64>))","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":20972,"byte_end":20981,"line_start":11,"line_end":11,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":987},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":21600,"byte_end":21614,"line_start":30,"line_end":30,"column_start":12,"column_end":26},"name":"FastGasCounter","qualname":"::gas_counter::FastGasCounter","value":"FastGasCounter { burnt_gas, gas_limit, opcode_cost }","parent":null,"children":[{"krate":0,"index":988},{"krate":0,"index":989},{"krate":0,"index":990}],"decl_id":null,"docs":" Fast gas counter with very simple structure, could be exposed to compiled code in the VM.\n","sig":null,"attributes":[{"value":"/ Fast gas counter with very simple structure, could be exposed to compiled code in the VM.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":21445,"byte_end":21538,"line_start":27,"line_end":27,"column_start":1,"column_end":94}},{"value":"repr(C)","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":21539,"byte_end":21549,"line_start":28,"line_end":28,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":988},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":22035,"byte_end":22044,"line_start":38,"line_end":38,"column_start":9,"column_end":18},"name":"burnt_gas","qualname":"::gas_counter::FastGasCounter::burnt_gas","value":"u64","parent":{"krate":0,"index":987},"children":[],"decl_id":null,"docs":" The following three fields must be put next to another to make sure\n generated gas counting code can use and adjust them.\n We will share counter to ensure we never miss synchronization.\n This could change and in such a case synchronization required between compiled WASM code\n and the host code.\n The amount of gas that was irreversibly used for contract execution.\n","sig":null,"attributes":[{"value":"/ The following three fields must be put next to another to make sure","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":21621,"byte_end":21692,"line_start":31,"line_end":31,"column_start":5,"column_end":76}},{"value":"/ generated gas counting code can use and adjust them.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":21697,"byte_end":21753,"line_start":32,"line_end":32,"column_start":5,"column_end":61}},{"value":"/ We will share counter to ensure we never miss synchronization.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":21758,"byte_end":21824,"line_start":33,"line_end":33,"column_start":5,"column_end":71}},{"value":"/ This could change and in such a case synchronization required between compiled WASM code","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":21829,"byte_end":21921,"line_start":34,"line_end":34,"column_start":5,"column_end":97}},{"value":"/ and the host code.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":21926,"byte_end":21948,"line_start":35,"line_end":35,"column_start":5,"column_end":27}},{"value":"/ The amount of gas that was irreversibly used for contract execution.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":21954,"byte_end":22026,"line_start":37,"line_end":37,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":989},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":22096,"byte_end":22105,"line_start":40,"line_end":40,"column_start":9,"column_end":18},"name":"gas_limit","qualname":"::gas_counter::FastGasCounter::gas_limit","value":"u64","parent":{"krate":0,"index":987},"children":[],"decl_id":null,"docs":" Hard gas limit for execution\n","sig":null,"attributes":[{"value":"/ Hard gas limit for execution","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":22055,"byte_end":22087,"line_start":39,"line_end":39,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":990},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":22152,"byte_end":22163,"line_start":42,"line_end":42,"column_start":9,"column_end":20},"name":"opcode_cost","qualname":"::gas_counter::FastGasCounter::opcode_cost","value":"u64","parent":{"krate":0,"index":987},"children":[],"decl_id":null,"docs":" Single WASM opcode cost\n","sig":null,"attributes":[{"value":"/ Single WASM opcode cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":22116,"byte_end":22143,"line_start":41,"line_end":41,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":131},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":22220,"byte_end":22230,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"GasCounter","qualname":"::gas_counter::GasCounter","value":"GasCounter {  }","parent":null,"children":[{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138}],"decl_id":null,"docs":" Gas counter (a part of VMlogic)\n","sig":null,"attributes":[{"value":"/ Gas counter (a part of VMlogic)","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":22173,"byte_end":22208,"line_start":45,"line_end":45,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":22867,"byte_end":22870,"line_start":69,"line_end":69,"column_start":12,"column_end":15},"name":"new","qualname":"<GasCounter>::new","value":"pub fn new(ExtCostsConfig, Gas, u32, Gas, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":24973,"byte_end":24981,"line_start":121,"line_end":121,"column_start":12,"column_end":20},"name":"burn_gas","qualname":"<GasCounter>::burn_gas","value":"pub fn burn_gas(&mut Self, Gas) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":25420,"byte_end":25437,"line_start":132,"line_end":132,"column_start":12,"column_end":29},"name":"process_gas_limit","qualname":"<GasCounter>::process_gas_limit","value":"pub fn process_gas_limit(&mut Self, Gas, Gas) -> HostError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":26744,"byte_end":26756,"line_start":158,"line_end":158,"column_start":12,"column_end":24},"name":"pay_wasm_gas","qualname":"<GasCounter>::pay_wasm_gas","value":"pub fn pay_wasm_gas(&mut Self, u32) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":27558,"byte_end":27577,"line_start":175,"line_end":175,"column_start":12,"column_end":31},"name":"gas_counter_raw_ptr","qualname":"<GasCounter>::gas_counter_raw_ptr","value":"pub fn gas_counter_raw_ptr(&mut Self) -> *mut FastGasCounter","parent":null,"children":[],"decl_id":null,"docs":" Very special function to get the gas counter pointer for generated machine code.\n Please do not use, unless fully understand Rust aliasing and other consequences.\n Can be used to emit inlined code like `pay_wasm_gas()`, i.e.\n    mov base, gas_counter_raw_ptr\n    mov rax, [base + 0] ; current burnt gas\n    mov rcx, [base + 16] ; opcode cost\n    imul rcx, block_ops_count ; block cost\n    add rax, rcx ; new burnt gas\n    jo emit_integer_overflow\n    cmp rax, [base + 8] ; unsigned compare with burnt limit\n    mov [base + 0], rax\n    ja emit_gas_exceeded\n","sig":null,"attributes":[{"value":"/ Very special function to get the gas counter pointer for generated machine code.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":26910,"byte_end":26994,"line_start":163,"line_end":163,"column_start":5,"column_end":89}},{"value":"/ Please do not use, unless fully understand Rust aliasing and other consequences.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":26999,"byte_end":27083,"line_start":164,"line_end":164,"column_start":5,"column_end":89}},{"value":"/ Can be used to emit inlined code like `pay_wasm_gas()`, i.e.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":27088,"byte_end":27152,"line_start":165,"line_end":165,"column_start":5,"column_end":69}},{"value":"/    mov base, gas_counter_raw_ptr","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":27157,"byte_end":27193,"line_start":166,"line_end":166,"column_start":5,"column_end":41}},{"value":"/    mov rax, [base + 0] ; current burnt gas","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":27198,"byte_end":27244,"line_start":167,"line_end":167,"column_start":5,"column_end":51}},{"value":"/    mov rcx, [base + 16] ; opcode cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":27249,"byte_end":27290,"line_start":168,"line_end":168,"column_start":5,"column_end":46}},{"value":"/    imul rcx, block_ops_count ; block cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":27295,"byte_end":27340,"line_start":169,"line_end":169,"column_start":5,"column_end":50}},{"value":"/    add rax, rcx ; new burnt gas","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":27345,"byte_end":27380,"line_start":170,"line_end":170,"column_start":5,"column_end":40}},{"value":"/    jo emit_integer_overflow","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":27385,"byte_end":27416,"line_start":171,"line_end":171,"column_start":5,"column_end":36}},{"value":"/    cmp rax, [base + 8] ; unsigned compare with burnt limit","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":27421,"byte_end":27483,"line_start":172,"line_end":172,"column_start":5,"column_end":67}},{"value":"/    mov [base + 0], rax","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":27488,"byte_end":27514,"line_start":173,"line_end":173,"column_start":5,"column_end":31}},{"value":"/    ja emit_gas_exceeded","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":27519,"byte_end":27546,"line_start":174,"line_end":174,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":28203,"byte_end":28210,"line_start":196,"line_end":196,"column_start":12,"column_end":19},"name":"pay_per","qualname":"<GasCounter>::pay_per","value":"pub fn pay_per(&mut Self, ExtCosts, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" A helper function to pay a multiple of a cost.\n","sig":null,"attributes":[{"value":"/ A helper function to pay a multiple of a cost.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":28141,"byte_end":28191,"line_start":195,"line_end":195,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":28594,"byte_end":28602,"line_start":207,"line_end":207,"column_start":12,"column_end":20},"name":"pay_base","qualname":"<GasCounter>::pay_base","value":"pub fn pay_base(&mut Self, ExtCosts) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" A helper function to pay base cost gas.\n","sig":null,"attributes":[{"value":"/ A helper function to pay base cost gas.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":28539,"byte_end":28582,"line_start":206,"line_end":206,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":29160,"byte_end":29179,"line_start":220,"line_end":220,"column_start":12,"column_end":31},"name":"pay_action_per_byte","qualname":"<GasCounter>::pay_action_per_byte","value":"pub fn pay_action_per_byte(&mut Self, &Fee, u64, bool, ActionCosts)\n-> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" A helper function to pay per byte gas fee for batching an action.\n # Args:\n * `per_byte_fee`: the fee per byte;\n * `num_bytes`: the number of bytes;\n * `sir`: whether the receiver_id is same as the current account ID;\n * `action`: what kind of action is charged for;\n","sig":null,"attributes":[{"value":"/ A helper function to pay per byte gas fee for batching an action.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":28843,"byte_end":28912,"line_start":214,"line_end":214,"column_start":5,"column_end":74}},{"value":"/ # Args:","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":28917,"byte_end":28928,"line_start":215,"line_end":215,"column_start":5,"column_end":16}},{"value":"/ * `per_byte_fee`: the fee per byte;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":28933,"byte_end":28972,"line_start":216,"line_end":216,"column_start":5,"column_end":44}},{"value":"/ * `num_bytes`: the number of bytes;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":28977,"byte_end":29016,"line_start":217,"line_end":217,"column_start":5,"column_end":44}},{"value":"/ * `sir`: whether the receiver_id is same as the current account ID;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":29021,"byte_end":29092,"line_start":218,"line_end":218,"column_start":5,"column_end":76}},{"value":"/ * `action`: what kind of action is charged for;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":29097,"byte_end":29148,"line_start":219,"line_end":219,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":30047,"byte_end":30062,"line_start":243,"line_end":243,"column_start":12,"column_end":27},"name":"pay_action_base","qualname":"<GasCounter>::pay_action_base","value":"pub fn pay_action_base(&mut Self, &Fee, bool, ActionCosts) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" A helper function to pay base cost gas fee for batching an action.\n # Args:\n * `base_fee`: base fee for the action;\n * `sir`: whether the receiver_id is same as the current account ID;\n * `action`: what kind of action is charged for;\n","sig":null,"attributes":[{"value":"/ A helper function to pay base cost gas fee for batching an action.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":29770,"byte_end":29840,"line_start":238,"line_end":238,"column_start":5,"column_end":75}},{"value":"/ # Args:","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":29845,"byte_end":29856,"line_start":239,"line_end":239,"column_start":5,"column_end":16}},{"value":"/ * `base_fee`: base fee for the action;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":29861,"byte_end":29903,"line_start":240,"line_end":240,"column_start":5,"column_end":47}},{"value":"/ * `sir`: whether the receiver_id is same as the current account ID;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":29908,"byte_end":29979,"line_start":241,"line_end":241,"column_start":5,"column_end":76}},{"value":"/ * `action`: what kind of action is charged for;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":29984,"byte_end":30035,"line_start":242,"line_end":242,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":30690,"byte_end":30712,"line_start":261,"line_end":261,"column_start":12,"column_end":34},"name":"pay_action_accumulated","qualname":"<GasCounter>::pay_action_accumulated","value":"pub fn pay_action_accumulated(&mut Self, Gas, Gas, ActionCosts) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" A helper function to pay base cost gas fee for batching an action.\n # Args:\n * `burn_gas`: amount of gas to burn;\n * `use_gas`: amount of gas to reserve;\n * `action`: what kind of action is charged for;\n","sig":null,"attributes":[{"value":"/ A helper function to pay base cost gas fee for batching an action.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":30444,"byte_end":30514,"line_start":256,"line_end":256,"column_start":5,"column_end":75}},{"value":"/ # Args:","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":30519,"byte_end":30530,"line_start":257,"line_end":257,"column_start":5,"column_end":16}},{"value":"/ * `burn_gas`: amount of gas to burn;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":30535,"byte_end":30575,"line_start":258,"line_end":258,"column_start":5,"column_end":45}},{"value":"/ * `use_gas`: amount of gas to reserve;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":30580,"byte_end":30622,"line_start":259,"line_end":259,"column_start":5,"column_end":47}},{"value":"/ * `action`: what kind of action is charged for;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":30627,"byte_end":30678,"line_start":260,"line_end":260,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":30944,"byte_end":30954,"line_start":271,"line_end":271,"column_start":12,"column_end":22},"name":"prepay_gas","qualname":"<GasCounter>::prepay_gas","value":"pub fn prepay_gas(&mut Self, Gas) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":31050,"byte_end":31059,"line_start":275,"line_end":275,"column_start":12,"column_end":21},"name":"burnt_gas","qualname":"<GasCounter>::burnt_gas","value":"pub fn burnt_gas(&Self) -> Gas","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":31129,"byte_end":31137,"line_start":278,"line_end":278,"column_start":12,"column_end":20},"name":"used_gas","qualname":"<GasCounter>::used_gas","value":"pub fn used_gas(&Self) -> Gas","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":31228,"byte_end":31240,"line_start":282,"line_end":282,"column_start":12,"column_end":24},"name":"profile_data","qualname":"<GasCounter>::profile_data","value":"pub fn profile_data(&Self) -> ProfileData","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":283},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":34808,"byte_end":34815,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"VMLogic","qualname":"::logic::VMLogic","value":"VMLogic {  }","parent":null,"children":[{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":37836,"byte_end":37861,"line_start":102,"line_end":102,"column_start":12,"column_end":37},"name":"new_with_protocol_version","qualname":"<VMLogic>::new_with_protocol_version","value":"pub fn new_with_protocol_version(&'a mut dyn External, VMContext,\n&'a VMConfig, &'a RuntimeFeesConfig, &'a [PromiseResult],\n&'a mut dyn MemoryLike, ProtocolVersion) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":43146,"byte_end":43177,"line_start":246,"line_end":246,"column_start":12,"column_end":43},"name":"wrapped_internal_write_register","qualname":"<VMLogic>::wrapped_internal_write_register","value":"pub fn wrapped_internal_write_register(&mut Self, u64, &[u8]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Convenience function for testing.\n","sig":null,"attributes":[{"value":"/ Convenience function for testing.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":43097,"byte_end":43134,"line_start":245,"line_end":245,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":44324,"byte_end":44337,"line_start":270,"line_end":270,"column_start":12,"column_end":25},"name":"read_register","qualname":"<VMLogic>::read_register","value":"pub fn read_register(&mut Self, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes the entire content from the register `register_id` into the memory of the guest starting with `ptr`.","sig":null,"attributes":[{"value":"/ Writes the entire content from the register `register_id` into the memory of the guest starting with `ptr`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":43312,"byte_end":43423,"line_start":250,"line_end":250,"column_start":5,"column_end":116}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":43428,"byte_end":43431,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":43436,"byte_end":43451,"line_start":252,"line_end":252,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":43456,"byte_end":43459,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ * `register_id` -- a register id from where to read the data;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":43464,"byte_end":43529,"line_start":254,"line_end":254,"column_start":5,"column_end":70}},{"value":"/ * `ptr` -- location on guest memory where to copy the data.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":43534,"byte_end":43597,"line_start":255,"line_end":255,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":43602,"byte_end":43605,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":43610,"byte_end":43622,"line_start":257,"line_end":257,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":43627,"byte_end":43630,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ * If the content extends outside the memory allocated to the guest. In Wasmer, it returns `MemoryAccessViolation` error message;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":43635,"byte_end":43767,"line_start":259,"line_end":259,"column_start":5,"column_end":137}},{"value":"/ * If `register_id` is pointing to unused register returns `InvalidRegisterId` error message.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":43772,"byte_end":43868,"line_start":260,"line_end":260,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":43873,"byte_end":43876,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Undefined Behavior","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":43881,"byte_end":43905,"line_start":262,"line_end":262,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":43910,"byte_end":43913,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ If the content of register extends outside the preallocated memory on the host side, or the pointer points to a","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":43918,"byte_end":44033,"line_start":264,"line_end":264,"column_start":5,"column_end":120}},{"value":"/ wrong location this function will overwrite memory that it is not supposed to overwrite causing an undefined behavior.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":44038,"byte_end":44160,"line_start":265,"line_end":265,"column_start":5,"column_end":127}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":44165,"byte_end":44168,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":44173,"byte_end":44183,"line_start":267,"line_end":267,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":44188,"byte_end":44191,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ `base + read_register_base + read_register_byte * num_bytes + write_memory_base + write_memory_byte * num_bytes`","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":44196,"byte_end":44312,"line_start":269,"line_end":269,"column_start":5,"column_end":121}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":44915,"byte_end":44927,"line_start":287,"line_end":287,"column_start":12,"column_end":24},"name":"register_len","qualname":"<VMLogic>::register_len","value":"pub fn register_len(&mut Self, u64) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the blob stored in the given register.\n * If register is used, then returns the size, which can potentially be zero;\n * If register is not used, returns `u64::MAX`","sig":null,"attributes":[{"value":"/ Returns the size of the blob stored in the given register.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":44550,"byte_end":44612,"line_start":276,"line_end":276,"column_start":5,"column_end":67}},{"value":"/ * If register is used, then returns the size, which can potentially be zero;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":44617,"byte_end":44697,"line_start":277,"line_end":277,"column_start":5,"column_end":85}},{"value":"/ * If register is not used, returns `u64::MAX`","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":44702,"byte_end":44751,"line_start":278,"line_end":278,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":44756,"byte_end":44759,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":44764,"byte_end":44779,"line_start":280,"line_end":280,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":44784,"byte_end":44787,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ * `register_id` -- a register id from where to read the data;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":44792,"byte_end":44857,"line_start":282,"line_end":282,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":44862,"byte_end":44865,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":44870,"byte_end":44880,"line_start":284,"line_end":284,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":44885,"byte_end":44888,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ `base`","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":44893,"byte_end":44903,"line_start":286,"line_end":286,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":45765,"byte_end":45779,"line_start":305,"line_end":305,"column_start":12,"column_end":26},"name":"write_register","qualname":"<VMLogic>::write_register","value":"pub fn write_register(&mut Self, u64, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Copies `data` from the guest memory into the register. If register is unused will initialize\n it. If register has larger capacity than needed for `data` will not re-allocate it. The\n register will lose the pre-existing data if any.","sig":null,"attributes":[{"value":"/ Copies `data` from the guest memory into the register. If register is unused will initialize","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":45114,"byte_end":45210,"line_start":292,"line_end":292,"column_start":5,"column_end":101}},{"value":"/ it. If register has larger capacity than needed for `data` will not re-allocate it. The","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":45215,"byte_end":45306,"line_start":293,"line_end":293,"column_start":5,"column_end":96}},{"value":"/ register will lose the pre-existing data if any.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":45311,"byte_end":45363,"line_start":294,"line_end":294,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":45368,"byte_end":45371,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":45376,"byte_end":45391,"line_start":296,"line_end":296,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":45396,"byte_end":45399,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ * `register_id` -- a register id where to write the data;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":45404,"byte_end":45465,"line_start":298,"line_end":298,"column_start":5,"column_end":66}},{"value":"/ * `data_len` -- length of the data in bytes;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":45470,"byte_end":45518,"line_start":299,"line_end":299,"column_start":5,"column_end":53}},{"value":"/ * `data_ptr` -- pointer in the guest memory where to read the data from.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":45523,"byte_end":45599,"line_start":300,"line_end":300,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":45604,"byte_end":45607,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":45612,"byte_end":45622,"line_start":302,"line_end":302,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":45627,"byte_end":45630,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ `base + read_memory_base + read_memory_bytes * num_bytes + write_register_base + write_register_bytes * num_bytes`","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":45635,"byte_end":45753,"line_start":304,"line_end":304,"column_start":5,"column_end":123}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":53622,"byte_end":53640,"line_start":490,"line_end":490,"column_start":12,"column_end":30},"name":"current_account_id","qualname":"<VMLogic>::current_account_id","value":"pub fn current_account_id(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Saves the account id of the current contract that we execute into the register.","sig":null,"attributes":[{"value":"/ Saves the account id of the current contract that we execute into the register.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":53310,"byte_end":53393,"line_start":481,"line_end":481,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":53398,"byte_end":53401,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":53406,"byte_end":53418,"line_start":483,"line_end":483,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":53423,"byte_end":53426,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ If the registers exceed the memory limit returns `MemoryAccessViolation`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":53431,"byte_end":53508,"line_start":485,"line_end":485,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":53513,"byte_end":53516,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":53521,"byte_end":53531,"line_start":487,"line_end":487,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":53536,"byte_end":53539,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ `base + write_register_base + write_register_byte * num_bytes`","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":53544,"byte_end":53610,"line_start":489,"line_end":489,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":54514,"byte_end":54531,"line_start":512,"line_end":512,"column_start":12,"column_end":29},"name":"signer_account_id","qualname":"<VMLogic>::signer_account_id","value":"pub fn signer_account_id(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" All contract calls are a result of some transaction that was signed by some account using\n some access key and submitted into a memory pool (either through the wallet using RPC or by\n a node itself). This function returns the id of that account. Saves the bytes of the signer\n account id into the register.","sig":null,"attributes":[{"value":"/ All contract calls are a result of some transaction that was signed by some account using","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":53887,"byte_end":53980,"line_start":499,"line_end":499,"column_start":5,"column_end":98}},{"value":"/ some access key and submitted into a memory pool (either through the wallet using RPC or by","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":53985,"byte_end":54080,"line_start":500,"line_end":500,"column_start":5,"column_end":100}},{"value":"/ a node itself). This function returns the id of that account. Saves the bytes of the signer","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":54085,"byte_end":54180,"line_start":501,"line_end":501,"column_start":5,"column_end":100}},{"value":"/ account id into the register.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":54185,"byte_end":54218,"line_start":502,"line_end":502,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":54223,"byte_end":54226,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":54231,"byte_end":54243,"line_start":504,"line_end":504,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":54248,"byte_end":54251,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ * If the registers exceed the memory limit returns `MemoryAccessViolation`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":54256,"byte_end":54335,"line_start":506,"line_end":506,"column_start":5,"column_end":84}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":54340,"byte_end":54400,"line_start":507,"line_end":507,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":54405,"byte_end":54408,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":54413,"byte_end":54423,"line_start":509,"line_end":509,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":54428,"byte_end":54431,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ `base + write_register_base + write_register_byte * num_bytes`","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":54436,"byte_end":54502,"line_start":511,"line_end":511,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":55563,"byte_end":55580,"line_start":539,"line_end":539,"column_start":12,"column_end":29},"name":"signer_account_pk","qualname":"<VMLogic>::signer_account_pk","value":"pub fn signer_account_pk(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Saves the public key fo the access key that was used by the signer into the register. In\n rare situations smart contract might want to know the exact access key that was used to send\n the original transaction, e.g. to increase the allowance or manipulate with the public key.","sig":null,"attributes":[{"value":"/ Saves the public key fo the access key that was used by the signer into the register. In","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":54974,"byte_end":55066,"line_start":527,"line_end":527,"column_start":5,"column_end":97}},{"value":"/ rare situations smart contract might want to know the exact access key that was used to send","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":55071,"byte_end":55167,"line_start":528,"line_end":528,"column_start":5,"column_end":101}},{"value":"/ the original transaction, e.g. to increase the allowance or manipulate with the public key.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":55172,"byte_end":55267,"line_start":529,"line_end":529,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":55272,"byte_end":55275,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":55280,"byte_end":55292,"line_start":531,"line_end":531,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":55297,"byte_end":55300,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ * If the registers exceed the memory limit returns `MemoryAccessViolation`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":55305,"byte_end":55384,"line_start":533,"line_end":533,"column_start":5,"column_end":84}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":55389,"byte_end":55449,"line_start":534,"line_end":534,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":55454,"byte_end":55457,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":55462,"byte_end":55472,"line_start":536,"line_end":536,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":55477,"byte_end":55480,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ `base + write_register_base + write_register_byte * num_bytes`","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":55485,"byte_end":55551,"line_start":538,"line_end":538,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":56542,"byte_end":56564,"line_start":563,"line_end":563,"column_start":12,"column_end":34},"name":"predecessor_account_id","qualname":"<VMLogic>::predecessor_account_id","value":"pub fn predecessor_account_id(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" All contract calls are a result of a receipt, this receipt might be created by a transaction\n that does function invocation on the contract or another contract as a result of\n cross-contract call. Saves the bytes of the predecessor account id into the register.","sig":null,"attributes":[{"value":"/ All contract calls are a result of a receipt, this receipt might be created by a transaction","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":55967,"byte_end":56063,"line_start":551,"line_end":551,"column_start":5,"column_end":101}},{"value":"/ that does function invocation on the contract or another contract as a result of","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":56068,"byte_end":56152,"line_start":552,"line_end":552,"column_start":5,"column_end":89}},{"value":"/ cross-contract call. Saves the bytes of the predecessor account id into the register.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":56157,"byte_end":56246,"line_start":553,"line_end":553,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":56251,"byte_end":56254,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":56259,"byte_end":56271,"line_start":555,"line_end":555,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":56276,"byte_end":56279,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ * If the registers exceed the memory limit returns `MemoryAccessViolation`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":56284,"byte_end":56363,"line_start":557,"line_end":557,"column_start":5,"column_end":84}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":56368,"byte_end":56428,"line_start":558,"line_end":558,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":56433,"byte_end":56436,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":56441,"byte_end":56451,"line_start":560,"line_end":560,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":56456,"byte_end":56459,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ `base + write_register_base + write_register_byte * num_bytes`","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":56464,"byte_end":56530,"line_start":562,"line_end":562,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":57381,"byte_end":57386,"line_start":585,"line_end":585,"column_start":12,"column_end":17},"name":"input","qualname":"<VMLogic>::input","value":"pub fn input(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Reads input to the contract call into the register. Input is expected to be in JSON-format.\n If input is provided saves the bytes (potentially zero) of input into register. If input is\n not provided writes 0 bytes into the register.","sig":null,"attributes":[{"value":"/ Reads input to the contract call into the register. Input is expected to be in JSON-format.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":57017,"byte_end":57112,"line_start":578,"line_end":578,"column_start":5,"column_end":100}},{"value":"/ If input is provided saves the bytes (potentially zero) of input into register. If input is","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":57117,"byte_end":57212,"line_start":579,"line_end":579,"column_start":5,"column_end":100}},{"value":"/ not provided writes 0 bytes into the register.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":57217,"byte_end":57267,"line_start":580,"line_end":580,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":57272,"byte_end":57275,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":57280,"byte_end":57290,"line_start":582,"line_end":582,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":57295,"byte_end":57298,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ `base + write_register_base + write_register_byte * num_bytes`","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":57303,"byte_end":57369,"line_start":584,"line_end":584,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":57702,"byte_end":57713,"line_start":597,"line_end":597,"column_start":12,"column_end":23},"name":"block_index","qualname":"<VMLogic>::block_index","value":"pub fn block_index(&mut Self) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Returns the current block height.","sig":null,"attributes":[{"value":"/ Returns the current block height.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":57564,"byte_end":57601,"line_start":591,"line_end":591,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":57606,"byte_end":57609,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":57614,"byte_end":57624,"line_start":593,"line_end":593,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":57629,"byte_end":57632,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ `base`","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":57637,"byte_end":57647,"line_start":595,"line_end":595,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":57997,"byte_end":58012,"line_start":607,"line_end":607,"column_start":12,"column_end":27},"name":"block_timestamp","qualname":"<VMLogic>::block_timestamp","value":"pub fn block_timestamp(&mut Self) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Returns the current block timestamp (number of non-leap-nanoseconds since January 1, 1970 0:00:00 UTC).","sig":null,"attributes":[{"value":"/ Returns the current block timestamp (number of non-leap-nanoseconds since January 1, 1970 0:00:00 UTC).","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":57832,"byte_end":57939,"line_start":602,"line_end":602,"column_start":5,"column_end":112}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":57944,"byte_end":57947,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":57952,"byte_end":57962,"line_start":604,"line_end":604,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":57967,"byte_end":57970,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ `base`","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":57975,"byte_end":57985,"line_start":606,"line_end":606,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":58230,"byte_end":58242,"line_start":617,"line_end":617,"column_start":12,"column_end":24},"name":"epoch_height","qualname":"<VMLogic>::epoch_height","value":"pub fn epoch_height(&mut Self) -> Result<EpochHeight>","parent":null,"children":[],"decl_id":null,"docs":" Returns the current epoch height.","sig":null,"attributes":[{"value":"/ Returns the current epoch height.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":58135,"byte_end":58172,"line_start":612,"line_end":612,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":58177,"byte_end":58180,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":58185,"byte_end":58195,"line_start":614,"line_end":614,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":58200,"byte_end":58203,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ `base`","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":58208,"byte_end":58218,"line_start":616,"line_end":616,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":58724,"byte_end":58739,"line_start":628,"line_end":628,"column_start":12,"column_end":27},"name":"validator_stake","qualname":"<VMLogic>::validator_stake","value":"pub fn validator_stake(&mut Self, u64, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Get the stake of an account, if the account is currently a validator. Otherwise returns 0.\n writes the value into the` u128` variable pointed by `stake_ptr`.","sig":null,"attributes":[{"value":"/ Get the stake of an account, if the account is currently a validator. Otherwise returns 0.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":58370,"byte_end":58464,"line_start":622,"line_end":622,"column_start":5,"column_end":99}},{"value":"/ writes the value into the` u128` variable pointed by `stake_ptr`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":58469,"byte_end":58538,"line_start":623,"line_end":623,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":58543,"byte_end":58546,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":58551,"byte_end":58561,"line_start":625,"line_end":625,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":58566,"byte_end":58569,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ `base + memory_write_base + memory_write_size * 16 + utf8_decoding_base + utf8_decoding_byte * account_id_len + validator_stake_base`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":58574,"byte_end":58712,"line_start":627,"line_end":627,"column_start":5,"column_end":143}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":59504,"byte_end":59525,"line_start":648,"line_end":648,"column_start":12,"column_end":33},"name":"validator_total_stake","qualname":"<VMLogic>::validator_total_stake","value":"pub fn validator_total_stake(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Get the total validator stake of the current epoch.\n Write the u128 value into `stake_ptr`.\n writes the value into the` u128` variable pointed by `stake_ptr`.","sig":null,"attributes":[{"value":"/ Get the total validator stake of the current epoch.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":59196,"byte_end":59251,"line_start":641,"line_end":641,"column_start":5,"column_end":60}},{"value":"/ Write the u128 value into `stake_ptr`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":59256,"byte_end":59298,"line_start":642,"line_end":642,"column_start":5,"column_end":47}},{"value":"/ writes the value into the` u128` variable pointed by `stake_ptr`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":59303,"byte_end":59372,"line_start":643,"line_end":643,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":59377,"byte_end":59380,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":59385,"byte_end":59395,"line_start":645,"line_end":645,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":59400,"byte_end":59403,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ `base + memory_write_base + memory_write_size * 16 + validator_total_stake_base`","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":59408,"byte_end":59492,"line_start":647,"line_end":647,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":60236,"byte_end":60249,"line_start":665,"line_end":665,"column_start":12,"column_end":25},"name":"storage_usage","qualname":"<VMLogic>::storage_usage","value":"pub fn storage_usage(&mut Self) -> Result<StorageUsage>","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes used by the contract if it was saved to the trie as of the\n invocation. This includes:\n * The data written with storage_* functions during current and previous execution;\n * The bytes needed to store the access keys of the given account.\n * The contract code size\n * A small fixed overhead for account metadata.","sig":null,"attributes":[{"value":"/ Returns the number of bytes used by the contract if it was saved to the trie as of the","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":59800,"byte_end":59890,"line_start":655,"line_end":655,"column_start":5,"column_end":95}},{"value":"/ invocation. This includes:","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":59895,"byte_end":59925,"line_start":656,"line_end":656,"column_start":5,"column_end":35}},{"value":"/ * The data written with storage_* functions during current and previous execution;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":59930,"byte_end":60016,"line_start":657,"line_end":657,"column_start":5,"column_end":91}},{"value":"/ * The bytes needed to store the access keys of the given account.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":60021,"byte_end":60090,"line_start":658,"line_end":658,"column_start":5,"column_end":74}},{"value":"/ * The contract code size","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":60095,"byte_end":60123,"line_start":659,"line_end":659,"column_start":5,"column_end":33}},{"value":"/ * A small fixed overhead for account metadata.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":60128,"byte_end":60178,"line_start":660,"line_end":660,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":60183,"byte_end":60186,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":60191,"byte_end":60201,"line_start":662,"line_end":662,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":60206,"byte_end":60209,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ `base`","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":60214,"byte_end":60224,"line_start":664,"line_end":664,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":60684,"byte_end":60699,"line_start":680,"line_end":680,"column_start":12,"column_end":27},"name":"account_balance","qualname":"<VMLogic>::account_balance","value":"pub fn account_balance(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" The current balance of the given account. This includes the attached_deposit that was\n attached to the transaction.","sig":null,"attributes":[{"value":"/ The current balance of the given account. This includes the attached_deposit that was","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":60455,"byte_end":60544,"line_start":674,"line_end":674,"column_start":5,"column_end":94}},{"value":"/ attached to the transaction.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":60549,"byte_end":60581,"line_start":675,"line_end":675,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":60586,"byte_end":60589,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":60594,"byte_end":60604,"line_start":677,"line_end":677,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":60609,"byte_end":60612,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ `base + memory_write_base + memory_write_size * 16`","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":60617,"byte_end":60672,"line_start":679,"line_end":679,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":61028,"byte_end":61050,"line_start":690,"line_end":690,"column_start":12,"column_end":34},"name":"account_locked_balance","qualname":"<VMLogic>::account_locked_balance","value":"pub fn account_locked_balance(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" The current amount of tokens locked due to staking.","sig":null,"attributes":[{"value":"/ The current amount of tokens locked due to staking.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":60870,"byte_end":60925,"line_start":685,"line_end":685,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":60930,"byte_end":60933,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":60938,"byte_end":60948,"line_start":687,"line_end":687,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":60953,"byte_end":60956,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ `base + memory_write_base + memory_write_size * 16`","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":60961,"byte_end":61016,"line_start":689,"line_end":689,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":61554,"byte_end":61570,"line_start":705,"line_end":705,"column_start":12,"column_end":28},"name":"attached_deposit","qualname":"<VMLogic>::attached_deposit","value":"pub fn attached_deposit(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" The balance that was attached to the call that will be immediately deposited before the\n contract execution starts.","sig":null,"attributes":[{"value":"/ The balance that was attached to the call that will be immediately deposited before the","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":61228,"byte_end":61319,"line_start":695,"line_end":695,"column_start":5,"column_end":96}},{"value":"/ contract execution starts.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":61324,"byte_end":61354,"line_start":696,"line_end":696,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":61359,"byte_end":61362,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":61367,"byte_end":61379,"line_start":698,"line_end":698,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":61384,"byte_end":61387,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ If called as view function returns `ProhibitedInView``.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":61392,"byte_end":61451,"line_start":700,"line_end":700,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":61456,"byte_end":61459,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":61464,"byte_end":61474,"line_start":702,"line_end":702,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":61479,"byte_end":61482,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ `base + memory_write_base + memory_write_size * 16`","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":61487,"byte_end":61542,"line_start":704,"line_end":704,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":62177,"byte_end":62188,"line_start":726,"line_end":726,"column_start":12,"column_end":23},"name":"prepaid_gas","qualname":"<VMLogic>::prepaid_gas","value":"pub fn prepaid_gas(&mut Self) -> Result<Gas>","parent":null,"children":[],"decl_id":null,"docs":" The amount of gas attached to the call that can be used to pay for the gas fees.","sig":null,"attributes":[{"value":"/ The amount of gas attached to the call that can be used to pay for the gas fees.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":61939,"byte_end":62023,"line_start":717,"line_end":717,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":62028,"byte_end":62031,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":62036,"byte_end":62048,"line_start":719,"line_end":719,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":62053,"byte_end":62056,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":62061,"byte_end":62119,"line_start":721,"line_end":721,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":62124,"byte_end":62127,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":62132,"byte_end":62142,"line_start":723,"line_end":723,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":62147,"byte_end":62150,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ `base`","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":62155,"byte_end":62165,"line_start":725,"line_end":725,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":62734,"byte_end":62742,"line_start":745,"line_end":745,"column_start":12,"column_end":20},"name":"used_gas","qualname":"<VMLogic>::used_gas","value":"pub fn used_gas(&mut Self) -> Result<Gas>","parent":null,"children":[],"decl_id":null,"docs":" The gas that was already burnt during the contract execution (cannot exceed `prepaid_gas`)","sig":null,"attributes":[{"value":"/ The gas that was already burnt during the contract execution (cannot exceed `prepaid_gas`)","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":62486,"byte_end":62580,"line_start":736,"line_end":736,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":62585,"byte_end":62588,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":62593,"byte_end":62605,"line_start":738,"line_end":738,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":62610,"byte_end":62613,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":62618,"byte_end":62676,"line_start":740,"line_end":740,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":62681,"byte_end":62684,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":62689,"byte_end":62699,"line_start":742,"line_end":742,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":62704,"byte_end":62707,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ `base`","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":62712,"byte_end":62722,"line_start":744,"line_end":744,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":67211,"byte_end":67222,"line_start":857,"line_end":857,"column_start":12,"column_end":23},"name":"random_seed","qualname":"<VMLogic>::random_seed","value":"pub fn random_seed(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes random seed into the register.","sig":null,"attributes":[{"value":"/ Writes random seed into the register.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":66939,"byte_end":66980,"line_start":848,"line_end":848,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":66985,"byte_end":66988,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":66993,"byte_end":67005,"line_start":850,"line_end":850,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":67010,"byte_end":67013,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ If the size of the registers exceed the set limit `MemoryAccessViolation`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":67018,"byte_end":67096,"line_start":852,"line_end":852,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":67101,"byte_end":67104,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":67109,"byte_end":67119,"line_start":854,"line_end":854,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":67124,"byte_end":67127,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ `base + write_register_base + write_register_byte * num_bytes`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":67132,"byte_end":67199,"line_start":856,"line_end":856,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":67813,"byte_end":67819,"line_start":872,"line_end":872,"column_start":12,"column_end":18},"name":"sha256","qualname":"<VMLogic>::sha256","value":"pub fn sha256(&mut Self, u64, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Hashes the given value using sha256 and returns it into `register_id`.","sig":null,"attributes":[{"value":"/ Hashes the given value using sha256 and returns it into `register_id`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":67405,"byte_end":67479,"line_start":862,"line_end":862,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":67484,"byte_end":67487,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":67492,"byte_end":67504,"line_start":864,"line_end":864,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":67509,"byte_end":67512,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ If `value_len + value_ptr` points outside the memory or the registers use more memory than","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":67517,"byte_end":67611,"line_start":866,"line_end":866,"column_start":5,"column_end":99}},{"value":"/ the limit with `MemoryAccessViolation`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":67616,"byte_end":67659,"line_start":867,"line_end":867,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":67664,"byte_end":67667,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":67672,"byte_end":67682,"line_start":869,"line_end":869,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":67687,"byte_end":67690,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ `base + write_register_base + write_register_byte * num_bytes + sha256_base + sha256_byte * num_bytes`","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":67695,"byte_end":67801,"line_start":871,"line_end":871,"column_start":5,"column_end":111}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":68688,"byte_end":68697,"line_start":893,"line_end":893,"column_start":12,"column_end":21},"name":"keccak256","qualname":"<VMLogic>::keccak256","value":"pub fn keccak256(&mut Self, u64, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Hashes the given value using keccak256 and returns it into `register_id`.","sig":null,"attributes":[{"value":"/ Hashes the given value using keccak256 and returns it into `register_id`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":68271,"byte_end":68348,"line_start":883,"line_end":883,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":68353,"byte_end":68356,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":68361,"byte_end":68373,"line_start":885,"line_end":885,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":68378,"byte_end":68381,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ If `value_len + value_ptr` points outside the memory or the registers use more memory than","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":68386,"byte_end":68480,"line_start":887,"line_end":887,"column_start":5,"column_end":99}},{"value":"/ the limit with `MemoryAccessViolation`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":68485,"byte_end":68528,"line_start":888,"line_end":888,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":68533,"byte_end":68536,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":68541,"byte_end":68551,"line_start":890,"line_end":890,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":68556,"byte_end":68559,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ `base + write_register_base + write_register_byte * num_bytes + keccak256_base + keccak256_byte * num_bytes`","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":68564,"byte_end":68676,"line_start":892,"line_end":892,"column_start":5,"column_end":117}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":69575,"byte_end":69584,"line_start":914,"line_end":914,"column_start":12,"column_end":21},"name":"keccak512","qualname":"<VMLogic>::keccak512","value":"pub fn keccak512(&mut Self, u64, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Hashes the given value using keccak512 and returns it into `register_id`.","sig":null,"attributes":[{"value":"/ Hashes the given value using keccak512 and returns it into `register_id`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":69158,"byte_end":69235,"line_start":904,"line_end":904,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":69240,"byte_end":69243,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":69248,"byte_end":69260,"line_start":906,"line_end":906,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":69265,"byte_end":69268,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ If `value_len + value_ptr` points outside the memory or the registers use more memory than","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":69273,"byte_end":69367,"line_start":908,"line_end":908,"column_start":5,"column_end":99}},{"value":"/ the limit with `MemoryAccessViolation`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":69372,"byte_end":69415,"line_start":909,"line_end":909,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":69420,"byte_end":69423,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":69428,"byte_end":69438,"line_start":911,"line_end":911,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":69443,"byte_end":69446,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ `base + write_register_base + write_register_byte * num_bytes + keccak512_base + keccak512_byte * num_bytes`","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":69451,"byte_end":69563,"line_start":913,"line_end":913,"column_start":5,"column_end":117}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":70544,"byte_end":70553,"line_start":937,"line_end":937,"column_start":12,"column_end":21},"name":"ripemd160","qualname":"<VMLogic>::ripemd160","value":"pub fn ripemd160(&mut Self, u64, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Hashes the given value using RIPEMD-160 and returns it into `register_id`.","sig":null,"attributes":[{"value":"/ Hashes the given value using RIPEMD-160 and returns it into `register_id`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":70045,"byte_end":70123,"line_start":925,"line_end":925,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":70128,"byte_end":70131,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":70136,"byte_end":70148,"line_start":927,"line_end":927,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":70153,"byte_end":70156,"line_start":928,"line_end":928,"column_start":5,"column_end":8}},{"value":"/ If `value_len + value_ptr` points outside the memory or the registers use more memory than","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":70161,"byte_end":70255,"line_start":929,"line_end":929,"column_start":5,"column_end":99}},{"value":"/ the limit with `MemoryAccessViolation`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":70260,"byte_end":70303,"line_start":930,"line_end":930,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":70308,"byte_end":70311,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":70316,"byte_end":70326,"line_start":932,"line_end":932,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":70331,"byte_end":70334,"line_start":933,"line_end":933,"column_start":5,"column_end":8}},{"value":"/  Where `message_blocks` is `(value_len + 9).div_ceil(64)`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":70339,"byte_end":70401,"line_start":934,"line_end":934,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":70406,"byte_end":70409,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ `base + write_register_base + write_register_byte * num_bytes + ripemd160_base + ripemd160_block * message_blocks`","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":70414,"byte_end":70532,"line_start":936,"line_end":936,"column_start":5,"column_end":123}}]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":71939,"byte_end":71948,"line_start":976,"line_end":976,"column_start":12,"column_end":21},"name":"ecrecover","qualname":"<VMLogic>::ecrecover","value":"pub fn ecrecover(&mut Self, u64, u64, u64, u64, u64, u64, u64) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Recovers an ECDSA signer address and returns it into `register_id`.","sig":null,"attributes":[{"value":"/ Recovers an ECDSA signer address and returns it into `register_id`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":71219,"byte_end":71290,"line_start":956,"line_end":956,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":71295,"byte_end":71298,"line_start":957,"line_end":957,"column_start":5,"column_end":8}},{"value":"/ Takes in an additional flag to check for malleability of the signature","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":71303,"byte_end":71377,"line_start":958,"line_end":958,"column_start":5,"column_end":79}},{"value":"/ which is generally only ideal for transactions.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":71382,"byte_end":71433,"line_start":959,"line_end":959,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":71438,"byte_end":71441,"line_start":960,"line_end":960,"column_start":5,"column_end":8}},{"value":"/ Returns a bool indicating success or failure as a `u64`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":71446,"byte_end":71506,"line_start":961,"line_end":961,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":71511,"byte_end":71514,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ # Malleability Flags","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":71519,"byte_end":71543,"line_start":963,"line_end":963,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":71548,"byte_end":71551,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ 0 - No extra checks.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":71556,"byte_end":71580,"line_start":965,"line_end":965,"column_start":5,"column_end":29}},{"value":"/ 1 - Rejecting upper range.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":71585,"byte_end":71615,"line_start":966,"line_end":966,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":71620,"byte_end":71623,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":71628,"byte_end":71640,"line_start":968,"line_end":968,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":71645,"byte_end":71648,"line_start":969,"line_end":969,"column_start":5,"column_end":8}},{"value":"/ * If `hash_ptr`, `r_ptr`, or `s_ptr` point outside the memory or the registers use more","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":71653,"byte_end":71744,"line_start":970,"line_end":970,"column_start":5,"column_end":96}},{"value":"/   memory than the limit, then returns `MemoryAccessViolation`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":71749,"byte_end":71815,"line_start":971,"line_end":971,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":71820,"byte_end":71823,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":71828,"byte_end":71838,"line_start":973,"line_end":973,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":71843,"byte_end":71846,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ `base + write_register_base + write_register_byte * 64 + ecrecover_base`","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":71851,"byte_end":71927,"line_start":975,"line_end":975,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":74672,"byte_end":74675,"line_start":1056,"line_end":1056,"column_start":12,"column_end":15},"name":"gas","qualname":"<VMLogic>::gas","value":"pub fn gas(&mut Self, u32) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Called by gas metering injected into Wasm. Counts both towards `burnt_gas` and `used_gas`.","sig":null,"attributes":[{"value":"/ Called by gas metering injected into Wasm. Counts both towards `burnt_gas` and `used_gas`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":74282,"byte_end":74376,"line_start":1049,"line_end":1049,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":74381,"byte_end":74384,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":74389,"byte_end":74401,"line_start":1051,"line_end":1051,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":74406,"byte_end":74409,"line_start":1052,"line_end":1052,"column_start":5,"column_end":8}},{"value":"/ * If passed gas amount somehow overflows internal gas counters returns `IntegerOverflow`;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":74414,"byte_end":74507,"line_start":1053,"line_end":1053,"column_start":5,"column_end":98}},{"value":"/ * If we exceed usage limit imposed on burnt gas returns `GasLimitExceeded`;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":74512,"byte_end":74591,"line_start":1054,"line_end":1054,"column_start":5,"column_end":84}},{"value":"/ * If we exceed the `prepaid_gas` then returns `GasExceeded`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":74596,"byte_end":74660,"line_start":1055,"line_end":1055,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":78005,"byte_end":78019,"line_start":1122,"line_end":1122,"column_start":12,"column_end":26},"name":"promise_create","qualname":"<VMLogic>::promise_create","value":"pub fn promise_create(&mut Self, u64, u64, u64, u64, u64, u64, u64, Gas)\n-> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Creates a promise that will execute a method on account with given arguments and attaches\n the given amount and gas. `amount_ptr` point to slices of bytes representing `u128`.","sig":null,"attributes":[{"value":"/ Creates a promise that will execute a method on account with given arguments and attaches","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":77111,"byte_end":77204,"line_start":1103,"line_end":1103,"column_start":5,"column_end":98}},{"value":"/ the given amount and gas. `amount_ptr` point to slices of bytes representing `u128`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":77209,"byte_end":77297,"line_start":1104,"line_end":1104,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":77302,"byte_end":77305,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":77310,"byte_end":77322,"line_start":1106,"line_end":1106,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":77327,"byte_end":77330,"line_start":1107,"line_end":1107,"column_start":5,"column_end":8}},{"value":"/ * If `account_id_len + account_id_ptr` or `method_name_len + method_name_ptr` or","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":77335,"byte_end":77419,"line_start":1108,"line_end":1108,"column_start":5,"column_end":89}},{"value":"/ `arguments_len + arguments_ptr` or `amount_ptr + 16` points outside the memory of the guest","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":77424,"byte_end":77519,"line_start":1109,"line_end":1109,"column_start":5,"column_end":100}},{"value":"/ or host returns `MemoryAccessViolation`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":77524,"byte_end":77568,"line_start":1110,"line_end":1110,"column_start":5,"column_end":49}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":77573,"byte_end":77633,"line_start":1111,"line_end":1111,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":77638,"byte_end":77641,"line_start":1112,"line_end":1112,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":77646,"byte_end":77659,"line_start":1113,"line_end":1113,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":77664,"byte_end":77667,"line_start":1114,"line_end":1114,"column_start":5,"column_end":8}},{"value":"/ Index of the new promise that uniquely identifies it within the current execution of the","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":77672,"byte_end":77764,"line_start":1115,"line_end":1115,"column_start":5,"column_end":97}},{"value":"/ method.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":77769,"byte_end":77780,"line_start":1116,"line_end":1116,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":77785,"byte_end":77788,"line_start":1117,"line_end":1117,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":77793,"byte_end":77803,"line_start":1118,"line_end":1118,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":77808,"byte_end":77811,"line_start":1119,"line_end":1119,"column_start":5,"column_end":8}},{"value":"/ Since `promise_create` is a convenience wrapper around `promise_batch_create` and","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":77816,"byte_end":77901,"line_start":1120,"line_end":1120,"column_start":5,"column_end":90}},{"value":"/ `promise_batch_action_function_call`. This also means it charges `base` cost twice.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":77906,"byte_end":77993,"line_start":1121,"line_end":1121,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":79557,"byte_end":79569,"line_start":1165,"line_end":1165,"column_start":12,"column_end":24},"name":"promise_then","qualname":"<VMLogic>::promise_then","value":"pub fn promise_then(&mut Self, u64, u64, u64, u64, u64, u64, u64, u64, u64)\n-> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Attaches the callback that is executed after promise pointed by `promise_idx` is complete.","sig":null,"attributes":[{"value":"/ Attaches the callback that is executed after promise pointed by `promise_idx` is complete.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":78652,"byte_end":78746,"line_start":1146,"line_end":1146,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":78751,"byte_end":78754,"line_start":1147,"line_end":1147,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":78759,"byte_end":78771,"line_start":1148,"line_end":1148,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":78776,"byte_end":78779,"line_start":1149,"line_end":1149,"column_start":5,"column_end":8}},{"value":"/ * If `promise_idx` does not correspond to an existing promise returns `InvalidPromiseIndex`;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":78784,"byte_end":78880,"line_start":1150,"line_end":1150,"column_start":5,"column_end":101}},{"value":"/ * If `account_id_len + account_id_ptr` or `method_name_len + method_name_ptr` or","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":78885,"byte_end":78969,"line_start":1151,"line_end":1151,"column_start":5,"column_end":89}},{"value":"/   `arguments_len + arguments_ptr` or `amount_ptr + 16` points outside the memory of the","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":78974,"byte_end":79065,"line_start":1152,"line_end":1152,"column_start":5,"column_end":96}},{"value":"/   guest or host returns `MemoryAccessViolation`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":79070,"byte_end":79122,"line_start":1153,"line_end":1153,"column_start":5,"column_end":57}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":79127,"byte_end":79187,"line_start":1154,"line_end":1154,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":79192,"byte_end":79195,"line_start":1155,"line_end":1155,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":79200,"byte_end":79213,"line_start":1156,"line_end":1156,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":79218,"byte_end":79221,"line_start":1157,"line_end":1157,"column_start":5,"column_end":8}},{"value":"/ Index of the new promise that uniquely identifies it within the current execution of the","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":79226,"byte_end":79318,"line_start":1158,"line_end":1158,"column_start":5,"column_end":97}},{"value":"/ method.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":79323,"byte_end":79334,"line_start":1159,"line_end":1159,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":79339,"byte_end":79342,"line_start":1160,"line_end":1160,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":79347,"byte_end":79357,"line_start":1161,"line_end":1161,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":79362,"byte_end":79365,"line_start":1162,"line_end":1162,"column_start":5,"column_end":8}},{"value":"/ Since `promise_create` is a convenience wrapper around `promise_batch_then` and","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":79370,"byte_end":79453,"line_start":1163,"line_end":1163,"column_start":5,"column_end":88}},{"value":"/ `promise_batch_action_function_call`. This also means it charges `base` cost twice.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":79458,"byte_end":79545,"line_start":1164,"line_end":1164,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":81546,"byte_end":81557,"line_start":1216,"line_end":1216,"column_start":12,"column_end":23},"name":"promise_and","qualname":"<VMLogic>::promise_and","value":"pub fn promise_and(&mut Self, u64, u64) -> Result<PromiseIndex>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new promise which completes when time all promises passed as arguments complete.\n Cannot be used with registers. `promise_idx_ptr` points to an array of `u64` elements, with\n `promise_idx_count` denoting the number of elements. The array contains indices of promises\n that need to be waited on jointly.","sig":null,"attributes":[{"value":"/ Creates a new promise which completes when time all promises passed as arguments complete.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":80251,"byte_end":80345,"line_start":1191,"line_end":1191,"column_start":5,"column_end":99}},{"value":"/ Cannot be used with registers. `promise_idx_ptr` points to an array of `u64` elements, with","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":80350,"byte_end":80445,"line_start":1192,"line_end":1192,"column_start":5,"column_end":100}},{"value":"/ `promise_idx_count` denoting the number of elements. The array contains indices of promises","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":80450,"byte_end":80545,"line_start":1193,"line_end":1193,"column_start":5,"column_end":100}},{"value":"/ that need to be waited on jointly.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":80550,"byte_end":80588,"line_start":1194,"line_end":1194,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":80593,"byte_end":80596,"line_start":1195,"line_end":1195,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":80601,"byte_end":80613,"line_start":1196,"line_end":1196,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":80618,"byte_end":80621,"line_start":1197,"line_end":1197,"column_start":5,"column_end":8}},{"value":"/ * If `promise_ids_ptr + 8 * promise_idx_count` extend outside the guest memory returns","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":80626,"byte_end":80716,"line_start":1198,"line_end":1198,"column_start":5,"column_end":95}},{"value":"/   `MemoryAccessViolation`;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":80721,"byte_end":80751,"line_start":1199,"line_end":1199,"column_start":5,"column_end":35}},{"value":"/ * If any of the promises in the array do not correspond to existing promises returns","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":80756,"byte_end":80844,"line_start":1200,"line_end":1200,"column_start":5,"column_end":93}},{"value":"/   `InvalidPromiseIndex`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":80849,"byte_end":80877,"line_start":1201,"line_end":1201,"column_start":5,"column_end":33}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":80882,"byte_end":80942,"line_start":1202,"line_end":1202,"column_start":5,"column_end":65}},{"value":"/ * If the total number of receipt dependencies exceeds `max_number_input_data_dependencies`","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":80947,"byte_end":81041,"line_start":1203,"line_end":1203,"column_start":5,"column_end":99}},{"value":"/   limit returns `NumInputDataDependenciesExceeded`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":81046,"byte_end":81101,"line_start":1204,"line_end":1204,"column_start":5,"column_end":60}},{"value":"/ * If the total number of promises exceeds `max_promises_per_function_call_action` limit","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":81106,"byte_end":81197,"line_start":1205,"line_end":1205,"column_start":5,"column_end":96}},{"value":"/   returns `NumPromisesExceeded`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":81202,"byte_end":81238,"line_start":1206,"line_end":1206,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":81243,"byte_end":81246,"line_start":1207,"line_end":1207,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":81251,"byte_end":81264,"line_start":1208,"line_end":1208,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":81269,"byte_end":81272,"line_start":1209,"line_end":1209,"column_start":5,"column_end":8}},{"value":"/ Index of the new promise that uniquely identifies it within the current execution of the","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":81277,"byte_end":81369,"line_start":1210,"line_end":1210,"column_start":5,"column_end":97}},{"value":"/ method.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":81374,"byte_end":81385,"line_start":1211,"line_end":1211,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":81390,"byte_end":81393,"line_start":1212,"line_end":1212,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":81398,"byte_end":81408,"line_start":1213,"line_end":1213,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":81413,"byte_end":81416,"line_start":1214,"line_end":1214,"column_start":5,"column_end":8}},{"value":"/ `base + promise_and_base + promise_and_per_promise * num_promises + cost of reading promise ids from memory`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":81421,"byte_end":81534,"line_start":1215,"line_end":1215,"column_start":5,"column_end":118}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":84316,"byte_end":84336,"line_start":1284,"line_end":1284,"column_start":12,"column_end":32},"name":"promise_batch_create","qualname":"<VMLogic>::promise_batch_create","value":"pub fn promise_batch_create(&mut Self, u64, u64) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new promise towards given `account_id` without any actions attached to it.","sig":null,"attributes":[{"value":"/ Creates a new promise towards given `account_id` without any actions attached to it.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":83502,"byte_end":83590,"line_start":1265,"line_end":1265,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":83595,"byte_end":83598,"line_start":1266,"line_end":1266,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":83603,"byte_end":83615,"line_start":1267,"line_end":1267,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":83620,"byte_end":83623,"line_start":1268,"line_end":1268,"column_start":5,"column_end":8}},{"value":"/ * If `account_id_len + account_id_ptr` points outside the memory of the guest or host","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":83628,"byte_end":83717,"line_start":1269,"line_end":1269,"column_start":5,"column_end":94}},{"value":"/ returns `MemoryAccessViolation`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":83722,"byte_end":83758,"line_start":1270,"line_end":1270,"column_start":5,"column_end":41}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":83763,"byte_end":83823,"line_start":1271,"line_end":1271,"column_start":5,"column_end":65}},{"value":"/ * If the total number of promises exceeds `max_promises_per_function_call_action` limit","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":83828,"byte_end":83919,"line_start":1272,"line_end":1272,"column_start":5,"column_end":96}},{"value":"/   returns `NumPromisesExceeded`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":83924,"byte_end":83960,"line_start":1273,"line_end":1273,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":83965,"byte_end":83968,"line_start":1274,"line_end":1274,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":83973,"byte_end":83986,"line_start":1275,"line_end":1275,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":83991,"byte_end":83994,"line_start":1276,"line_end":1276,"column_start":5,"column_end":8}},{"value":"/ Index of the new promise that uniquely identifies it within the current execution of the","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":83999,"byte_end":84091,"line_start":1277,"line_end":1277,"column_start":5,"column_end":97}},{"value":"/ method.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":84096,"byte_end":84107,"line_start":1278,"line_end":1278,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":84112,"byte_end":84115,"line_start":1279,"line_end":1279,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":84120,"byte_end":84130,"line_start":1280,"line_end":1280,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":84135,"byte_end":84138,"line_start":1281,"line_end":1281,"column_start":5,"column_end":8}},{"value":"/ `burnt_gas := base + cost of reading and decoding the account id + dispatch cost of the receipt`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":84143,"byte_end":84244,"line_start":1282,"line_end":1282,"column_start":5,"column_end":106}},{"value":"/ `used_gas := burnt_gas + exec cost of the receipt`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":84249,"byte_end":84304,"line_start":1283,"line_end":1283,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":86105,"byte_end":86123,"line_start":1326,"line_end":1326,"column_start":12,"column_end":30},"name":"promise_batch_then","qualname":"<VMLogic>::promise_batch_then","value":"pub fn promise_batch_then(&mut Self, u64, u64, u64) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new promise towards given `account_id` without any actions attached, that is\n executed after promise pointed by `promise_idx` is complete.","sig":null,"attributes":[{"value":"/ Creates a new promise towards given `account_id` without any actions attached, that is","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":85118,"byte_end":85208,"line_start":1305,"line_end":1305,"column_start":5,"column_end":95}},{"value":"/ executed after promise pointed by `promise_idx` is complete.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":85213,"byte_end":85277,"line_start":1306,"line_end":1306,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":85282,"byte_end":85285,"line_start":1307,"line_end":1307,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":85290,"byte_end":85302,"line_start":1308,"line_end":1308,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":85307,"byte_end":85310,"line_start":1309,"line_end":1309,"column_start":5,"column_end":8}},{"value":"/ * If `promise_idx` does not correspond to an existing promise returns `InvalidPromiseIndex`;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":85315,"byte_end":85411,"line_start":1310,"line_end":1310,"column_start":5,"column_end":101}},{"value":"/ * If `account_id_len + account_id_ptr` points outside the memory of the guest or host","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":85416,"byte_end":85505,"line_start":1311,"line_end":1311,"column_start":5,"column_end":94}},{"value":"/ returns `MemoryAccessViolation`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":85510,"byte_end":85546,"line_start":1312,"line_end":1312,"column_start":5,"column_end":41}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":85551,"byte_end":85611,"line_start":1313,"line_end":1313,"column_start":5,"column_end":65}},{"value":"/ * If the total number of promises exceeds `max_promises_per_function_call_action` limit","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":85616,"byte_end":85707,"line_start":1314,"line_end":1314,"column_start":5,"column_end":96}},{"value":"/   returns `NumPromisesExceeded`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":85712,"byte_end":85748,"line_start":1315,"line_end":1315,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":85753,"byte_end":85756,"line_start":1316,"line_end":1316,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":85761,"byte_end":85774,"line_start":1317,"line_end":1317,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":85779,"byte_end":85782,"line_start":1318,"line_end":1318,"column_start":5,"column_end":8}},{"value":"/ Index of the new promise that uniquely identifies it within the current execution of the","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":85787,"byte_end":85879,"line_start":1319,"line_end":1319,"column_start":5,"column_end":97}},{"value":"/ method.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":85884,"byte_end":85895,"line_start":1320,"line_end":1320,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":85900,"byte_end":85903,"line_start":1321,"line_end":1321,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":85908,"byte_end":85918,"line_start":1322,"line_end":1322,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":85923,"byte_end":85926,"line_start":1323,"line_end":1323,"column_start":5,"column_end":8}},{"value":"/ `base + cost of reading and decoding the account id + dispatch&execution cost of the receipt","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":85931,"byte_end":86027,"line_start":1324,"line_end":1324,"column_start":5,"column_end":101}},{"value":"/  + dispatch&execution base cost for each data dependency`","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":86032,"byte_end":86093,"line_start":1325,"line_end":1325,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":89387,"byte_end":89422,"line_start":1405,"line_end":1405,"column_start":12,"column_end":47},"name":"promise_batch_action_create_account","qualname":"<VMLogic>::promise_batch_action_create_account","value":"pub fn promise_batch_action_create_account(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Appends `CreateAccount` action to the batch of actions for the given promise pointed by\n `promise_idx`.","sig":null,"attributes":[{"value":"/ Appends `CreateAccount` action to the batch of actions for the given promise pointed by","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":88776,"byte_end":88867,"line_start":1391,"line_end":1391,"column_start":5,"column_end":96}},{"value":"/ `promise_idx`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":88872,"byte_end":88890,"line_start":1392,"line_end":1392,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":88895,"byte_end":88898,"line_start":1393,"line_end":1393,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":88903,"byte_end":88915,"line_start":1394,"line_end":1394,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":88920,"byte_end":88923,"line_start":1395,"line_end":1395,"column_start":5,"column_end":8}},{"value":"/ * If `promise_idx` does not correspond to an existing promise returns `InvalidPromiseIndex`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":88928,"byte_end":89024,"line_start":1396,"line_end":1396,"column_start":5,"column_end":101}},{"value":"/ * If the promise pointed by the `promise_idx` is an ephemeral promise created by","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":89029,"byte_end":89113,"line_start":1397,"line_end":1397,"column_start":5,"column_end":89}},{"value":"/ `promise_and` returns `CannotAppendActionToJointPromise`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":89118,"byte_end":89179,"line_start":1398,"line_end":1398,"column_start":5,"column_end":66}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":89184,"byte_end":89244,"line_start":1399,"line_end":1399,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":89249,"byte_end":89252,"line_start":1400,"line_end":1400,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":89257,"byte_end":89267,"line_start":1401,"line_end":1401,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":89272,"byte_end":89275,"line_start":1402,"line_end":1402,"column_start":5,"column_end":8}},{"value":"/ `burnt_gas := base + dispatch action fee`","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":89280,"byte_end":89325,"line_start":1403,"line_end":1403,"column_start":5,"column_end":50}},{"value":"/ `used_gas := burnt_gas + exec action fee`","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":89330,"byte_end":89375,"line_start":1404,"line_end":1404,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":91052,"byte_end":91088,"line_start":1442,"line_end":1442,"column_start":12,"column_end":48},"name":"promise_batch_action_deploy_contract","qualname":"<VMLogic>::promise_batch_action_deploy_contract","value":"pub fn promise_batch_action_deploy_contract(&mut Self, u64, u64, u64)\n-> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Appends `DeployContract` action to the batch of actions for the given promise pointed by\n `promise_idx`.","sig":null,"attributes":[{"value":"/ Appends `DeployContract` action to the batch of actions for the given promise pointed by","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":90089,"byte_end":90181,"line_start":1425,"line_end":1425,"column_start":5,"column_end":97}},{"value":"/ `promise_idx`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":90186,"byte_end":90204,"line_start":1426,"line_end":1426,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":90209,"byte_end":90212,"line_start":1427,"line_end":1427,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":90217,"byte_end":90229,"line_start":1428,"line_end":1428,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":90234,"byte_end":90237,"line_start":1429,"line_end":1429,"column_start":5,"column_end":8}},{"value":"/ * If `promise_idx` does not correspond to an existing promise returns `InvalidPromiseIndex`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":90242,"byte_end":90338,"line_start":1430,"line_end":1430,"column_start":5,"column_end":101}},{"value":"/ * If the promise pointed by the `promise_idx` is an ephemeral promise created by","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":90343,"byte_end":90427,"line_start":1431,"line_end":1431,"column_start":5,"column_end":89}},{"value":"/ `promise_and` returns `CannotAppendActionToJointPromise`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":90432,"byte_end":90493,"line_start":1432,"line_end":1432,"column_start":5,"column_end":66}},{"value":"/ * If `code_len + code_ptr` points outside the memory of the guest or host returns","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":90498,"byte_end":90583,"line_start":1433,"line_end":1433,"column_start":5,"column_end":90}},{"value":"/ `MemoryAccessViolation`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":90588,"byte_end":90616,"line_start":1434,"line_end":1434,"column_start":5,"column_end":33}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":90621,"byte_end":90681,"line_start":1435,"line_end":1435,"column_start":5,"column_end":65}},{"value":"/ * If the contract code length exceeds `max_contract_size` returns `ContractSizeExceeded`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":90686,"byte_end":90779,"line_start":1436,"line_end":1436,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":90784,"byte_end":90787,"line_start":1437,"line_end":1437,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":90792,"byte_end":90802,"line_start":1438,"line_end":1438,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":90807,"byte_end":90810,"line_start":1439,"line_end":1439,"column_start":5,"column_end":8}},{"value":"/ `burnt_gas := base + dispatch action base fee + dispatch action per byte fee * num bytes + cost of reading vector from memory `","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":90815,"byte_end":90946,"line_start":1440,"line_end":1440,"column_start":5,"column_end":136}},{"value":"/ `used_gas := burnt_gas + exec action base fee + exec action per byte fee * num bytes`","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":90951,"byte_end":91040,"line_start":1441,"line_end":1441,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":93482,"byte_end":93516,"line_start":1501,"line_end":1501,"column_start":12,"column_end":46},"name":"promise_batch_action_function_call","qualname":"<VMLogic>::promise_batch_action_function_call","value":"pub fn promise_batch_action_function_call(&mut Self, u64, u64, u64, u64, u64,\nu64, Gas) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Appends `FunctionCall` action to the batch of actions for the given promise pointed by\n `promise_idx`.","sig":null,"attributes":[{"value":"/ Appends `FunctionCall` action to the batch of actions for the given promise pointed by","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":92467,"byte_end":92557,"line_start":1483,"line_end":1483,"column_start":5,"column_end":95}},{"value":"/ `promise_idx`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":92562,"byte_end":92580,"line_start":1484,"line_end":1484,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":92585,"byte_end":92588,"line_start":1485,"line_end":1485,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":92593,"byte_end":92605,"line_start":1486,"line_end":1486,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":92610,"byte_end":92613,"line_start":1487,"line_end":1487,"column_start":5,"column_end":8}},{"value":"/ * If `promise_idx` does not correspond to an existing promise returns `InvalidPromiseIndex`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":92618,"byte_end":92714,"line_start":1488,"line_end":1488,"column_start":5,"column_end":101}},{"value":"/ * If the promise pointed by the `promise_idx` is an ephemeral promise created by","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":92719,"byte_end":92803,"line_start":1489,"line_end":1489,"column_start":5,"column_end":89}},{"value":"/ `promise_and` returns `CannotAppendActionToJointPromise`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":92808,"byte_end":92869,"line_start":1490,"line_end":1490,"column_start":5,"column_end":66}},{"value":"/ * If `method_name_len + method_name_ptr` or `arguments_len + arguments_ptr` or","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":92874,"byte_end":92956,"line_start":1491,"line_end":1491,"column_start":5,"column_end":87}},{"value":"/ `amount_ptr + 16` points outside the memory of the guest or host returns","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":92961,"byte_end":93037,"line_start":1492,"line_end":1492,"column_start":5,"column_end":81}},{"value":"/ `MemoryAccessViolation`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":93042,"byte_end":93070,"line_start":1493,"line_end":1493,"column_start":5,"column_end":33}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":93075,"byte_end":93135,"line_start":1494,"line_end":1494,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":93140,"byte_end":93143,"line_start":1495,"line_end":1495,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":93148,"byte_end":93158,"line_start":1496,"line_end":1496,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":93163,"byte_end":93166,"line_start":1497,"line_end":1497,"column_start":5,"column_end":8}},{"value":"/ `burnt_gas := base + dispatch action base fee + dispatch action per byte fee * num bytes + cost of reading vector from memory","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":93171,"byte_end":93300,"line_start":1498,"line_end":1498,"column_start":5,"column_end":134}},{"value":"/  + cost of reading u128, method_name and arguments from the memory`","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":93305,"byte_end":93376,"line_start":1499,"line_end":1499,"column_start":5,"column_end":76}},{"value":"/ `used_gas := burnt_gas + exec action base fee + exec action per byte fee * num bytes`","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":93381,"byte_end":93470,"line_start":1500,"line_end":1500,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":96056,"byte_end":96085,"line_start":1565,"line_end":1565,"column_start":12,"column_end":41},"name":"promise_batch_action_transfer","qualname":"<VMLogic>::promise_batch_action_transfer","value":"pub fn promise_batch_action_transfer(&mut Self, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Appends `Transfer` action to the batch of actions for the given promise pointed by\n `promise_idx`.","sig":null,"attributes":[{"value":"/ Appends `Transfer` action to the batch of actions for the given promise pointed by","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":95203,"byte_end":95289,"line_start":1549,"line_end":1549,"column_start":5,"column_end":91}},{"value":"/ `promise_idx`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":95294,"byte_end":95312,"line_start":1550,"line_end":1550,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":95317,"byte_end":95320,"line_start":1551,"line_end":1551,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":95325,"byte_end":95337,"line_start":1552,"line_end":1552,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":95342,"byte_end":95345,"line_start":1553,"line_end":1553,"column_start":5,"column_end":8}},{"value":"/ * If `promise_idx` does not correspond to an existing promise returns `InvalidPromiseIndex`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":95350,"byte_end":95446,"line_start":1554,"line_end":1554,"column_start":5,"column_end":101}},{"value":"/ * If the promise pointed by the `promise_idx` is an ephemeral promise created by","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":95451,"byte_end":95535,"line_start":1555,"line_end":1555,"column_start":5,"column_end":89}},{"value":"/ `promise_and` returns `CannotAppendActionToJointPromise`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":95540,"byte_end":95601,"line_start":1556,"line_end":1556,"column_start":5,"column_end":66}},{"value":"/ * If `amount_ptr + 16` points outside the memory of the guest or host returns","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":95606,"byte_end":95687,"line_start":1557,"line_end":1557,"column_start":5,"column_end":86}},{"value":"/ `MemoryAccessViolation`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":95692,"byte_end":95720,"line_start":1558,"line_end":1558,"column_start":5,"column_end":33}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":95725,"byte_end":95785,"line_start":1559,"line_end":1559,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":95790,"byte_end":95793,"line_start":1560,"line_end":1560,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":95798,"byte_end":95808,"line_start":1561,"line_end":1561,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":95813,"byte_end":95816,"line_start":1562,"line_end":1562,"column_start":5,"column_end":8}},{"value":"/ `burnt_gas := base + dispatch action base fee + dispatch action per byte fee * num bytes + cost of reading u128 from memory `","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":95821,"byte_end":95950,"line_start":1563,"line_end":1563,"column_start":5,"column_end":134}},{"value":"/ `used_gas := burnt_gas + exec action base fee + exec action per byte fee * num bytes`","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":95955,"byte_end":96044,"line_start":1564,"line_end":1564,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":98400,"byte_end":98426,"line_start":1616,"line_end":1616,"column_start":12,"column_end":38},"name":"promise_batch_action_stake","qualname":"<VMLogic>::promise_batch_action_stake","value":"pub fn promise_batch_action_stake(&mut Self, u64, u64, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Appends `Stake` action to the batch of actions for the given promise pointed by\n `promise_idx`.","sig":null,"attributes":[{"value":"/ Appends `Stake` action to the batch of actions for the given promise pointed by","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":97410,"byte_end":97493,"line_start":1599,"line_end":1599,"column_start":5,"column_end":88}},{"value":"/ `promise_idx`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":97498,"byte_end":97516,"line_start":1600,"line_end":1600,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":97521,"byte_end":97524,"line_start":1601,"line_end":1601,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":97529,"byte_end":97541,"line_start":1602,"line_end":1602,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":97546,"byte_end":97549,"line_start":1603,"line_end":1603,"column_start":5,"column_end":8}},{"value":"/ * If `promise_idx` does not correspond to an existing promise returns `InvalidPromiseIndex`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":97554,"byte_end":97650,"line_start":1604,"line_end":1604,"column_start":5,"column_end":101}},{"value":"/ * If the promise pointed by the `promise_idx` is an ephemeral promise created by","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":97655,"byte_end":97739,"line_start":1605,"line_end":1605,"column_start":5,"column_end":89}},{"value":"/ `promise_and` returns `CannotAppendActionToJointPromise`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":97744,"byte_end":97805,"line_start":1606,"line_end":1606,"column_start":5,"column_end":66}},{"value":"/ * If the given public key is not a valid (e.g. wrong length) returns `InvalidPublicKey`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":97810,"byte_end":97902,"line_start":1607,"line_end":1607,"column_start":5,"column_end":97}},{"value":"/ * If `amount_ptr + 16` or `public_key_len + public_key_ptr` points outside the memory of the","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":97907,"byte_end":98003,"line_start":1608,"line_end":1608,"column_start":5,"column_end":101}},{"value":"/ guest or host returns `MemoryAccessViolation`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":98008,"byte_end":98058,"line_start":1609,"line_end":1609,"column_start":5,"column_end":55}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":98063,"byte_end":98123,"line_start":1610,"line_end":1610,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":98128,"byte_end":98131,"line_start":1611,"line_end":1611,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":98136,"byte_end":98146,"line_start":1612,"line_end":1612,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":98151,"byte_end":98154,"line_start":1613,"line_end":1613,"column_start":5,"column_end":8}},{"value":"/ `burnt_gas := base + dispatch action base fee + dispatch action per byte fee * num bytes + cost of reading public key from memory `","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":98159,"byte_end":98294,"line_start":1614,"line_end":1614,"column_start":5,"column_end":140}},{"value":"/ `used_gas := burnt_gas + exec action base fee + exec action per byte fee * num bytes`","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":98299,"byte_end":98388,"line_start":1615,"line_end":1615,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":100356,"byte_end":100401,"line_start":1662,"line_end":1662,"column_start":12,"column_end":57},"name":"promise_batch_action_add_key_with_full_access","qualname":"<VMLogic>::promise_batch_action_add_key_with_full_access","value":"pub fn promise_batch_action_add_key_with_full_access(&mut Self, u64, u64, u64,\nu64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Appends `AddKey` action to the batch of actions for the given promise pointed by\n `promise_idx`. The access key will have `FullAccess` permission.","sig":null,"attributes":[{"value":"/ Appends `AddKey` action to the batch of actions for the given promise pointed by","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":99336,"byte_end":99420,"line_start":1645,"line_end":1645,"column_start":5,"column_end":89}},{"value":"/ `promise_idx`. The access key will have `FullAccess` permission.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":99425,"byte_end":99493,"line_start":1646,"line_end":1646,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":99498,"byte_end":99501,"line_start":1647,"line_end":1647,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":99506,"byte_end":99518,"line_start":1648,"line_end":1648,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":99523,"byte_end":99526,"line_start":1649,"line_end":1649,"column_start":5,"column_end":8}},{"value":"/ * If `promise_idx` does not correspond to an existing promise returns `InvalidPromiseIndex`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":99531,"byte_end":99627,"line_start":1650,"line_end":1650,"column_start":5,"column_end":101}},{"value":"/ * If the promise pointed by the `promise_idx` is an ephemeral promise created by","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":99632,"byte_end":99716,"line_start":1651,"line_end":1651,"column_start":5,"column_end":89}},{"value":"/ `promise_and` returns `CannotAppendActionToJointPromise`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":99721,"byte_end":99782,"line_start":1652,"line_end":1652,"column_start":5,"column_end":66}},{"value":"/ * If the given public key is not a valid (e.g. wrong length) returns `InvalidPublicKey`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":99787,"byte_end":99879,"line_start":1653,"line_end":1653,"column_start":5,"column_end":97}},{"value":"/ * If `public_key_len + public_key_ptr` points outside the memory of the guest or host","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":99884,"byte_end":99973,"line_start":1654,"line_end":1654,"column_start":5,"column_end":94}},{"value":"/ returns `MemoryAccessViolation`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":99978,"byte_end":100014,"line_start":1655,"line_end":1655,"column_start":5,"column_end":41}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":100019,"byte_end":100079,"line_start":1656,"line_end":1656,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":100084,"byte_end":100087,"line_start":1657,"line_end":1657,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":100092,"byte_end":100102,"line_start":1658,"line_end":1658,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":100107,"byte_end":100110,"line_start":1659,"line_end":1659,"column_start":5,"column_end":8}},{"value":"/ `burnt_gas := base + dispatch action base fee + dispatch action per byte fee * num bytes + cost of reading public key from memory `","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":100115,"byte_end":100250,"line_start":1660,"line_end":1660,"column_start":5,"column_end":140}},{"value":"/ `used_gas := burnt_gas + exec action base fee + exec action per byte fee * num bytes`","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":100255,"byte_end":100344,"line_start":1661,"line_end":1661,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":102553,"byte_end":102600,"line_start":1709,"line_end":1709,"column_start":12,"column_end":59},"name":"promise_batch_action_add_key_with_function_call","qualname":"<VMLogic>::promise_batch_action_add_key_with_function_call","value":"pub fn promise_batch_action_add_key_with_function_call(&mut Self, u64, u64,\nu64, u64, u64, u64, u64, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Appends `AddKey` action to the batch of actions for the given promise pointed by\n `promise_idx`. The access key will have `FunctionCall` permission.","sig":null,"attributes":[{"value":"/ Appends `AddKey` action to the batch of actions for the given promise pointed by","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":101308,"byte_end":101392,"line_start":1690,"line_end":1690,"column_start":5,"column_end":89}},{"value":"/ `promise_idx`. The access key will have `FunctionCall` permission.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":101397,"byte_end":101467,"line_start":1691,"line_end":1691,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":101472,"byte_end":101475,"line_start":1692,"line_end":1692,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":101480,"byte_end":101492,"line_start":1693,"line_end":1693,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":101497,"byte_end":101500,"line_start":1694,"line_end":1694,"column_start":5,"column_end":8}},{"value":"/ * If `promise_idx` does not correspond to an existing promise returns `InvalidPromiseIndex`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":101505,"byte_end":101601,"line_start":1695,"line_end":1695,"column_start":5,"column_end":101}},{"value":"/ * If the promise pointed by the `promise_idx` is an ephemeral promise created by","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":101606,"byte_end":101690,"line_start":1696,"line_end":1696,"column_start":5,"column_end":89}},{"value":"/ `promise_and` returns `CannotAppendActionToJointPromise`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":101695,"byte_end":101756,"line_start":1697,"line_end":1697,"column_start":5,"column_end":66}},{"value":"/ * If the given public key is not a valid (e.g. wrong length) returns `InvalidPublicKey`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":101761,"byte_end":101853,"line_start":1698,"line_end":1698,"column_start":5,"column_end":97}},{"value":"/ * If `public_key_len + public_key_ptr`, `allowance_ptr + 16`,","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":101858,"byte_end":101923,"line_start":1699,"line_end":1699,"column_start":5,"column_end":70}},{"value":"/ `receiver_id_len + receiver_id_ptr` or `method_names_len + method_names_ptr` points outside","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":101928,"byte_end":102023,"line_start":1700,"line_end":1700,"column_start":5,"column_end":100}},{"value":"/ the memory of the guest or host returns `MemoryAccessViolation`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":102028,"byte_end":102096,"line_start":1701,"line_end":1701,"column_start":5,"column_end":73}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":102101,"byte_end":102161,"line_start":1702,"line_end":1702,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":102166,"byte_end":102169,"line_start":1703,"line_end":1703,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":102174,"byte_end":102184,"line_start":1704,"line_end":1704,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":102189,"byte_end":102192,"line_start":1705,"line_end":1705,"column_start":5,"column_end":8}},{"value":"/ `burnt_gas := base + dispatch action base fee + dispatch action per byte fee * num bytes + cost of reading vector from memory","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":102197,"byte_end":102326,"line_start":1706,"line_end":1706,"column_start":5,"column_end":134}},{"value":"/  + cost of reading u128, method_names and public key from the memory + cost of reading and parsing account name`","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":102331,"byte_end":102447,"line_start":1707,"line_end":1707,"column_start":5,"column_end":121}},{"value":"/ `used_gas := burnt_gas + exec action base fee + exec action per byte fee * num bytes`","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":102452,"byte_end":102541,"line_start":1708,"line_end":1708,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":105559,"byte_end":105590,"line_start":1780,"line_end":1780,"column_start":12,"column_end":43},"name":"promise_batch_action_delete_key","qualname":"<VMLogic>::promise_batch_action_delete_key","value":"pub fn promise_batch_action_delete_key(&mut Self, u64, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Appends `DeleteKey` action to the batch of actions for the given promise pointed by\n `promise_idx`.","sig":null,"attributes":[{"value":"/ Appends `DeleteKey` action to the batch of actions for the given promise pointed by","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":104586,"byte_end":104673,"line_start":1763,"line_end":1763,"column_start":5,"column_end":92}},{"value":"/ `promise_idx`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":104678,"byte_end":104696,"line_start":1764,"line_end":1764,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":104701,"byte_end":104704,"line_start":1765,"line_end":1765,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":104709,"byte_end":104721,"line_start":1766,"line_end":1766,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":104726,"byte_end":104729,"line_start":1767,"line_end":1767,"column_start":5,"column_end":8}},{"value":"/ * If `promise_idx` does not correspond to an existing promise returns `InvalidPromiseIndex`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":104734,"byte_end":104830,"line_start":1768,"line_end":1768,"column_start":5,"column_end":101}},{"value":"/ * If the promise pointed by the `promise_idx` is an ephemeral promise created by","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":104835,"byte_end":104919,"line_start":1769,"line_end":1769,"column_start":5,"column_end":89}},{"value":"/ `promise_and` returns `CannotAppendActionToJointPromise`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":104924,"byte_end":104985,"line_start":1770,"line_end":1770,"column_start":5,"column_end":66}},{"value":"/ * If the given public key is not a valid (e.g. wrong length) returns `InvalidPublicKey`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":104990,"byte_end":105082,"line_start":1771,"line_end":1771,"column_start":5,"column_end":97}},{"value":"/ * If `public_key_len + public_key_ptr` points outside the memory of the guest or host","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":105087,"byte_end":105176,"line_start":1772,"line_end":1772,"column_start":5,"column_end":94}},{"value":"/ returns `MemoryAccessViolation`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":105181,"byte_end":105217,"line_start":1773,"line_end":1773,"column_start":5,"column_end":41}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":105222,"byte_end":105282,"line_start":1774,"line_end":1774,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":105287,"byte_end":105290,"line_start":1775,"line_end":1775,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":105295,"byte_end":105305,"line_start":1776,"line_end":1776,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":105310,"byte_end":105313,"line_start":1777,"line_end":1777,"column_start":5,"column_end":8}},{"value":"/ `burnt_gas := base + dispatch action base fee + dispatch action per byte fee * num bytes + cost of reading public key from memory `","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":105318,"byte_end":105453,"line_start":1778,"line_end":1778,"column_start":5,"column_end":140}},{"value":"/ `used_gas := burnt_gas + exec action base fee + exec action per byte fee * num bytes`","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":105458,"byte_end":105547,"line_start":1779,"line_end":1779,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":107380,"byte_end":107415,"line_start":1823,"line_end":1823,"column_start":12,"column_end":47},"name":"promise_batch_action_delete_account","qualname":"<VMLogic>::promise_batch_action_delete_account","value":"pub fn promise_batch_action_delete_account(&mut Self, u64, u64, u64)\n-> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Appends `DeleteAccount` action to the batch of actions for the given promise pointed by\n `promise_idx`.","sig":null,"attributes":[{"value":"/ Appends `DeleteAccount` action to the batch of actions for the given promise pointed by","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":106431,"byte_end":106522,"line_start":1807,"line_end":1807,"column_start":5,"column_end":96}},{"value":"/ `promise_idx`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":106527,"byte_end":106545,"line_start":1808,"line_end":1808,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":106550,"byte_end":106553,"line_start":1809,"line_end":1809,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":106558,"byte_end":106570,"line_start":1810,"line_end":1810,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":106575,"byte_end":106578,"line_start":1811,"line_end":1811,"column_start":5,"column_end":8}},{"value":"/ * If `promise_idx` does not correspond to an existing promise returns `InvalidPromiseIndex`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":106583,"byte_end":106679,"line_start":1812,"line_end":1812,"column_start":5,"column_end":101}},{"value":"/ * If the promise pointed by the `promise_idx` is an ephemeral promise created by","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":106684,"byte_end":106768,"line_start":1813,"line_end":1813,"column_start":5,"column_end":89}},{"value":"/ `promise_and` returns `CannotAppendActionToJointPromise`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":106773,"byte_end":106834,"line_start":1814,"line_end":1814,"column_start":5,"column_end":66}},{"value":"/ * If `beneficiary_id_len + beneficiary_id_ptr` points outside the memory of the guest or","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":106839,"byte_end":106931,"line_start":1815,"line_end":1815,"column_start":5,"column_end":97}},{"value":"/ host returns `MemoryAccessViolation`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":106936,"byte_end":106977,"line_start":1816,"line_end":1816,"column_start":5,"column_end":46}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":106982,"byte_end":107042,"line_start":1817,"line_end":1817,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":107047,"byte_end":107050,"line_start":1818,"line_end":1818,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":107055,"byte_end":107065,"line_start":1819,"line_end":1819,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":107070,"byte_end":107073,"line_start":1820,"line_end":1820,"column_start":5,"column_end":8}},{"value":"/ `burnt_gas := base + dispatch action base fee + dispatch action per byte fee * num bytes + cost of reading and parsing account id from memory `","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":107078,"byte_end":107225,"line_start":1821,"line_end":1821,"column_start":5,"column_end":152}},{"value":"/ `used_gas := burnt_gas + exec action base fee + exec action per byte fee * num bytes + fees for transferring funds to the beneficiary`","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":107230,"byte_end":107368,"line_start":1822,"line_end":1822,"column_start":5,"column_end":143}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":108926,"byte_end":108947,"line_start":1864,"line_end":1864,"column_start":12,"column_end":33},"name":"promise_results_count","qualname":"<VMLogic>::promise_results_count","value":"pub fn promise_results_count(&mut Self) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" If the current function is invoked by a callback we can access the execution results of the\n promises that caused the callback. This function returns the number of complete and\n incomplete callbacks.","sig":null,"attributes":[{"value":"/ If the current function is invoked by a callback we can access the execution results of the","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":108301,"byte_end":108396,"line_start":1850,"line_end":1850,"column_start":5,"column_end":100}},{"value":"/ promises that caused the callback. This function returns the number of complete and","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":108401,"byte_end":108488,"line_start":1851,"line_end":1851,"column_start":5,"column_end":92}},{"value":"/ incomplete callbacks.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":108493,"byte_end":108518,"line_start":1852,"line_end":1852,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":108523,"byte_end":108526,"line_start":1853,"line_end":1853,"column_start":5,"column_end":8}},{"value":"/ Note, we are only going to have incomplete callbacks once we have promise_or combinator.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":108531,"byte_end":108623,"line_start":1854,"line_end":1854,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":108628,"byte_end":108631,"line_start":1855,"line_end":1855,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":108636,"byte_end":108639,"line_start":1856,"line_end":1856,"column_start":5,"column_end":8}},{"value":"/ * If there is only one callback returns `1`;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":108644,"byte_end":108692,"line_start":1857,"line_end":1857,"column_start":5,"column_end":53}},{"value":"/ * If there are multiple callbacks (e.g. created through `promise_and`) returns their number;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":108697,"byte_end":108793,"line_start":1858,"line_end":1858,"column_start":5,"column_end":101}},{"value":"/ * If the function was called not through the callback returns `0`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":108798,"byte_end":108868,"line_start":1859,"line_end":1859,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":108873,"byte_end":108876,"line_start":1860,"line_end":1860,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":108881,"byte_end":108891,"line_start":1861,"line_end":1861,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":108896,"byte_end":108899,"line_start":1862,"line_end":1862,"column_start":5,"column_end":8}},{"value":"/ `base`","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":108904,"byte_end":108914,"line_start":1863,"line_end":1863,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":110301,"byte_end":110315,"line_start":1897,"line_end":1897,"column_start":12,"column_end":26},"name":"promise_result","qualname":"<VMLogic>::promise_result","value":"pub fn promise_result(&mut Self, u64, u64) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" If the current function is invoked by a callback we can access the execution results of the\n promises that caused the callback. This function returns the result in blob format and\n places it into the register.","sig":null,"attributes":[{"value":"/ If the current function is invoked by a callback we can access the execution results of the","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":109274,"byte_end":109369,"line_start":1875,"line_end":1875,"column_start":5,"column_end":100}},{"value":"/ promises that caused the callback. This function returns the result in blob format and","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":109374,"byte_end":109464,"line_start":1876,"line_end":1876,"column_start":5,"column_end":95}},{"value":"/ places it into the register.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":109469,"byte_end":109501,"line_start":1877,"line_end":1877,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":109506,"byte_end":109509,"line_start":1878,"line_end":1878,"column_start":5,"column_end":8}},{"value":"/ * If promise result is complete and successful copies its blob into the register;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":109514,"byte_end":109599,"line_start":1879,"line_end":1879,"column_start":5,"column_end":90}},{"value":"/ * If promise result is complete and failed or incomplete keeps register unused;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":109604,"byte_end":109687,"line_start":1880,"line_end":1880,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":109692,"byte_end":109695,"line_start":1881,"line_end":1881,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":109700,"byte_end":109713,"line_start":1882,"line_end":1882,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":109718,"byte_end":109721,"line_start":1883,"line_end":1883,"column_start":5,"column_end":8}},{"value":"/ * If promise result is not complete returns `0`;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":109726,"byte_end":109778,"line_start":1884,"line_end":1884,"column_start":5,"column_end":57}},{"value":"/ * If promise result is complete and successful returns `1`;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":109783,"byte_end":109846,"line_start":1885,"line_end":1885,"column_start":5,"column_end":68}},{"value":"/ * If promise result is complete and failed returns `2`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":109851,"byte_end":109910,"line_start":1886,"line_end":1886,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":109915,"byte_end":109918,"line_start":1887,"line_end":1887,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":109923,"byte_end":109935,"line_start":1888,"line_end":1888,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":109940,"byte_end":109943,"line_start":1889,"line_end":1889,"column_start":5,"column_end":8}},{"value":"/ * If `result_id` does not correspond to an existing result returns `InvalidPromiseResultIndex`;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":109948,"byte_end":110047,"line_start":1890,"line_end":1890,"column_start":5,"column_end":104}},{"value":"/ * If copying the blob exhausts the memory limit it returns `MemoryAccessViolation`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":110052,"byte_end":110139,"line_start":1891,"line_end":1891,"column_start":5,"column_end":92}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":110144,"byte_end":110204,"line_start":1892,"line_end":1892,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":110209,"byte_end":110212,"line_start":1893,"line_end":1893,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":110217,"byte_end":110227,"line_start":1894,"line_end":1894,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":110232,"byte_end":110235,"line_start":1895,"line_end":1895,"column_start":5,"column_end":8}},{"value":"/ `base + cost of writing data into a register`","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":110240,"byte_end":110289,"line_start":1896,"line_end":1896,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":111440,"byte_end":111454,"line_start":1929,"line_end":1929,"column_start":12,"column_end":26},"name":"promise_return","qualname":"<VMLogic>::promise_return","value":"pub fn promise_return(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" When promise `promise_idx` finishes executing its result is considered to be the result of\n the current function.","sig":null,"attributes":[{"value":"/ When promise `promise_idx` finishes executing its result is considered to be the result of","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":111042,"byte_end":111136,"line_start":1918,"line_end":1918,"column_start":5,"column_end":99}},{"value":"/ the current function.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":111141,"byte_end":111166,"line_start":1919,"line_end":1919,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":111171,"byte_end":111174,"line_start":1920,"line_end":1920,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":111179,"byte_end":111191,"line_start":1921,"line_end":1921,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":111196,"byte_end":111199,"line_start":1922,"line_end":1922,"column_start":5,"column_end":8}},{"value":"/ * If `promise_idx` does not correspond to an existing promise returns `InvalidPromiseIndex`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":111204,"byte_end":111300,"line_start":1923,"line_end":1923,"column_start":5,"column_end":101}},{"value":"/ * If called as view function returns `ProhibitedInView`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":111305,"byte_end":111365,"line_start":1924,"line_end":1924,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":111370,"byte_end":111373,"line_start":1925,"line_end":1925,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":111378,"byte_end":111388,"line_start":1926,"line_end":1926,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":111393,"byte_end":111396,"line_start":1927,"line_end":1927,"column_start":5,"column_end":8}},{"value":"/ `base + promise_return`","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":111401,"byte_end":111428,"line_start":1928,"line_end":1928,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":112830,"byte_end":112842,"line_start":1965,"line_end":1965,"column_start":12,"column_end":24},"name":"value_return","qualname":"<VMLogic>::value_return","value":"pub fn value_return(&mut Self, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the blob of data as the return value of the contract.","sig":null,"attributes":[{"value":"/ Sets the blob of data as the return value of the contract.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":112289,"byte_end":112351,"line_start":1954,"line_end":1954,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":112356,"byte_end":112359,"line_start":1955,"line_end":1955,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":112364,"byte_end":112376,"line_start":1956,"line_end":1956,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":112381,"byte_end":112384,"line_start":1957,"line_end":1957,"column_start":5,"column_end":8}},{"value":"/ * If `value_len + value_ptr` exceeds the memory container or points to an unused register it","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":112389,"byte_end":112485,"line_start":1958,"line_end":1958,"column_start":5,"column_end":101}},{"value":"/   returns `MemoryAccessViolation`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":112490,"byte_end":112528,"line_start":1959,"line_end":1959,"column_start":5,"column_end":43}},{"value":"/ * if the length of the returned data exceeds `max_length_returned_data` returns","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":112533,"byte_end":112616,"line_start":1960,"line_end":1960,"column_start":5,"column_end":88}},{"value":"/   `ReturnedValueLengthExceeded`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":112621,"byte_end":112657,"line_start":1961,"line_end":1961,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":112662,"byte_end":112665,"line_start":1962,"line_end":1962,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":112670,"byte_end":112680,"line_start":1963,"line_end":1963,"column_start":5,"column_end":15}},{"value":"/ `base + cost of reading return value from memory or register + dispatch&exec cost per byte of the data sent * num data receivers`","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":112685,"byte_end":112818,"line_start":1964,"line_end":1964,"column_start":5,"column_end":138}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":115014,"byte_end":115019,"line_start":2009,"line_end":2009,"column_start":12,"column_end":17},"name":"panic","qualname":"<VMLogic>::panic","value":"pub fn panic(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Terminates the execution of the program with panic `GuestPanic`.","sig":null,"attributes":[{"value":"/ Terminates the execution of the program with panic `GuestPanic`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":114888,"byte_end":114956,"line_start":2004,"line_end":2004,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":114961,"byte_end":114964,"line_start":2005,"line_end":2005,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":114969,"byte_end":114979,"line_start":2006,"line_end":2006,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":114984,"byte_end":114987,"line_start":2007,"line_end":2007,"column_start":5,"column_end":8}},{"value":"/ `base`","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":114992,"byte_end":115002,"line_start":2008,"line_end":2008,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":115686,"byte_end":115696,"line_start":2025,"line_end":2025,"column_start":12,"column_end":22},"name":"panic_utf8","qualname":"<VMLogic>::panic_utf8","value":"pub fn panic_utf8(&mut Self, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Guest panics with the UTF-8 encoded string.\n If `len == u64::MAX` then treats the string as null-terminated with character `'\\0'`.","sig":null,"attributes":[{"value":"/ Guest panics with the UTF-8 encoded string.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":115192,"byte_end":115239,"line_start":2014,"line_end":2014,"column_start":5,"column_end":52}},{"value":"/ If `len == u64::MAX` then treats the string as null-terminated with character `'\\0'`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":115244,"byte_end":115333,"line_start":2015,"line_end":2015,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":115338,"byte_end":115341,"line_start":2016,"line_end":2016,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":115346,"byte_end":115358,"line_start":2017,"line_end":2017,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":115363,"byte_end":115366,"line_start":2018,"line_end":2018,"column_start":5,"column_end":8}},{"value":"/ * If string extends outside the memory of the guest with `MemoryAccessViolation`;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":115371,"byte_end":115456,"line_start":2019,"line_end":2019,"column_start":5,"column_end":90}},{"value":"/ * If string is not UTF-8 returns `BadUtf8`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":115461,"byte_end":115508,"line_start":2020,"line_end":2020,"column_start":5,"column_end":52}},{"value":"/ * If string is longer than `max_log_len` returns `TotalLogLengthExceeded`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":115513,"byte_end":115591,"line_start":2021,"line_end":2021,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":115596,"byte_end":115599,"line_start":2022,"line_end":2022,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":115604,"byte_end":115614,"line_start":2023,"line_end":2023,"column_start":5,"column_end":15}},{"value":"/ `base + cost of reading and decoding a utf8 string`","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":115619,"byte_end":115674,"line_start":2024,"line_end":2024,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":116550,"byte_end":116558,"line_start":2045,"line_end":2045,"column_start":12,"column_end":20},"name":"log_utf8","qualname":"<VMLogic>::log_utf8","value":"pub fn log_utf8(&mut Self, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Logs the UTF-8 encoded string.\n If `len == u64::MAX` then treats the string as null-terminated with character `'\\0'`.","sig":null,"attributes":[{"value":"/ Logs the UTF-8 encoded string.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":115886,"byte_end":115920,"line_start":2030,"line_end":2030,"column_start":5,"column_end":39}},{"value":"/ If `len == u64::MAX` then treats the string as null-terminated with character `'\\0'`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":115925,"byte_end":116014,"line_start":2031,"line_end":2031,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":116019,"byte_end":116022,"line_start":2032,"line_end":2032,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":116027,"byte_end":116039,"line_start":2033,"line_end":2033,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":116044,"byte_end":116047,"line_start":2034,"line_end":2034,"column_start":5,"column_end":8}},{"value":"/ * If string extends outside the memory of the guest with `MemoryAccessViolation`;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":116052,"byte_end":116137,"line_start":2035,"line_end":2035,"column_start":5,"column_end":90}},{"value":"/ * If string is not UTF-8 returns `BadUtf8`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":116142,"byte_end":116189,"line_start":2036,"line_end":2036,"column_start":5,"column_end":52}},{"value":"/ * If number of bytes read + `total_log_length` exceeds the `max_total_log_length` returns","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":116194,"byte_end":116287,"line_start":2037,"line_end":2037,"column_start":5,"column_end":98}},{"value":"/   `TotalLogLengthExceeded`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":116292,"byte_end":116323,"line_start":2038,"line_end":2038,"column_start":5,"column_end":36}},{"value":"/ * If the total number of logs will exceed the `max_number_logs` returns","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":116328,"byte_end":116403,"line_start":2039,"line_end":2039,"column_start":5,"column_end":80}},{"value":"/   `NumberOfLogsExceeded`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":116408,"byte_end":116437,"line_start":2040,"line_end":2040,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":116442,"byte_end":116445,"line_start":2041,"line_end":2041,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":116450,"byte_end":116460,"line_start":2042,"line_end":2042,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":116465,"byte_end":116468,"line_start":2043,"line_end":2043,"column_start":5,"column_end":8}},{"value":"/ `base + log_base + log_byte + num_bytes + utf8 decoding cost`","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":116473,"byte_end":116538,"line_start":2044,"line_end":2044,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":117595,"byte_end":117604,"line_start":2069,"line_end":2069,"column_start":12,"column_end":21},"name":"log_utf16","qualname":"<VMLogic>::log_utf16","value":"pub fn log_utf16(&mut Self, u64, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Logs the UTF-16 encoded string. If `len == u64::MAX` then treats the string as\n null-terminated with two-byte sequence of `0x00 0x00`.","sig":null,"attributes":[{"value":"/ Logs the UTF-16 encoded string. If `len == u64::MAX` then treats the string as","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":116911,"byte_end":116993,"line_start":2054,"line_end":2054,"column_start":5,"column_end":87}},{"value":"/ null-terminated with two-byte sequence of `0x00 0x00`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":116998,"byte_end":117056,"line_start":2055,"line_end":2055,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":117061,"byte_end":117064,"line_start":2056,"line_end":2056,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":117069,"byte_end":117081,"line_start":2057,"line_end":2057,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":117086,"byte_end":117089,"line_start":2058,"line_end":2058,"column_start":5,"column_end":8}},{"value":"/ * If string extends outside the memory of the guest with `MemoryAccessViolation`;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":117094,"byte_end":117179,"line_start":2059,"line_end":2059,"column_start":5,"column_end":90}},{"value":"/ * If string is not UTF-16 returns `BadUtf16`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":117184,"byte_end":117233,"line_start":2060,"line_end":2060,"column_start":5,"column_end":54}},{"value":"/ * If number of bytes read + `total_log_length` exceeds the `max_total_log_length` returns","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":117238,"byte_end":117331,"line_start":2061,"line_end":2061,"column_start":5,"column_end":98}},{"value":"/   `TotalLogLengthExceeded`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":117336,"byte_end":117367,"line_start":2062,"line_end":2062,"column_start":5,"column_end":36}},{"value":"/ * If the total number of logs will exceed the `max_number_logs` returns","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":117372,"byte_end":117447,"line_start":2063,"line_end":2063,"column_start":5,"column_end":80}},{"value":"/   `NumberOfLogsExceeded`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":117452,"byte_end":117481,"line_start":2064,"line_end":2064,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":117486,"byte_end":117489,"line_start":2065,"line_end":2065,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":117494,"byte_end":117504,"line_start":2066,"line_end":2066,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":117509,"byte_end":117512,"line_start":2067,"line_end":2067,"column_start":5,"column_end":8}},{"value":"/ `base + log_base + log_byte * num_bytes + utf16 decoding cost`","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":117517,"byte_end":117583,"line_start":2068,"line_end":2068,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":118768,"byte_end":118773,"line_start":2094,"line_end":2094,"column_start":12,"column_end":17},"name":"abort","qualname":"<VMLogic>::abort","value":"pub fn abort(&mut Self, u32, u32, u32, u32) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Special import kept for compatibility with AssemblyScript contracts. Not called by smart\n contracts directly, but instead called by the code generated by AssemblyScript.","sig":null,"attributes":[{"value":"/ Special import kept for compatibility with AssemblyScript contracts. Not called by smart","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":118050,"byte_end":118142,"line_start":2079,"line_end":2079,"column_start":5,"column_end":97}},{"value":"/ contracts directly, but instead called by the code generated by AssemblyScript.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":118147,"byte_end":118230,"line_start":2080,"line_end":2080,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":118235,"byte_end":118238,"line_start":2081,"line_end":2081,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":118243,"byte_end":118255,"line_start":2082,"line_end":2082,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":118260,"byte_end":118263,"line_start":2083,"line_end":2083,"column_start":5,"column_end":8}},{"value":"/ * If string extends outside the memory of the guest with `MemoryAccessViolation`;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":118268,"byte_end":118353,"line_start":2084,"line_end":2084,"column_start":5,"column_end":90}},{"value":"/ * If string is not UTF-8 returns `BadUtf8`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":118358,"byte_end":118405,"line_start":2085,"line_end":2085,"column_start":5,"column_end":52}},{"value":"/ * If number of bytes read + `total_log_length` exceeds the `max_total_log_length` returns","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":118410,"byte_end":118503,"line_start":2086,"line_end":2086,"column_start":5,"column_end":98}},{"value":"/   `TotalLogLengthExceeded`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":118508,"byte_end":118539,"line_start":2087,"line_end":2087,"column_start":5,"column_end":36}},{"value":"/ * If the total number of logs will exceed the `max_number_logs` returns","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":118544,"byte_end":118619,"line_start":2088,"line_end":2088,"column_start":5,"column_end":80}},{"value":"/   `NumberOfLogsExceeded`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":118624,"byte_end":118653,"line_start":2089,"line_end":2089,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":118658,"byte_end":118661,"line_start":2090,"line_end":2090,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":118666,"byte_end":118676,"line_start":2091,"line_end":2091,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":118681,"byte_end":118684,"line_start":2092,"line_end":2092,"column_start":5,"column_end":8}},{"value":"/ `base +  log_base + log_byte * num_bytes + utf16 decoding cost`","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":118689,"byte_end":118756,"line_start":2093,"line_end":2093,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":122349,"byte_end":122362,"line_start":2171,"line_end":2171,"column_start":12,"column_end":25},"name":"storage_write","qualname":"<VMLogic>::storage_write","value":"pub fn storage_write(&mut Self, u64, u64, u64, u64, u64) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Writes key-value into storage.\n * If key is not in use it inserts the key-value pair and does not modify the register. Returns `0`;\n * If key is in use it inserts the key-value and copies the old value into the `register_id`. Returns `1`.","sig":null,"attributes":[{"value":"/ Writes key-value into storage.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":121118,"byte_end":121152,"line_start":2150,"line_end":2150,"column_start":5,"column_end":39}},{"value":"/ * If key is not in use it inserts the key-value pair and does not modify the register. Returns `0`;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":121157,"byte_end":121260,"line_start":2151,"line_end":2151,"column_start":5,"column_end":108}},{"value":"/ * If key is in use it inserts the key-value and copies the old value into the `register_id`. Returns `1`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":121265,"byte_end":121374,"line_start":2152,"line_end":2152,"column_start":5,"column_end":114}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":121379,"byte_end":121382,"line_start":2153,"line_end":2153,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":121387,"byte_end":121399,"line_start":2154,"line_end":2154,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":121404,"byte_end":121407,"line_start":2155,"line_end":2155,"column_start":5,"column_end":8}},{"value":"/ * If `key_len + key_ptr` or `value_len + value_ptr` exceeds the memory container or points","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":121412,"byte_end":121506,"line_start":2156,"line_end":2156,"column_start":5,"column_end":99}},{"value":"/   to an unused register it returns `MemoryAccessViolation`;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":121511,"byte_end":121574,"line_start":2157,"line_end":2157,"column_start":5,"column_end":68}},{"value":"/ * If returning the preempted value into the registers exceed the memory container it returns","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":121579,"byte_end":121675,"line_start":2158,"line_end":2158,"column_start":5,"column_end":101}},{"value":"/   `MemoryAccessViolation`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":121680,"byte_end":121710,"line_start":2159,"line_end":2159,"column_start":5,"column_end":35}},{"value":"/ * If the length of the key exceeds `max_length_storage_key` returns `KeyLengthExceeded`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":121715,"byte_end":121807,"line_start":2160,"line_end":2160,"column_start":5,"column_end":97}},{"value":"/ * If the length of the value exceeds `max_length_storage_value` returns","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":121812,"byte_end":121887,"line_start":2161,"line_end":2161,"column_start":5,"column_end":80}},{"value":"/   `ValueLengthExceeded`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":121892,"byte_end":121920,"line_start":2162,"line_end":2162,"column_start":5,"column_end":33}},{"value":"/ * If called as view function returns `ProhibitedInView``.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":121925,"byte_end":121986,"line_start":2163,"line_end":2163,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":121991,"byte_end":121994,"line_start":2164,"line_end":2164,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":121999,"byte_end":122009,"line_start":2165,"line_end":2165,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":122014,"byte_end":122017,"line_start":2166,"line_end":2166,"column_start":5,"column_end":8}},{"value":"/ `base + storage_write_base + storage_write_key_byte * num_key_bytes + storage_write_value_byte * num_value_bytes","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":122022,"byte_end":122138,"line_start":2167,"line_end":2167,"column_start":5,"column_end":121}},{"value":"/ + get_vec_from_memory_or_register_cost x 2`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":122143,"byte_end":122191,"line_start":2168,"line_end":2168,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":122196,"byte_end":122199,"line_start":2169,"line_end":2169,"column_start":5,"column_end":8}},{"value":"/ If a value was evicted it costs additional `storage_write_value_evicted_byte * num_evicted_bytes + internal_write_register_cost`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":122204,"byte_end":122337,"line_start":2170,"line_end":2170,"column_start":5,"column_end":138}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":126830,"byte_end":126842,"line_start":2273,"line_end":2273,"column_start":12,"column_end":24},"name":"storage_read","qualname":"<VMLogic>::storage_read","value":"pub fn storage_read(&mut Self, u64, u64, u64) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Reads the value stored under the given key.\n * If key is used copies the content of the value into the `register_id`, even if the content\n   is zero bytes. Returns `1`;\n * If key is not present then does not modify the register. Returns `0`;","sig":null,"attributes":[{"value":"/ Reads the value stored under the given key.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":125919,"byte_end":125966,"line_start":2256,"line_end":2256,"column_start":5,"column_end":52}},{"value":"/ * If key is used copies the content of the value into the `register_id`, even if the content","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":125971,"byte_end":126067,"line_start":2257,"line_end":2257,"column_start":5,"column_end":101}},{"value":"/   is zero bytes. Returns `1`;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":126072,"byte_end":126105,"line_start":2258,"line_end":2258,"column_start":5,"column_end":38}},{"value":"/ * If key is not present then does not modify the register. Returns `0`;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":126110,"byte_end":126185,"line_start":2259,"line_end":2259,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":126190,"byte_end":126193,"line_start":2260,"line_end":2260,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":126198,"byte_end":126210,"line_start":2261,"line_end":2261,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":126215,"byte_end":126218,"line_start":2262,"line_end":2262,"column_start":5,"column_end":8}},{"value":"/ * If `key_len + key_ptr` exceeds the memory container or points to an unused register it","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":126223,"byte_end":126315,"line_start":2263,"line_end":2263,"column_start":5,"column_end":97}},{"value":"/   returns `MemoryAccessViolation`;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":126320,"byte_end":126358,"line_start":2264,"line_end":2264,"column_start":5,"column_end":43}},{"value":"/ * If returning the preempted value into the registers exceed the memory container it returns","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":126363,"byte_end":126459,"line_start":2265,"line_end":2265,"column_start":5,"column_end":101}},{"value":"/   `MemoryAccessViolation`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":126464,"byte_end":126494,"line_start":2266,"line_end":2266,"column_start":5,"column_end":35}},{"value":"/ * If the length of the key exceeds `max_length_storage_key` returns `KeyLengthExceeded`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":126499,"byte_end":126591,"line_start":2267,"line_end":2267,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":126596,"byte_end":126599,"line_start":2268,"line_end":2268,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":126604,"byte_end":126614,"line_start":2269,"line_end":2269,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":126619,"byte_end":126622,"line_start":2270,"line_end":2270,"column_start":5,"column_end":8}},{"value":"/ `base + storage_read_base + storage_read_key_byte * num_key_bytes + storage_read_value_byte + num_value_bytes","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":126627,"byte_end":126740,"line_start":2271,"line_end":2271,"column_start":5,"column_end":118}},{"value":"/  cost to read key from register + cost to write value into register`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":126745,"byte_end":126818,"line_start":2272,"line_end":2272,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":129078,"byte_end":129092,"line_start":2318,"line_end":2318,"column_start":12,"column_end":26},"name":"storage_remove","qualname":"<VMLogic>::storage_remove","value":"pub fn storage_remove(&mut Self, u64, u64, u64) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Removes the value stored under the given key.\n * If key is used, removes the key-value from the trie and copies the content of the value\n   into the `register_id`, even if the content is zero bytes. Returns `1`;\n * If key is not present then does not modify the register. Returns `0`.","sig":null,"attributes":[{"value":"/ Removes the value stored under the given key.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":127983,"byte_end":128032,"line_start":2299,"line_end":2299,"column_start":5,"column_end":54}},{"value":"/ * If key is used, removes the key-value from the trie and copies the content of the value","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":128037,"byte_end":128130,"line_start":2300,"line_end":2300,"column_start":5,"column_end":98}},{"value":"/   into the `register_id`, even if the content is zero bytes. Returns `1`;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":128135,"byte_end":128212,"line_start":2301,"line_end":2301,"column_start":5,"column_end":82}},{"value":"/ * If key is not present then does not modify the register. Returns `0`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":128217,"byte_end":128292,"line_start":2302,"line_end":2302,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":128297,"byte_end":128300,"line_start":2303,"line_end":2303,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":128305,"byte_end":128317,"line_start":2304,"line_end":2304,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":128322,"byte_end":128325,"line_start":2305,"line_end":2305,"column_start":5,"column_end":8}},{"value":"/ * If `key_len + key_ptr` exceeds the memory container or points to an unused register it","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":128330,"byte_end":128422,"line_start":2306,"line_end":2306,"column_start":5,"column_end":97}},{"value":"/   returns `MemoryAccessViolation`;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":128427,"byte_end":128465,"line_start":2307,"line_end":2307,"column_start":5,"column_end":43}},{"value":"/ * If the registers exceed the memory limit returns `MemoryAccessViolation`;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":128470,"byte_end":128549,"line_start":2308,"line_end":2308,"column_start":5,"column_end":84}},{"value":"/ * If returning the preempted value into the registers exceed the memory container it returns","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":128554,"byte_end":128650,"line_start":2309,"line_end":2309,"column_start":5,"column_end":101}},{"value":"/   `MemoryAccessViolation`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":128655,"byte_end":128685,"line_start":2310,"line_end":2310,"column_start":5,"column_end":35}},{"value":"/ * If the length of the key exceeds `max_length_storage_key` returns `KeyLengthExceeded`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":128690,"byte_end":128782,"line_start":2311,"line_end":2311,"column_start":5,"column_end":97}},{"value":"/ * If called as view function returns `ProhibitedInView``.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":128787,"byte_end":128848,"line_start":2312,"line_end":2312,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":128853,"byte_end":128856,"line_start":2313,"line_end":2313,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":128861,"byte_end":128871,"line_start":2314,"line_end":2314,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":128876,"byte_end":128879,"line_start":2315,"line_end":2315,"column_start":5,"column_end":8}},{"value":"/ `base + storage_remove_base + storage_remove_key_byte * num_key_bytes + storage_remove_ret_value_byte * num_value_bytes","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":128884,"byte_end":129007,"line_start":2316,"line_end":2316,"column_start":5,"column_end":128}},{"value":"/ + cost to read the key + cost to write the value`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":129012,"byte_end":129066,"line_start":2317,"line_end":2317,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":131543,"byte_end":131558,"line_start":2374,"line_end":2374,"column_start":12,"column_end":27},"name":"storage_has_key","qualname":"<VMLogic>::storage_has_key","value":"pub fn storage_has_key(&mut Self, u64, u64) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Checks if there is a key-value pair.\n * If key is used returns `1`, even if the value is zero bytes;\n * Otherwise returns `0`.","sig":null,"attributes":[{"value":"/ Checks if there is a key-value pair.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":131033,"byte_end":131073,"line_start":2362,"line_end":2362,"column_start":5,"column_end":45}},{"value":"/ * If key is used returns `1`, even if the value is zero bytes;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":131078,"byte_end":131144,"line_start":2363,"line_end":2363,"column_start":5,"column_end":71}},{"value":"/ * Otherwise returns `0`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":131149,"byte_end":131177,"line_start":2364,"line_end":2364,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":131182,"byte_end":131185,"line_start":2365,"line_end":2365,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":131190,"byte_end":131202,"line_start":2366,"line_end":2366,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":131207,"byte_end":131210,"line_start":2367,"line_end":2367,"column_start":5,"column_end":8}},{"value":"/ * If `key_len + key_ptr` exceeds the memory container it returns `MemoryAccessViolation`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":131215,"byte_end":131308,"line_start":2368,"line_end":2368,"column_start":5,"column_end":98}},{"value":"/ * If the length of the key exceeds `max_length_storage_key` returns `KeyLengthExceeded`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":131313,"byte_end":131405,"line_start":2369,"line_end":2369,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":131410,"byte_end":131413,"line_start":2370,"line_end":2370,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":131418,"byte_end":131428,"line_start":2371,"line_end":2371,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":131433,"byte_end":131436,"line_start":2372,"line_end":2372,"column_start":5,"column_end":8}},{"value":"/ `base + storage_has_key_base + storage_has_key_byte * num_bytes + cost of reading key`","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":131441,"byte_end":131531,"line_start":2373,"line_end":2373,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":133310,"byte_end":133329,"line_start":2410,"line_end":2410,"column_start":12,"column_end":31},"name":"storage_iter_prefix","qualname":"<VMLogic>::storage_iter_prefix","value":"pub fn storage_iter_prefix(&mut Self, u64, u64) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" DEPRECATED\n Creates an iterator object inside the host. Returns the identifier that uniquely\n differentiates the given iterator from other iterators that can be simultaneously created.\n * It iterates over the keys that have the provided prefix. The order of iteration is defined\n   by the lexicographic order of the bytes in the keys;\n * If there are no keys, it creates an empty iterator, see below on empty iterators.","sig":null,"attributes":[{"value":"/ DEPRECATED","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":132426,"byte_end":132440,"line_start":2393,"line_end":2393,"column_start":5,"column_end":19}},{"value":"/ Creates an iterator object inside the host. Returns the identifier that uniquely","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":132445,"byte_end":132529,"line_start":2394,"line_end":2394,"column_start":5,"column_end":89}},{"value":"/ differentiates the given iterator from other iterators that can be simultaneously created.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":132534,"byte_end":132628,"line_start":2395,"line_end":2395,"column_start":5,"column_end":99}},{"value":"/ * It iterates over the keys that have the provided prefix. The order of iteration is defined","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":132633,"byte_end":132729,"line_start":2396,"line_end":2396,"column_start":5,"column_end":101}},{"value":"/   by the lexicographic order of the bytes in the keys;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":132734,"byte_end":132792,"line_start":2397,"line_end":2397,"column_start":5,"column_end":63}},{"value":"/ * If there are no keys, it creates an empty iterator, see below on empty iterators.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":132797,"byte_end":132884,"line_start":2398,"line_end":2398,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":132889,"byte_end":132892,"line_start":2399,"line_end":2399,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":132897,"byte_end":132909,"line_start":2400,"line_end":2400,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":132914,"byte_end":132917,"line_start":2401,"line_end":2401,"column_start":5,"column_end":8}},{"value":"/ * If `prefix_len + prefix_ptr` exceeds the memory container it returns","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":132922,"byte_end":132996,"line_start":2402,"line_end":2402,"column_start":5,"column_end":79}},{"value":"/   `MemoryAccessViolation`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":133001,"byte_end":133031,"line_start":2403,"line_end":2403,"column_start":5,"column_end":35}},{"value":"/ * If the length of the prefix exceeds `max_length_storage_key` returns `KeyLengthExceeded`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":133036,"byte_end":133131,"line_start":2404,"line_end":2404,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":133136,"byte_end":133139,"line_start":2405,"line_end":2405,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":133144,"byte_end":133154,"line_start":2406,"line_end":2406,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":133159,"byte_end":133162,"line_start":2407,"line_end":2407,"column_start":5,"column_end":8}},{"value":"/ `base + storage_iter_create_prefix_base + storage_iter_create_key_byte * num_prefix_bytes","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":133167,"byte_end":133260,"line_start":2408,"line_end":2408,"column_start":5,"column_end":98}},{"value":"/  cost of reading the prefix`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":133265,"byte_end":133298,"line_start":2409,"line_end":2409,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":134512,"byte_end":134530,"line_start":2433,"line_end":2433,"column_start":12,"column_end":30},"name":"storage_iter_range","qualname":"<VMLogic>::storage_iter_range","value":"pub fn storage_iter_range(&mut Self, u64, u64, u64, u64) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" DEPRECATED\n Iterates over all key-values such that keys are between `start` and `end`, where `start` is\n inclusive and `end` is exclusive. Unless lexicographically `start < end`, it creates an\n empty iterator. Note, this definition allows for `start` or `end` keys to not actually exist\n on the given trie.","sig":null,"attributes":[{"value":"/ DEPRECATED","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":133537,"byte_end":133551,"line_start":2416,"line_end":2416,"column_start":5,"column_end":19}},{"value":"/ Iterates over all key-values such that keys are between `start` and `end`, where `start` is","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":133556,"byte_end":133651,"line_start":2417,"line_end":2417,"column_start":5,"column_end":100}},{"value":"/ inclusive and `end` is exclusive. Unless lexicographically `start < end`, it creates an","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":133656,"byte_end":133747,"line_start":2418,"line_end":2418,"column_start":5,"column_end":96}},{"value":"/ empty iterator. Note, this definition allows for `start` or `end` keys to not actually exist","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":133752,"byte_end":133848,"line_start":2419,"line_end":2419,"column_start":5,"column_end":101}},{"value":"/ on the given trie.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":133853,"byte_end":133875,"line_start":2420,"line_end":2420,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":133880,"byte_end":133883,"line_start":2421,"line_end":2421,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":133888,"byte_end":133900,"line_start":2422,"line_end":2422,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":133905,"byte_end":133908,"line_start":2423,"line_end":2423,"column_start":5,"column_end":8}},{"value":"/ * If `start_len + start_ptr` or `end_len + end_ptr` exceeds the memory container or points to","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":133913,"byte_end":134010,"line_start":2424,"line_end":2424,"column_start":5,"column_end":102}},{"value":"/   an unused register it returns `MemoryAccessViolation`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":134015,"byte_end":134075,"line_start":2425,"line_end":2425,"column_start":5,"column_end":65}},{"value":"/ * If the length of the `start` exceeds `max_length_storage_key` returns `KeyLengthExceeded`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":134080,"byte_end":134176,"line_start":2426,"line_end":2426,"column_start":5,"column_end":101}},{"value":"/ * If the length of the `end` exceeds `max_length_storage_key` returns `KeyLengthExceeded`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":134181,"byte_end":134275,"line_start":2427,"line_end":2427,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":134280,"byte_end":134283,"line_start":2428,"line_end":2428,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":134288,"byte_end":134298,"line_start":2429,"line_end":2429,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":134303,"byte_end":134306,"line_start":2430,"line_end":2430,"column_start":5,"column_end":8}},{"value":"/ `base + storage_iter_create_range_base + storage_iter_create_from_byte * num_from_bytes","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":134311,"byte_end":134402,"line_start":2431,"line_end":2431,"column_start":5,"column_end":96}},{"value":"/  + storage_iter_create_to_byte * num_to_bytes + reading from prefix + reading to prefix`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":134407,"byte_end":134500,"line_start":2432,"line_end":2432,"column_start":5,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":136562,"byte_end":136579,"line_start":2473,"line_end":2473,"column_start":12,"column_end":29},"name":"storage_iter_next","qualname":"<VMLogic>::storage_iter_next","value":"pub fn storage_iter_next(&mut Self, u64, u64, u64) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" DEPRECATED\n Advances iterator and saves the next key and value in the register.\n * If iterator is not empty (after calling next it points to a key-value), copies the key\n   into `key_register_id` and value into `value_register_id` and returns `1`;\n * If iterator is empty returns `0`;\n This allows us to iterate over the keys that have zero bytes stored in values.","sig":null,"attributes":[{"value":"/ DEPRECATED","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":134812,"byte_end":134826,"line_start":2445,"line_end":2445,"column_start":5,"column_end":19}},{"value":"/ Advances iterator and saves the next key and value in the register.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":134831,"byte_end":134902,"line_start":2446,"line_end":2446,"column_start":5,"column_end":76}},{"value":"/ * If iterator is not empty (after calling next it points to a key-value), copies the key","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":134907,"byte_end":134999,"line_start":2447,"line_end":2447,"column_start":5,"column_end":97}},{"value":"/   into `key_register_id` and value into `value_register_id` and returns `1`;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":135004,"byte_end":135084,"line_start":2448,"line_end":2448,"column_start":5,"column_end":85}},{"value":"/ * If iterator is empty returns `0`;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":135089,"byte_end":135128,"line_start":2449,"line_end":2449,"column_start":5,"column_end":44}},{"value":"/ This allows us to iterate over the keys that have zero bytes stored in values.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":135133,"byte_end":135215,"line_start":2450,"line_end":2450,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":135220,"byte_end":135223,"line_start":2451,"line_end":2451,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":135228,"byte_end":135240,"line_start":2452,"line_end":2452,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":135245,"byte_end":135248,"line_start":2453,"line_end":2453,"column_start":5,"column_end":8}},{"value":"/ * If `key_register_id == value_register_id` returns `MemoryAccessViolation`;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":135253,"byte_end":135333,"line_start":2454,"line_end":2454,"column_start":5,"column_end":85}},{"value":"/ * If the registers exceed the memory limit returns `MemoryAccessViolation`;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":135338,"byte_end":135417,"line_start":2455,"line_end":2455,"column_start":5,"column_end":84}},{"value":"/ * If `iterator_id` does not correspond to an existing iterator returns `InvalidIteratorId`;","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":135422,"byte_end":135517,"line_start":2456,"line_end":2456,"column_start":5,"column_end":100}},{"value":"/ * If between the creation of the iterator and calling `storage_iter_next` the range over","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":135522,"byte_end":135614,"line_start":2457,"line_end":2457,"column_start":5,"column_end":97}},{"value":"/   which it iterates was modified returns `IteratorWasInvalidated`. Specifically, if","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":135619,"byte_end":135706,"line_start":2458,"line_end":2458,"column_start":5,"column_end":92}},{"value":"/   `storage_write` or `storage_remove` was invoked on the key key such that:","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":135711,"byte_end":135790,"line_start":2459,"line_end":2459,"column_start":5,"column_end":84}},{"value":"/   * in case of `storage_iter_prefix`. `key` has the given prefix and:","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":135795,"byte_end":135868,"line_start":2460,"line_end":2460,"column_start":5,"column_end":78}},{"value":"/     * Iterator was not called next yet.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":135873,"byte_end":135916,"line_start":2461,"line_end":2461,"column_start":5,"column_end":48}},{"value":"/     * `next` was already called on the iterator and it is currently pointing at the `key`","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":135921,"byte_end":136014,"line_start":2462,"line_end":2462,"column_start":5,"column_end":98}},{"value":"/       `curr` such that `curr <= key`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":136019,"byte_end":136060,"line_start":2463,"line_end":2463,"column_start":5,"column_end":46}},{"value":"/   * in case of `storage_iter_range`. `start<=key<end` and:","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":136065,"byte_end":136127,"line_start":2464,"line_end":2464,"column_start":5,"column_end":67}},{"value":"/     * Iterator was not called `next` yet.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":136132,"byte_end":136177,"line_start":2465,"line_end":2465,"column_start":5,"column_end":50}},{"value":"/     * `next` was already called on the iterator and it is currently pointing at the key","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":136182,"byte_end":136273,"line_start":2466,"line_end":2466,"column_start":5,"column_end":96}},{"value":"/       `curr` such that `curr<=key<end`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":136278,"byte_end":136321,"line_start":2467,"line_end":2467,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":136326,"byte_end":136329,"line_start":2468,"line_end":2468,"column_start":5,"column_end":8}},{"value":"/ # Cost","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":136334,"byte_end":136344,"line_start":2469,"line_end":2469,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":136349,"byte_end":136352,"line_start":2470,"line_end":2470,"column_start":5,"column_end":8}},{"value":"/ `base + storage_iter_next_base + storage_iter_next_key_byte * num_key_bytes + storage_iter_next_value_byte * num_value_bytes","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":136357,"byte_end":136485,"line_start":2471,"line_end":2471,"column_start":5,"column_end":133}},{"value":"/  + writing key to register + writing value to register`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":136490,"byte_end":136550,"line_start":2472,"line_end":2472,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":136905,"byte_end":136912,"line_start":2485,"line_end":2485,"column_start":12,"column_end":19},"name":"outcome","qualname":"<VMLogic>::outcome","value":"pub fn outcome(Self) -> VMOutcome","parent":null,"children":[],"decl_id":null,"docs":" Computes the outcome of execution.\n","sig":null,"attributes":[{"value":"/ Computes the outcome of execution.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":136855,"byte_end":136893,"line_start":2484,"line_end":2484,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":137359,"byte_end":137372,"line_start":2498,"line_end":2498,"column_start":12,"column_end":25},"name":"clone_outcome","qualname":"<VMLogic>::clone_outcome","value":"pub fn clone_outcome(&Self) -> VMOutcome","parent":null,"children":[],"decl_id":null,"docs":" clones the outcome of execution.\n","sig":null,"attributes":[{"value":"/ clones the outcome of execution.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":137311,"byte_end":137347,"line_start":2497,"line_end":2497,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":137941,"byte_end":137965,"line_start":2513,"line_end":2513,"column_start":12,"column_end":36},"name":"add_contract_compile_fee","qualname":"<VMLogic>::add_contract_compile_fee","value":"pub fn add_contract_compile_fee(&mut Self, u64) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":138198,"byte_end":138217,"line_start":2519,"line_end":2519,"column_start":12,"column_end":31},"name":"gas_counter_pointer","qualname":"<VMLogic>::gas_counter_pointer","value":"pub fn gas_counter_pointer(&mut Self) -> *mut FastGasCounter","parent":null,"children":[],"decl_id":null,"docs":" Gets pointer to the fast gas counter.\n","sig":null,"attributes":[{"value":"/ Gets pointer to the fast gas counter.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":138145,"byte_end":138186,"line_start":2518,"line_end":2518,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":138370,"byte_end":138387,"line_start":2524,"line_end":2524,"column_start":12,"column_end":29},"name":"process_gas_limit","qualname":"<VMLogic>::process_gas_limit","value":"pub fn process_gas_limit(&mut Self) -> HostError","parent":null,"children":[],"decl_id":null,"docs":" Properly handles gas limit exceeded error.\n","sig":null,"attributes":[{"value":"/ Properly handles gas limit exceeded error.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":138312,"byte_end":138358,"line_start":2523,"line_end":2523,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1020},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":138646,"byte_end":138655,"line_start":2532,"line_end":2532,"column_start":12,"column_end":21},"name":"VMOutcome","qualname":"::logic::VMOutcome","value":"VMOutcome { balance, storage_usage, return_data, burnt_gas, used_gas, logs, profile }","parent":null,"children":[{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1026},{"krate":0,"index":1027}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1021},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":138666,"byte_end":138673,"line_start":2533,"line_end":2533,"column_start":9,"column_end":16},"name":"balance","qualname":"::logic::VMOutcome::balance","value":"u128","parent":{"krate":0,"index":1020},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1022},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":138692,"byte_end":138705,"line_start":2534,"line_end":2534,"column_start":9,"column_end":22},"name":"storage_usage","qualname":"::logic::VMOutcome::storage_usage","value":"u64","parent":{"krate":0,"index":1020},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1023},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":138729,"byte_end":138740,"line_start":2535,"line_end":2535,"column_start":9,"column_end":20},"name":"return_data","qualname":"::logic::VMOutcome::return_data","value":"types::ReturnData","parent":{"krate":0,"index":1020},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1024},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":138762,"byte_end":138771,"line_start":2536,"line_end":2536,"column_start":9,"column_end":18},"name":"burnt_gas","qualname":"::logic::VMOutcome::burnt_gas","value":"u64","parent":{"krate":0,"index":1020},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1025},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":138786,"byte_end":138794,"line_start":2537,"line_end":2537,"column_start":9,"column_end":17},"name":"used_gas","qualname":"::logic::VMOutcome::used_gas","value":"u64","parent":{"krate":0,"index":1020},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1026},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":138809,"byte_end":138813,"line_start":2538,"line_end":2538,"column_start":9,"column_end":13},"name":"logs","qualname":"::logic::VMOutcome::logs","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":1020},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1027},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":138887,"byte_end":138894,"line_start":2540,"line_end":2540,"column_start":9,"column_end":16},"name":"profile","qualname":"::logic::VMOutcome::profile","value":"near_primitives_core::profile::ProfileData","parent":{"krate":0,"index":1020},"children":[],"decl_id":null,"docs":" Data collected from making a contract call\n","sig":null,"attributes":[{"value":"/ Data collected from making a contract call","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":138832,"byte_end":138878,"line_start":2539,"line_end":2539,"column_start":5,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":412},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/mocks/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mocks","qualname":"::mocks","value":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/mocks/mod.rs","parent":null,"children":[{"krate":0,"index":413},{"krate":0,"index":484}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":413},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/mocks/mock_external.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mock_external","qualname":"::mocks::mock_external","value":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/mocks/mock_external.rs","parent":null,"children":[{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":418},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":425},{"krate":0,"index":428},{"krate":0,"index":431},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":441},{"krate":0,"index":1034},{"krate":0,"index":1038},{"krate":0,"index":1040},{"krate":0,"index":444},{"krate":0,"index":446},{"krate":0,"index":449},{"krate":0,"index":452},{"krate":0,"index":455},{"krate":0,"index":458},{"krate":0,"index":461},{"krate":0,"index":1042},{"krate":0,"index":1046},{"krate":0,"index":1052},{"krate":0,"index":1097},{"krate":0,"index":1099},{"krate":0,"index":1101},{"krate":0,"index":1128},{"krate":0,"index":1134},{"krate":0,"index":1187},{"krate":0,"index":1189},{"krate":0,"index":1191},{"krate":0,"index":1193},{"krate":0,"index":1199},{"krate":0,"index":1240},{"krate":0,"index":1242},{"krate":0,"index":1244},{"krate":0,"index":1247},{"krate":0,"index":1269},{"krate":0,"index":1354},{"krate":0,"index":1356},{"krate":0,"index":1360},{"krate":0,"index":1362},{"krate":0,"index":1368},{"krate":0,"index":1409},{"krate":0,"index":1411},{"krate":0,"index":1413},{"krate":0,"index":1415},{"krate":0,"index":1429},{"krate":0,"index":1491},{"krate":0,"index":1493},{"krate":0,"index":1496},{"krate":0,"index":1498},{"krate":0,"index":1512},{"krate":0,"index":1574},{"krate":0,"index":1576},{"krate":0,"index":1579},{"krate":0,"index":1583},{"krate":0,"index":1605},{"krate":0,"index":1692},{"krate":0,"index":1694},{"krate":0,"index":1698},{"krate":0,"index":1699},{"krate":0,"index":1713},{"krate":0,"index":1773},{"krate":0,"index":1775},{"krate":0,"index":1778},{"krate":0,"index":1780},{"krate":0,"index":1786},{"krate":0,"index":1827},{"krate":0,"index":1829}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1034},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/mocks/mock_external.rs","byte_start":139843,"byte_end":139857,"line_start":9,"line_end":9,"column_start":12,"column_end":26},"name":"MockedExternal","qualname":"::mocks::mock_external::MockedExternal","value":"MockedExternal { fake_trie, validators }","parent":null,"children":[{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037}],"decl_id":null,"docs":" Emulates the trie and the mock handling code.\n","sig":null,"attributes":[{"value":"/ Emulates the trie and the mock handling code.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/mocks/mock_external.rs","byte_start":139782,"byte_end":139831,"line_start":8,"line_end":8,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":1035},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/mocks/mock_external.rs","byte_start":139868,"byte_end":139877,"line_start":10,"line_end":10,"column_start":9,"column_end":18},"name":"fake_trie","qualname":"::mocks::mock_external::MockedExternal::fake_trie","value":"std::collections::HashMap<std::vec::Vec<u8>, std::vec::Vec<u8>>","parent":{"krate":0,"index":1034},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1037},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/mocks/mock_external.rs","byte_start":139942,"byte_end":139952,"line_start":12,"line_end":12,"column_start":9,"column_end":19},"name":"validators","qualname":"::mocks::mock_external::MockedExternal::validators","value":"std::collections::HashMap<near_primitives_core::types::AccountId, u128>","parent":{"krate":0,"index":1034},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":444},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/mocks/mock_external.rs","byte_start":139997,"byte_end":140011,"line_start":15,"line_end":15,"column_start":12,"column_end":26},"name":"MockedValuePtr","qualname":"::mocks::mock_external::MockedValuePtr","value":"MockedValuePtr {  }","parent":null,"children":[{"krate":0,"index":445}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/mocks/mock_external.rs","byte_start":140070,"byte_end":140073,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<MockedValuePtr>::new","value":"pub fn new<T>(T) -> Self where T: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/mocks/mock_external.rs","byte_start":140438,"byte_end":140441,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<MockedExternal>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/mocks/mock_external.rs","byte_start":140574,"byte_end":140598,"line_start":44,"line_end":44,"column_start":12,"column_end":36},"name":"get_receipt_create_calls","qualname":"<MockedExternal>::get_receipt_create_calls","value":"pub fn get_receipt_create_calls(&Self) -> &Vec<Receipt>","parent":null,"children":[],"decl_id":null,"docs":" Get calls to receipt create that were performed during contract call.\n","sig":null,"attributes":[{"value":"/ Get calls to receipt create that were performed during contract call.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/mocks/mock_external.rs","byte_start":140489,"byte_end":140562,"line_start":43,"line_end":43,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":1042},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/mocks/mock_external.rs","byte_start":145770,"byte_end":145777,"line_start":217,"line_end":217,"column_start":12,"column_end":19},"name":"Receipt","qualname":"::mocks::mock_external::Receipt","value":"Receipt {  }","parent":null,"children":[{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1045}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1102},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/mocks/mock_external.rs","byte_start":145938,"byte_end":145951,"line_start":225,"line_end":225,"column_start":5,"column_end":18},"name":"CreateAccount","qualname":"::mocks::mock_external::Action::CreateAccount","value":"Action::CreateAccount","parent":{"krate":0,"index":1101},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1104},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/mocks/mock_external.rs","byte_start":145957,"byte_end":145971,"line_start":226,"line_end":226,"column_start":5,"column_end":19},"name":"DeployContract","qualname":"::mocks::mock_external::Action::DeployContract","value":"Action::DeployContract(DeployContractAction)","parent":{"krate":0,"index":1101},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1107},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/mocks/mock_external.rs","byte_start":145999,"byte_end":146011,"line_start":227,"line_end":227,"column_start":5,"column_end":17},"name":"FunctionCall","qualname":"::mocks::mock_external::Action::FunctionCall","value":"Action::FunctionCall(FunctionCallAction)","parent":{"krate":0,"index":1101},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1110},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/mocks/mock_external.rs","byte_start":146037,"byte_end":146045,"line_start":228,"line_end":228,"column_start":5,"column_end":13},"name":"Transfer","qualname":"::mocks::mock_external::Action::Transfer","value":"Action::Transfer(TransferAction)","parent":{"krate":0,"index":1101},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1113},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/mocks/mock_external.rs","byte_start":146067,"byte_end":146072,"line_start":229,"line_end":229,"column_start":5,"column_end":10},"name":"Stake","qualname":"::mocks::mock_external::Action::Stake","value":"Action::Stake(StakeAction)","parent":{"krate":0,"index":1101},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1116},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/mocks/mock_external.rs","byte_start":146091,"byte_end":146111,"line_start":230,"line_end":230,"column_start":5,"column_end":25},"name":"AddKeyWithFullAccess","qualname":"::mocks::mock_external::Action::AddKeyWithFullAccess","value":"Action::AddKeyWithFullAccess(AddKeyWithFullAccessAction)","parent":{"krate":0,"index":1101},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1119},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/mocks/mock_external.rs","byte_start":146145,"byte_end":146167,"line_start":231,"line_end":231,"column_start":5,"column_end":27},"name":"AddKeyWithFunctionCall","qualname":"::mocks::mock_external::Action::AddKeyWithFunctionCall","value":"Action::AddKeyWithFunctionCall(AddKeyWithFunctionCallAction)","parent":{"krate":0,"index":1101},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1122},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/mocks/mock_external.rs","byte_start":146203,"byte_end":146212,"line_start":232,"line_end":232,"column_start":5,"column_end":14},"name":"DeleteKey","qualname":"::mocks::mock_external::Action::DeleteKey","value":"Action::DeleteKey(DeleteKeyAction)","parent":{"krate":0,"index":1101},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1125},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/mocks/mock_external.rs","byte_start":146235,"byte_end":146248,"line_start":233,"line_end":233,"column_start":5,"column_end":18},"name":"DeleteAccount","qualname":"::mocks::mock_external::Action::DeleteAccount","value":"Action::DeleteAccount(DeleteAccountAction)","parent":{"krate":0,"index":1101},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1101},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/mocks/mock_external.rs","byte_start":145925,"byte_end":145931,"line_start":224,"line_end":224,"column_start":10,"column_end":16},"name":"Action","qualname":"::mocks::mock_external::Action","value":"pub enum Action {\n    CreateAccount,\n    DeployContract(DeployContractAction),\n    FunctionCall(FunctionCallAction),\n    Transfer(TransferAction),\n    Stake(StakeAction),\n    AddKeyWithFullAccess(AddKeyWithFullAccessAction),\n    AddKeyWithFunctionCall(AddKeyWithFunctionCallAction),\n    DeleteKey(DeleteKeyAction),\n    DeleteAccount(DeleteAccountAction),\n}","parent":null,"children":[{"krate":0,"index":1102},{"krate":0,"index":1104},{"krate":0,"index":1107},{"krate":0,"index":1110},{"krate":0,"index":1113},{"krate":0,"index":1116},{"krate":0,"index":1119},{"krate":0,"index":1122},{"krate":0,"index":1125}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1191},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/mocks/mock_external.rs","byte_start":146333,"byte_end":146353,"line_start":237,"line_end":237,"column_start":12,"column_end":32},"name":"DeployContractAction","qualname":"::mocks::mock_external::DeployContractAction","value":"DeployContractAction { code }","parent":null,"children":[{"krate":0,"index":1192}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1192},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/mocks/mock_external.rs","byte_start":146364,"byte_end":146368,"line_start":238,"line_end":238,"column_start":9,"column_end":13},"name":"code","qualname":"::mocks::mock_external::DeployContractAction::code","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":1191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1244},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/mocks/mock_external.rs","byte_start":146441,"byte_end":146459,"line_start":242,"line_end":242,"column_start":12,"column_end":30},"name":"FunctionCallAction","qualname":"::mocks::mock_external::FunctionCallAction","value":"FunctionCallAction {  }","parent":null,"children":[{"krate":0,"index":1358},{"krate":0,"index":1359},{"krate":0,"index":1245},{"krate":0,"index":1246}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1360},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/mocks/mock_external.rs","byte_start":147048,"byte_end":147062,"line_start":256,"line_end":256,"column_start":12,"column_end":26},"name":"TransferAction","qualname":"::mocks::mock_external::TransferAction","value":"TransferAction {  }","parent":null,"children":[{"krate":0,"index":1361}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1413},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/mocks/mock_external.rs","byte_start":147149,"byte_end":147160,"line_start":261,"line_end":261,"column_start":12,"column_end":23},"name":"StakeAction","qualname":"::mocks::mock_external::StakeAction","value":"StakeAction {  }","parent":null,"children":[{"krate":0,"index":1414},{"krate":0,"index":1495}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1496},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/mocks/mock_external.rs","byte_start":147330,"byte_end":147356,"line_start":268,"line_end":268,"column_start":12,"column_end":38},"name":"AddKeyWithFullAccessAction","qualname":"::mocks::mock_external::AddKeyWithFullAccessAction","value":"AddKeyWithFullAccessAction {  }","parent":null,"children":[{"krate":0,"index":1578},{"krate":0,"index":1497}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1579},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/mocks/mock_external.rs","byte_start":147522,"byte_end":147550,"line_start":275,"line_end":275,"column_start":12,"column_end":40},"name":"AddKeyWithFunctionCallAction","qualname":"::mocks::mock_external::AddKeyWithFunctionCallAction","value":"AddKeyWithFunctionCallAction {  }","parent":null,"children":[{"krate":0,"index":1696},{"krate":0,"index":1580},{"krate":0,"index":1581},{"krate":0,"index":1582},{"krate":0,"index":1697}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1698},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/mocks/mock_external.rs","byte_start":147867,"byte_end":147882,"line_start":286,"line_end":286,"column_start":12,"column_end":27},"name":"DeleteKeyAction","qualname":"::mocks::mock_external::DeleteKeyAction","value":"DeleteKeyAction {  }","parent":null,"children":[{"krate":0,"index":1777}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1778},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/mocks/mock_external.rs","byte_start":148032,"byte_end":148051,"line_start":292,"line_end":292,"column_start":12,"column_end":31},"name":"DeleteAccountAction","qualname":"::mocks::mock_external::DeleteAccountAction","value":"DeleteAccountAction {  }","parent":null,"children":[{"krate":0,"index":1779}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":484},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/mocks/mock_memory.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mock_memory","qualname":"::mocks::mock_memory","value":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/mocks/mock_memory.rs","parent":null,"children":[{"krate":0,"index":485},{"krate":0,"index":1831},{"krate":0,"index":1832},{"krate":0,"index":488}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1831},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/mocks/mock_memory.rs","byte_start":148142,"byte_end":148154,"line_start":4,"line_end":4,"column_start":12,"column_end":24},"name":"MockedMemory","qualname":"::mocks::mock_memory::MockedMemory","value":"MockedMemory {  }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":493},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/serde_with.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"serde_with","qualname":"::serde_with","value":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/serde_with.rs","parent":null,"children":[{"krate":0,"index":494},{"krate":0,"index":516},{"krate":0,"index":535},{"krate":0,"index":557},{"krate":0,"index":595},{"krate":0,"index":617}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":494},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/serde_with.rs","byte_start":148882,"byte_end":148897,"line_start":2,"line_end":2,"column_start":9,"column_end":24},"name":"bytes_as_base64","qualname":"::serde_with::bytes_as_base64","value":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/serde_with.rs","parent":null,"children":[{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":502},{"krate":0,"index":505},{"krate":0,"index":508},{"krate":0,"index":511},{"krate":0,"index":513}],"decl_id":null,"docs":" Serialize `Vec<u8>` as base64 encoding.\n","sig":null,"attributes":[{"value":"/ Serialize `Vec<u8>` as base64 encoding.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/serde_with.rs","byte_start":148830,"byte_end":148873,"line_start":1,"line_end":1,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":511},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/serde_with.rs","byte_start":148998,"byte_end":149007,"line_start":6,"line_end":6,"column_start":12,"column_end":21},"name":"serialize","qualname":"::serde_with::bytes_as_base64::serialize","value":"pub fn serialize<S>(&Vec<u8>, S) -> Result<S::Ok, S::Error> where\nS: Serializer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":513},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/serde_with.rs","byte_start":149180,"byte_end":149191,"line_start":13,"line_end":13,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::serde_with::bytes_as_base64::deserialize","value":"pub fn deserialize<'de, D>(D) -> Result<Vec<u8>, D::Error> where\nD: Deserializer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":516},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/serde_with.rs","byte_start":149473,"byte_end":149485,"line_start":23,"line_end":23,"column_start":9,"column_end":21},"name":"bytes_as_str","qualname":"::serde_with::bytes_as_str","value":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/serde_with.rs","parent":null,"children":[{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":524},{"krate":0,"index":527},{"krate":0,"index":530},{"krate":0,"index":532}],"decl_id":null,"docs":" Serialize `Vec<u8>` as `String`.\n","sig":null,"attributes":[{"value":"/ Serialize `Vec<u8>` as `String`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/serde_with.rs","byte_start":149428,"byte_end":149464,"line_start":22,"line_end":22,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":530},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/serde_with.rs","byte_start":149561,"byte_end":149570,"line_start":26,"line_end":26,"column_start":12,"column_end":21},"name":"serialize","qualname":"::serde_with::bytes_as_str::serialize","value":"pub fn serialize<S>(&Vec<u8>, S) -> Result<S::Ok, S::Error> where\nS: Serializer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":532},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/serde_with.rs","byte_start":149777,"byte_end":149788,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::serde_with::bytes_as_str::deserialize","value":"pub fn deserialize<'de, D>(D) -> Result<Vec<u8>, D::Error> where\nD: Deserializer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":535},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/serde_with.rs","byte_start":150029,"byte_end":150044,"line_start":43,"line_end":43,"column_start":9,"column_end":24},"name":"bytes_as_base58","qualname":"::serde_with::bytes_as_base58","value":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/serde_with.rs","parent":null,"children":[{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":543},{"krate":0,"index":546},{"krate":0,"index":549},{"krate":0,"index":552},{"krate":0,"index":554}],"decl_id":null,"docs":" Serialize `Vec<u8>` as base58 encoding.\n","sig":null,"attributes":[{"value":"/ Serialize `Vec<u8>` as base58 encoding.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/serde_with.rs","byte_start":149977,"byte_end":150020,"line_start":42,"line_end":42,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":552},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/serde_with.rs","byte_start":150145,"byte_end":150154,"line_start":47,"line_end":47,"column_start":12,"column_end":21},"name":"serialize","qualname":"::serde_with::bytes_as_base58::serialize","value":"pub fn serialize<S>(&Vec<u8>, S) -> Result<S::Ok, S::Error> where\nS: Serializer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":554},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/serde_with.rs","byte_start":150339,"byte_end":150350,"line_start":54,"line_end":54,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::serde_with::bytes_as_base58::deserialize","value":"pub fn deserialize<'de, D>(D) -> Result<Vec<u8>, D::Error> where\nD: Deserializer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":557},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/serde_with.rs","byte_start":150651,"byte_end":150667,"line_start":64,"line_end":64,"column_start":9,"column_end":25},"name":"vec_bytes_as_str","qualname":"::serde_with::vec_bytes_as_str","value":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/serde_with.rs","parent":null,"children":[{"krate":0,"index":558},{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":565},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":572},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":579},{"krate":0,"index":582},{"krate":0,"index":584},{"krate":0,"index":586},{"krate":0,"index":592}],"decl_id":null,"docs":" Serialize `Vec<Vec<u8>>` as `Vec<String>`.\n","sig":null,"attributes":[{"value":"/ Serialize `Vec<Vec<u8>>` as `Vec<String>`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/serde_with.rs","byte_start":150596,"byte_end":150642,"line_start":63,"line_end":63,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":582},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/serde_with.rs","byte_start":150827,"byte_end":150836,"line_start":71,"line_end":71,"column_start":12,"column_end":21},"name":"serialize","qualname":"::serde_with::vec_bytes_as_str::serialize","value":"pub fn serialize<S>(&Vec<Vec<u8>>, S) -> Result<S::Ok, S::Error> where\nS: Serializer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":592},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/serde_with.rs","byte_start":151789,"byte_end":151800,"line_start":103,"line_end":103,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::serde_with::vec_bytes_as_str::deserialize","value":"pub fn deserialize<'de, D>(D) -> Result<Vec<Vec<u8>>, D::Error> where\nD: Deserializer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":595},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/serde_with.rs","byte_start":151980,"byte_end":151995,"line_start":111,"line_end":111,"column_start":9,"column_end":24},"name":"u128_dec_format","qualname":"::serde_with::u128_dec_format","value":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/serde_with.rs","parent":null,"children":[{"krate":0,"index":596},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":603},{"krate":0,"index":606},{"krate":0,"index":609},{"krate":0,"index":612},{"krate":0,"index":614}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":612},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/serde_with.rs","byte_start":152111,"byte_end":152120,"line_start":116,"line_end":116,"column_start":12,"column_end":21},"name":"serialize","qualname":"::serde_with::u128_dec_format::serialize","value":"pub fn serialize<S>(&u128, S) -> Result<S::Ok, S::Error> where S: Serializer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":614},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/serde_with.rs","byte_start":152289,"byte_end":152300,"line_start":123,"line_end":123,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::serde_with::u128_dec_format::deserialize","value":"pub fn deserialize<'de, D>(D) -> Result<u128, D::Error> where D: Deserializer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":617},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/serde_with.rs","byte_start":152539,"byte_end":152565,"line_start":132,"line_end":132,"column_start":9,"column_end":35},"name":"u128_dec_format_compatible","qualname":"::serde_with::u128_dec_format_compatible","value":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/serde_with.rs","parent":null,"children":[{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":625},{"krate":0,"index":628},{"krate":0,"index":1841},{"krate":0,"index":1834},{"krate":0,"index":631}],"decl_id":null,"docs":" This in an extension to `u128_dec_format` that serves a compatibility layer role to\n deserialize u128 from a \"small\" JSON number (u64).","sig":null,"attributes":[{"value":"/ This in an extension to `u128_dec_format` that serves a compatibility layer role to","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/serde_with.rs","byte_start":152572,"byte_end":152659,"line_start":133,"line_end":133,"column_start":5,"column_end":92}},{"value":"/ deserialize u128 from a \"small\" JSON number (u64).","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/serde_with.rs","byte_start":152664,"byte_end":152718,"line_start":134,"line_end":134,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/serde_with.rs","byte_start":152723,"byte_end":152726,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ It is unfortunate that we cannot enable \"arbitrary_precision\" feature in","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/serde_with.rs","byte_start":152731,"byte_end":152807,"line_start":136,"line_end":136,"column_start":5,"column_end":81}},{"value":"/ serde_json due to a bug: <https://github.com/serde-rs/json/issues/505>.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/serde_with.rs","byte_start":152812,"byte_end":152887,"line_start":137,"line_end":137,"column_start":5,"column_end":80}}]},{"kind":"Function","id":{"krate":0,"index":631},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/serde_with.rs","byte_start":153114,"byte_end":153125,"line_start":149,"line_end":149,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::serde_with::u128_dec_format_compatible::deserialize","value":"pub fn deserialize<'de, D>(D) -> Result<u128, D::Error> where D: Deserializer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":634},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/types.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"types","qualname":"::types","value":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/types.rs","parent":null,"children":[{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":1848},{"krate":0,"index":1854},{"krate":0,"index":1856},{"krate":0,"index":1857},{"krate":0,"index":1860},{"krate":0,"index":1874},{"krate":0,"index":1925},{"krate":0,"index":647},{"krate":0,"index":1930},{"krate":0,"index":1935},{"krate":0,"index":1937},{"krate":0,"index":1938},{"krate":0,"index":1941},{"krate":0,"index":1955}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":643},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/types.rs","byte_start":153533,"byte_end":153542,"line_start":5,"line_end":5,"column_start":10,"column_end":19},"name":"PublicKey","qualname":"::types::PublicKey","value":"Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":644},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/types.rs","byte_start":153563,"byte_end":153575,"line_start":6,"line_end":6,"column_start":10,"column_end":22},"name":"PromiseIndex","qualname":"::types::PromiseIndex","value":"u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":645},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/types.rs","byte_start":153592,"byte_end":153604,"line_start":7,"line_end":7,"column_start":10,"column_end":22},"name":"ReceiptIndex","qualname":"::types::ReceiptIndex","value":"u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":646},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/types.rs","byte_start":153621,"byte_end":153634,"line_start":8,"line_end":8,"column_start":10,"column_end":23},"name":"IteratorIndex","qualname":"::types::IteratorIndex","value":"u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1927},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/types.rs","byte_start":153827,"byte_end":153832,"line_start":14,"line_end":14,"column_start":5,"column_end":10},"name":"Value","qualname":"::types::ReturnData::Value","value":"ReturnData::Value(Vec<u8>)","parent":{"krate":0,"index":1848},"children":[],"decl_id":null,"docs":" Method returned some value or data.\n","sig":null,"attributes":[{"value":"/ Method returned some value or data.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/types.rs","byte_start":153728,"byte_end":153767,"line_start":12,"line_end":12,"column_start":5,"column_end":44}},{"value":"serde(with = \"crate::serde_with::bytes_as_str\")","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/types.rs","byte_start":153772,"byte_end":153822,"line_start":13,"line_end":13,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1849},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/types.rs","byte_start":153985,"byte_end":153997,"line_start":18,"line_end":18,"column_start":5,"column_end":17},"name":"ReceiptIndex","qualname":"::types::ReturnData::ReceiptIndex","value":"ReturnData::ReceiptIndex(ReceiptIndex)","parent":{"krate":0,"index":1848},"children":[],"decl_id":null,"docs":" The return value of the method should be taken from the return value of another method\n identified through receipt index.\n","sig":null,"attributes":[{"value":"/ The return value of the method should be taken from the return value of another method","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/types.rs","byte_start":153848,"byte_end":153938,"line_start":16,"line_end":16,"column_start":5,"column_end":95}},{"value":"/ identified through receipt index.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/types.rs","byte_start":153943,"byte_end":153980,"line_start":17,"line_end":17,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1852},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/types.rs","byte_start":154070,"byte_end":154074,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"None","qualname":"::types::ReturnData::None","value":"ReturnData::None","parent":{"krate":0,"index":1848},"children":[],"decl_id":null,"docs":" Method hasn't returned any data or promise.\n","sig":null,"attributes":[{"value":"/ Method hasn't returned any data or promise.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/types.rs","byte_start":154018,"byte_end":154065,"line_start":20,"line_end":20,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":1848},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/types.rs","byte_start":153711,"byte_end":153721,"line_start":11,"line_end":11,"column_start":10,"column_end":20},"name":"ReturnData","qualname":"::types::ReturnData","value":"pub enum ReturnData { Value(Vec<u8>), ReceiptIndex(ReceiptIndex), None, }","parent":null,"children":[{"krate":0,"index":1927},{"krate":0,"index":1849},{"krate":0,"index":1852}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/types.rs","byte_start":154159,"byte_end":154167,"line_start":26,"line_end":26,"column_start":12,"column_end":20},"name":"as_value","qualname":"<ReturnData>::as_value","value":"pub fn as_value(Self) -> Option<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Function to extract value from ReturnData.\n","sig":null,"attributes":[{"value":"/ Function to extract value from ReturnData.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/types.rs","byte_start":154101,"byte_end":154147,"line_start":25,"line_end":25,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1931},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/types.rs","byte_start":154642,"byte_end":154650,"line_start":39,"line_end":39,"column_start":5,"column_end":13},"name":"NotReady","qualname":"::types::PromiseResult::NotReady","value":"PromiseResult::NotReady","parent":{"krate":0,"index":1930},"children":[],"decl_id":null,"docs":" Current version of the protocol never returns `PromiseResult::NotReady`.\n","sig":null,"attributes":[{"value":"/ Current version of the protocol never returns `PromiseResult::NotReady`.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/types.rs","byte_start":154561,"byte_end":154637,"line_start":38,"line_end":38,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2006},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/types.rs","byte_start":154711,"byte_end":154721,"line_start":41,"line_end":41,"column_start":5,"column_end":15},"name":"Successful","qualname":"::types::PromiseResult::Successful","value":"PromiseResult::Successful(Vec<u8>)","parent":{"krate":0,"index":1930},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(with = \"crate::serde_with::bytes_as_str\")","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/types.rs","byte_start":154656,"byte_end":154706,"line_start":40,"line_end":40,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1933},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/types.rs","byte_start":154736,"byte_end":154742,"line_start":42,"line_end":42,"column_start":5,"column_end":11},"name":"Failed","qualname":"::types::PromiseResult::Failed","value":"PromiseResult::Failed","parent":{"krate":0,"index":1930},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1930},"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/types.rs","byte_start":154541,"byte_end":154554,"line_start":37,"line_end":37,"column_start":10,"column_end":23},"name":"PromiseResult","qualname":"::types::PromiseResult","value":"pub enum PromiseResult { NotReady, Successful(Vec<u8>), Failed, }","parent":null,"children":[{"krate":0,"index":1931},{"krate":0,"index":2006},{"krate":0,"index":1933}],"decl_id":null,"docs":" When there is a callback attached to one or more contract calls the execution results of these\n calls are available to the contract invoked through the callback.\n","sig":null,"attributes":[{"value":"/ When there is a callback attached to one or more contract calls the execution results of these","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/types.rs","byte_start":154311,"byte_end":154409,"line_start":34,"line_end":34,"column_start":1,"column_end":99}},{"value":"/ calls are available to the contract invoked through the callback.","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/types.rs","byte_start":154410,"byte_end":154479,"line_start":35,"line_end":35,"column_start":1,"column_end":70}}]}],"impls":[{"id":2,"kind":"Inherent","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":3783,"byte_end":3792,"line_start":66,"line_end":66,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":22718,"byte_end":22728,"line_start":62,"line_end":62,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":22843,"byte_end":22853,"line_start":68,"line_end":68,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":146},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":160},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":37811,"byte_end":37818,"line_start":101,"line_end":101,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":1011},{"krate":0,"index":1013},{"krate":0,"index":1015},{"krate":0,"index":1017},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":1019},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":323},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":349},{"krate":0,"index":353},{"krate":0,"index":357},{"krate":0,"index":361},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":138937,"byte_end":138946,"line_start":2543,"line_end":2543,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/mocks/mock_external.rs","byte_start":140042,"byte_end":140056,"line_start":19,"line_end":19,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/mocks/mock_external.rs","byte_start":140220,"byte_end":140234,"line_start":28,"line_end":28,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":450},{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/mocks/mock_external.rs","byte_start":140410,"byte_end":140424,"line_start":38,"line_end":38,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":453},{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/mocks/mock_external.rs","byte_start":140738,"byte_end":140752,"line_start":52,"line_end":52,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/mocks/mock_memory.rs","byte_start":148179,"byte_end":148191,"line_start":6,"line_end":6,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/serde_with.rs","byte_start":151229,"byte_end":151244,"line_start":84,"line_end":84,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/types.rs","byte_start":154084,"byte_end":154094,"line_start":24,"line_end":24,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/lib.rs","byte_start":145,"byte_end":156,"line_start":7,"line_end":7,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":93}},{"kind":"Mod","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/lib.rs","byte_start":177,"byte_end":182,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":412}},{"kind":"Mod","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/mocks/mod.rs","byte_start":139526,"byte_end":139539,"line_start":1,"line_end":1,"column_start":9,"column_end":22},"ref_id":{"krate":0,"index":413}},{"kind":"Mod","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/mocks/mod.rs","byte_start":139549,"byte_end":139560,"line_start":2,"line_end":2,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":484}},{"kind":"Mod","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/lib.rs","byte_start":192,"byte_end":202,"line_start":10,"line_end":10,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":493}},{"kind":"Mod","span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/lib.rs","byte_start":212,"byte_end":217,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":634}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/context.rs","byte_start":3783,"byte_end":3792,"line_start":66,"line_end":66,"column_start":6,"column_end":15},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":702},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":22718,"byte_end":22728,"line_start":62,"line_end":62,"column_start":21,"column_end":31},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":131},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/gas_counter.rs","byte_start":22843,"byte_end":22853,"line_start":68,"line_end":68,"column_start":6,"column_end":16},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":131},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":37811,"byte_end":37818,"line_start":101,"line_end":101,"column_start":10,"column_end":17},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":283},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/logic.rs","byte_start":138937,"byte_end":138946,"line_start":2543,"line_end":2543,"column_start":26,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1020},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/mocks/mock_external.rs","byte_start":140042,"byte_end":140056,"line_start":19,"line_end":19,"column_start":6,"column_end":20},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":444},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/mocks/mock_external.rs","byte_start":140220,"byte_end":140234,"line_start":28,"line_end":28,"column_start":19,"column_end":33},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":444},"to":{"krate":0,"index":69}},{"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/mocks/mock_external.rs","byte_start":140410,"byte_end":140424,"line_start":38,"line_end":38,"column_start":6,"column_end":20},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1034},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/mocks/mock_external.rs","byte_start":140738,"byte_end":140752,"line_start":52,"line_end":52,"column_start":19,"column_end":33},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1034},"to":{"krate":0,"index":72}},{"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/mocks/mock_memory.rs","byte_start":148179,"byte_end":148191,"line_start":6,"line_end":6,"column_start":21,"column_end":33},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1831},"to":{"krate":0,"index":62}},{"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/serde_with.rs","byte_start":151229,"byte_end":151244,"line_start":84,"line_end":84,"column_start":32,"column_end":47},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":584},"to":{"krate":27,"index":1556}},{"span":{"file_name":"/home/svesali/.cargo/registry/src/github.com-1ecc6299db9ec823/near-vm-logic-0.10.0/src/types.rs","byte_start":154084,"byte_end":154094,"line_start":24,"line_end":24,"column_start":6,"column_end":16},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1848},"to":{"krate":4294967295,"index":4294967295}}]}